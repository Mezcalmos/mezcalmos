/* tslint:disable */
/* eslint-disable */

export type ValueTypes = {
    /** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
["Boolean_comparison_exp"]: {
	_eq?:boolean,
	_gt?:boolean,
	_gte?:boolean,
	_in?:boolean[],
	_is_null?:boolean,
	_lt?:boolean,
	_lte?:boolean,
	_neq?:boolean,
	_nin?:boolean[]
};
	/** columns and relationships of "chat" */
["chat"]: AliasType<{
chat_info?: [{	/** JSON select path */
	path?:string},true],
chat_participants?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["chat_participant_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["chat_participant_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["chat_participant_bool_exp"]},ValueTypes["chat_participant"]],
chat_participants_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["chat_participant_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["chat_participant_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["chat_participant_bool_exp"]},ValueTypes["chat_participant_aggregate"]],
	creation_time?:true,
	id?:true,
messages?: [{	/** JSON select path */
	path?:string},true],
		__typename?: true
}>;
	/** aggregated selection of "chat" */
["chat_aggregate"]: AliasType<{
	aggregate?:ValueTypes["chat_aggregate_fields"],
	nodes?:ValueTypes["chat"],
		__typename?: true
}>;
	/** aggregate fields of "chat" */
["chat_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["chat_avg_fields"],
count?: [{	columns?:ValueTypes["chat_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["chat_max_fields"],
	min?:ValueTypes["chat_min_fields"],
	stddev?:ValueTypes["chat_stddev_fields"],
	stddev_pop?:ValueTypes["chat_stddev_pop_fields"],
	stddev_samp?:ValueTypes["chat_stddev_samp_fields"],
	sum?:ValueTypes["chat_sum_fields"],
	var_pop?:ValueTypes["chat_var_pop_fields"],
	var_samp?:ValueTypes["chat_var_samp_fields"],
	variance?:ValueTypes["chat_variance_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["chat_append_input"]: {
	chat_info?:ValueTypes["jsonb"],
	messages?:ValueTypes["jsonb"]
};
	/** aggregate avg on columns */
["chat_avg_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "chat". All fields are combined with a logical 'AND'. */
["chat_bool_exp"]: {
	_and?:ValueTypes["chat_bool_exp"][],
	_not?:ValueTypes["chat_bool_exp"],
	_or?:ValueTypes["chat_bool_exp"][],
	chat_info?:ValueTypes["jsonb_comparison_exp"],
	chat_participants?:ValueTypes["chat_participant_bool_exp"],
	creation_time?:ValueTypes["timestamptz_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	messages?:ValueTypes["jsonb_comparison_exp"]
};
	/** unique or primary key constraints on table "chat" */
["chat_constraint"]:chat_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["chat_delete_at_path_input"]: {
	chat_info?:string[],
	messages?:string[]
};
	/** delete the array element with specified index (negative integers count from the
end). throws an error if top level container is not an array */
["chat_delete_elem_input"]: {
	chat_info?:number,
	messages?:number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["chat_delete_key_input"]: {
	chat_info?:string,
	messages?:string
};
	/** input type for incrementing numeric columns in table "chat" */
["chat_inc_input"]: {
	id?:number
};
	/** input type for inserting data into table "chat" */
["chat_insert_input"]: {
	chat_info?:ValueTypes["jsonb"],
	chat_participants?:ValueTypes["chat_participant_arr_rel_insert_input"],
	creation_time?:ValueTypes["timestamptz"],
	id?:number,
	messages?:ValueTypes["jsonb"]
};
	/** aggregate max on columns */
["chat_max_fields"]: AliasType<{
	creation_time?:true,
	id?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["chat_min_fields"]: AliasType<{
	creation_time?:true,
	id?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "chat" */
["chat_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["chat"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "chat" */
["chat_obj_rel_insert_input"]: {
	data:ValueTypes["chat_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["chat_on_conflict"]
};
	/** on_conflict condition type for table "chat" */
["chat_on_conflict"]: {
	constraint:ValueTypes["chat_constraint"],
	update_columns:ValueTypes["chat_update_column"][],
	where?:ValueTypes["chat_bool_exp"]
};
	/** Ordering options when selecting data from "chat". */
["chat_order_by"]: {
	chat_info?:ValueTypes["order_by"],
	chat_participants_aggregate?:ValueTypes["chat_participant_aggregate_order_by"],
	creation_time?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	messages?:ValueTypes["order_by"]
};
	/** columns and relationships of "chat_participant" */
["chat_participant"]: AliasType<{
	app_type_id?:true,
	/** An object relationship */
	chat?:ValueTypes["chat"],
	chat_id?:true,
	id?:true,
	/** An object relationship */
	notification_info?:ValueTypes["notification_info"],
	participant_id?:true,
	/** An object relationship */
	user?:ValueTypes["user"],
		__typename?: true
}>;
	/** aggregated selection of "chat_participant" */
["chat_participant_aggregate"]: AliasType<{
	aggregate?:ValueTypes["chat_participant_aggregate_fields"],
	nodes?:ValueTypes["chat_participant"],
		__typename?: true
}>;
	/** aggregate fields of "chat_participant" */
["chat_participant_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["chat_participant_avg_fields"],
count?: [{	columns?:ValueTypes["chat_participant_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["chat_participant_max_fields"],
	min?:ValueTypes["chat_participant_min_fields"],
	stddev?:ValueTypes["chat_participant_stddev_fields"],
	stddev_pop?:ValueTypes["chat_participant_stddev_pop_fields"],
	stddev_samp?:ValueTypes["chat_participant_stddev_samp_fields"],
	sum?:ValueTypes["chat_participant_sum_fields"],
	var_pop?:ValueTypes["chat_participant_var_pop_fields"],
	var_samp?:ValueTypes["chat_participant_var_samp_fields"],
	variance?:ValueTypes["chat_participant_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "chat_participant" */
["chat_participant_aggregate_order_by"]: {
	avg?:ValueTypes["chat_participant_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["chat_participant_max_order_by"],
	min?:ValueTypes["chat_participant_min_order_by"],
	stddev?:ValueTypes["chat_participant_stddev_order_by"],
	stddev_pop?:ValueTypes["chat_participant_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["chat_participant_stddev_samp_order_by"],
	sum?:ValueTypes["chat_participant_sum_order_by"],
	var_pop?:ValueTypes["chat_participant_var_pop_order_by"],
	var_samp?:ValueTypes["chat_participant_var_samp_order_by"],
	variance?:ValueTypes["chat_participant_variance_order_by"]
};
	/** input type for inserting array relation for remote table "chat_participant" */
["chat_participant_arr_rel_insert_input"]: {
	data:ValueTypes["chat_participant_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["chat_participant_on_conflict"]
};
	/** aggregate avg on columns */
["chat_participant_avg_fields"]: AliasType<{
	chat_id?:true,
	id?:true,
	participant_id?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "chat_participant" */
["chat_participant_avg_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	participant_id?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "chat_participant". All fields are combined with a logical 'AND'. */
["chat_participant_bool_exp"]: {
	_and?:ValueTypes["chat_participant_bool_exp"][],
	_not?:ValueTypes["chat_participant_bool_exp"],
	_or?:ValueTypes["chat_participant_bool_exp"][],
	app_type_id?:ValueTypes["String_comparison_exp"],
	chat?:ValueTypes["chat_bool_exp"],
	chat_id?:ValueTypes["Int_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	notification_info?:ValueTypes["notification_info_bool_exp"],
	participant_id?:ValueTypes["Int_comparison_exp"],
	user?:ValueTypes["user_bool_exp"]
};
	/** unique or primary key constraints on table "chat_participant" */
["chat_participant_constraint"]:chat_participant_constraint;
	/** input type for incrementing numeric columns in table "chat_participant" */
["chat_participant_inc_input"]: {
	chat_id?:number,
	id?:number,
	participant_id?:number
};
	/** input type for inserting data into table "chat_participant" */
["chat_participant_insert_input"]: {
	app_type_id?:string,
	chat?:ValueTypes["chat_obj_rel_insert_input"],
	chat_id?:number,
	id?:number,
	notification_info?:ValueTypes["notification_info_obj_rel_insert_input"],
	participant_id?:number,
	user?:ValueTypes["user_obj_rel_insert_input"]
};
	/** aggregate max on columns */
["chat_participant_max_fields"]: AliasType<{
	app_type_id?:true,
	chat_id?:true,
	id?:true,
	participant_id?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "chat_participant" */
["chat_participant_max_order_by"]: {
	app_type_id?:ValueTypes["order_by"],
	chat_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	participant_id?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["chat_participant_min_fields"]: AliasType<{
	app_type_id?:true,
	chat_id?:true,
	id?:true,
	participant_id?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "chat_participant" */
["chat_participant_min_order_by"]: {
	app_type_id?:ValueTypes["order_by"],
	chat_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	participant_id?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "chat_participant" */
["chat_participant_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["chat_participant"],
		__typename?: true
}>;
	/** on_conflict condition type for table "chat_participant" */
["chat_participant_on_conflict"]: {
	constraint:ValueTypes["chat_participant_constraint"],
	update_columns:ValueTypes["chat_participant_update_column"][],
	where?:ValueTypes["chat_participant_bool_exp"]
};
	/** Ordering options when selecting data from "chat_participant". */
["chat_participant_order_by"]: {
	app_type_id?:ValueTypes["order_by"],
	chat?:ValueTypes["chat_order_by"],
	chat_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	notification_info?:ValueTypes["notification_info_order_by"],
	participant_id?:ValueTypes["order_by"],
	user?:ValueTypes["user_order_by"]
};
	/** primary key columns input for table: chat_participant */
["chat_participant_pk_columns_input"]: {
	id:number
};
	/** select columns of table "chat_participant" */
["chat_participant_select_column"]:chat_participant_select_column;
	/** input type for updating data in table "chat_participant" */
["chat_participant_set_input"]: {
	app_type_id?:string,
	chat_id?:number,
	id?:number,
	participant_id?:number
};
	/** aggregate stddev on columns */
["chat_participant_stddev_fields"]: AliasType<{
	chat_id?:true,
	id?:true,
	participant_id?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "chat_participant" */
["chat_participant_stddev_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	participant_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["chat_participant_stddev_pop_fields"]: AliasType<{
	chat_id?:true,
	id?:true,
	participant_id?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "chat_participant" */
["chat_participant_stddev_pop_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	participant_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["chat_participant_stddev_samp_fields"]: AliasType<{
	chat_id?:true,
	id?:true,
	participant_id?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "chat_participant" */
["chat_participant_stddev_samp_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	participant_id?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "chat_participant" */
["chat_participant_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["chat_participant_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["chat_participant_stream_cursor_value_input"]: {
	app_type_id?:string,
	chat_id?:number,
	id?:number,
	participant_id?:number
};
	/** aggregate sum on columns */
["chat_participant_sum_fields"]: AliasType<{
	chat_id?:true,
	id?:true,
	participant_id?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "chat_participant" */
["chat_participant_sum_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	participant_id?:ValueTypes["order_by"]
};
	/** update columns of table "chat_participant" */
["chat_participant_update_column"]:chat_participant_update_column;
	["chat_participant_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["chat_participant_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["chat_participant_set_input"],
	where:ValueTypes["chat_participant_bool_exp"]
};
	/** aggregate var_pop on columns */
["chat_participant_var_pop_fields"]: AliasType<{
	chat_id?:true,
	id?:true,
	participant_id?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "chat_participant" */
["chat_participant_var_pop_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	participant_id?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["chat_participant_var_samp_fields"]: AliasType<{
	chat_id?:true,
	id?:true,
	participant_id?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "chat_participant" */
["chat_participant_var_samp_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	participant_id?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["chat_participant_variance_fields"]: AliasType<{
	chat_id?:true,
	id?:true,
	participant_id?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "chat_participant" */
["chat_participant_variance_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	participant_id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: chat */
["chat_pk_columns_input"]: {
	id:number
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["chat_prepend_input"]: {
	chat_info?:ValueTypes["jsonb"],
	messages?:ValueTypes["jsonb"]
};
	/** select columns of table "chat" */
["chat_select_column"]:chat_select_column;
	/** input type for updating data in table "chat" */
["chat_set_input"]: {
	chat_info?:ValueTypes["jsonb"],
	creation_time?:ValueTypes["timestamptz"],
	id?:number,
	messages?:ValueTypes["jsonb"]
};
	/** aggregate stddev on columns */
["chat_stddev_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["chat_stddev_pop_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["chat_stddev_samp_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "chat" */
["chat_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["chat_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["chat_stream_cursor_value_input"]: {
	chat_info?:ValueTypes["jsonb"],
	creation_time?:ValueTypes["timestamptz"],
	id?:number,
	messages?:ValueTypes["jsonb"]
};
	/** aggregate sum on columns */
["chat_sum_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** update columns of table "chat" */
["chat_update_column"]:chat_update_column;
	["chat_updates"]: {
	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["chat_append_input"],
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["chat_delete_at_path_input"],
	/** delete the array element with specified index (negative integers count from
the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["chat_delete_elem_input"],
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["chat_delete_key_input"],
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["chat_inc_input"],
	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["chat_prepend_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["chat_set_input"],
	where:ValueTypes["chat_bool_exp"]
};
	/** aggregate var_pop on columns */
["chat_var_pop_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["chat_var_samp_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["chat_variance_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** ordering argument of a cursor */
["cursor_ordering"]:cursor_ordering;
	/** columns and relationships of "customer" */
["customer"]: AliasType<{
	app_version?:true,
	/** An object relationship */
	cart?:ValueTypes["restaurant_cart"],
deliveries?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["delivery_order_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["delivery_order_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["delivery_order_bool_exp"]},ValueTypes["delivery_order"]],
deliveries_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["delivery_order_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["delivery_order_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["delivery_order_bool_exp"]},ValueTypes["delivery_order_aggregate"]],
	/** A computed field, executes function "customer_notification_token" */
	notification_token?:true,
saved_locations?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["saved_location_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["saved_location_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["saved_location_bool_exp"]},ValueTypes["saved_location"]],
saved_locations_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["saved_location_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["saved_location_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["saved_location_bool_exp"]},ValueTypes["saved_location_aggregate"]],
	/** An object relationship */
	user?:ValueTypes["user"],
	user_id?:true,
		__typename?: true
}>;
	/** aggregated selection of "customer" */
["customer_aggregate"]: AliasType<{
	aggregate?:ValueTypes["customer_aggregate_fields"],
	nodes?:ValueTypes["customer"],
		__typename?: true
}>;
	/** aggregate fields of "customer" */
["customer_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["customer_avg_fields"],
count?: [{	columns?:ValueTypes["customer_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["customer_max_fields"],
	min?:ValueTypes["customer_min_fields"],
	stddev?:ValueTypes["customer_stddev_fields"],
	stddev_pop?:ValueTypes["customer_stddev_pop_fields"],
	stddev_samp?:ValueTypes["customer_stddev_samp_fields"],
	sum?:ValueTypes["customer_sum_fields"],
	var_pop?:ValueTypes["customer_var_pop_fields"],
	var_samp?:ValueTypes["customer_var_samp_fields"],
	variance?:ValueTypes["customer_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["customer_avg_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "customer". All fields are combined with a logical 'AND'. */
["customer_bool_exp"]: {
	_and?:ValueTypes["customer_bool_exp"][],
	_not?:ValueTypes["customer_bool_exp"],
	_or?:ValueTypes["customer_bool_exp"][],
	app_version?:ValueTypes["String_comparison_exp"],
	cart?:ValueTypes["restaurant_cart_bool_exp"],
	deliveries?:ValueTypes["delivery_order_bool_exp"],
	notification_token?:ValueTypes["String_comparison_exp"],
	saved_locations?:ValueTypes["saved_location_bool_exp"],
	user?:ValueTypes["user_bool_exp"],
	user_id?:ValueTypes["Int_comparison_exp"]
};
	/** unique or primary key constraints on table "customer" */
["customer_constraint"]:customer_constraint;
	/** input type for incrementing numeric columns in table "customer" */
["customer_inc_input"]: {
	user_id?:number
};
	/** input type for inserting data into table "customer" */
["customer_insert_input"]: {
	app_version?:string,
	cart?:ValueTypes["restaurant_cart_obj_rel_insert_input"],
	deliveries?:ValueTypes["delivery_order_arr_rel_insert_input"],
	saved_locations?:ValueTypes["saved_location_arr_rel_insert_input"],
	user?:ValueTypes["user_obj_rel_insert_input"],
	user_id?:number
};
	/** aggregate max on columns */
["customer_max_fields"]: AliasType<{
	app_version?:true,
	user_id?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["customer_min_fields"]: AliasType<{
	app_version?:true,
	user_id?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "customer" */
["customer_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["customer"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "customer" */
["customer_obj_rel_insert_input"]: {
	data:ValueTypes["customer_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["customer_on_conflict"]
};
	/** on_conflict condition type for table "customer" */
["customer_on_conflict"]: {
	constraint:ValueTypes["customer_constraint"],
	update_columns:ValueTypes["customer_update_column"][],
	where?:ValueTypes["customer_bool_exp"]
};
	/** Ordering options when selecting data from "customer". */
["customer_order_by"]: {
	app_version?:ValueTypes["order_by"],
	cart?:ValueTypes["restaurant_cart_order_by"],
	deliveries_aggregate?:ValueTypes["delivery_order_aggregate_order_by"],
	notification_token?:ValueTypes["order_by"],
	saved_locations_aggregate?:ValueTypes["saved_location_aggregate_order_by"],
	user?:ValueTypes["user_order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: customer */
["customer_pk_columns_input"]: {
	user_id:number
};
	/** select columns of table "customer" */
["customer_select_column"]:customer_select_column;
	/** input type for updating data in table "customer" */
["customer_set_input"]: {
	app_version?:string,
	user_id?:number
};
	/** aggregate stddev on columns */
["customer_stddev_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["customer_stddev_pop_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["customer_stddev_samp_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "customer" */
["customer_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["customer_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["customer_stream_cursor_value_input"]: {
	app_version?:string,
	user_id?:number
};
	/** aggregate sum on columns */
["customer_sum_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** update columns of table "customer" */
["customer_update_column"]:customer_update_column;
	["customer_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["customer_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["customer_set_input"],
	where:ValueTypes["customer_bool_exp"]
};
	/** aggregate var_pop on columns */
["customer_var_pop_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["customer_var_samp_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["customer_variance_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** columns and relationships of "deliverer" */
["deliverer"]: AliasType<{
	app_version?:true,
	current_location?:true,
	delivery_company_id?:true,
	delivery_company_type?:true,
	id?:true,
	notification_info_id?:true,
	/** A computed field, executes function "driver_notification_token" */
	notification_token?:true,
	online?:true,
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	/** awaiting_approval, authorized, banned */
	status?:true,
	/** An object relationship */
	user?:ValueTypes["user"],
	user_id?:true,
		__typename?: true
}>;
	/** aggregated selection of "deliverer" */
["deliverer_aggregate"]: AliasType<{
	aggregate?:ValueTypes["deliverer_aggregate_fields"],
	nodes?:ValueTypes["deliverer"],
		__typename?: true
}>;
	/** aggregate fields of "deliverer" */
["deliverer_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["deliverer_avg_fields"],
count?: [{	columns?:ValueTypes["deliverer_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["deliverer_max_fields"],
	min?:ValueTypes["deliverer_min_fields"],
	stddev?:ValueTypes["deliverer_stddev_fields"],
	stddev_pop?:ValueTypes["deliverer_stddev_pop_fields"],
	stddev_samp?:ValueTypes["deliverer_stddev_samp_fields"],
	sum?:ValueTypes["deliverer_sum_fields"],
	var_pop?:ValueTypes["deliverer_var_pop_fields"],
	var_samp?:ValueTypes["deliverer_var_samp_fields"],
	variance?:ValueTypes["deliverer_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["deliverer_avg_fields"]: AliasType<{
	delivery_company_id?:true,
	id?:true,
	notification_info_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "deliverer". All fields are combined with a logical 'AND'. */
["deliverer_bool_exp"]: {
	_and?:ValueTypes["deliverer_bool_exp"][],
	_not?:ValueTypes["deliverer_bool_exp"],
	_or?:ValueTypes["deliverer_bool_exp"][],
	app_version?:ValueTypes["String_comparison_exp"],
	current_location?:ValueTypes["geography_comparison_exp"],
	delivery_company_id?:ValueTypes["Int_comparison_exp"],
	delivery_company_type?:ValueTypes["String_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	notification_info_id?:ValueTypes["Int_comparison_exp"],
	notification_token?:ValueTypes["String_comparison_exp"],
	online?:ValueTypes["Boolean_comparison_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	status?:ValueTypes["String_comparison_exp"],
	user?:ValueTypes["user_bool_exp"],
	user_id?:ValueTypes["Int_comparison_exp"]
};
	/** unique or primary key constraints on table "deliverer" */
["deliverer_constraint"]:deliverer_constraint;
	/** input type for incrementing numeric columns in table "deliverer" */
["deliverer_inc_input"]: {
	delivery_company_id?:number,
	id?:number,
	notification_info_id?:number,
	user_id?:number
};
	/** input type for inserting data into table "deliverer" */
["deliverer_insert_input"]: {
	app_version?:string,
	current_location?:ValueTypes["geography"],
	delivery_company_id?:number,
	delivery_company_type?:string,
	id?:number,
	notification_info_id?:number,
	online?:boolean,
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	/** awaiting_approval, authorized, banned */
	status?:string,
	user?:ValueTypes["user_obj_rel_insert_input"],
	user_id?:number
};
	/** aggregate max on columns */
["deliverer_max_fields"]: AliasType<{
	app_version?:true,
	delivery_company_id?:true,
	delivery_company_type?:true,
	id?:true,
	notification_info_id?:true,
	/** awaiting_approval, authorized, banned */
	status?:true,
	user_id?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["deliverer_min_fields"]: AliasType<{
	app_version?:true,
	delivery_company_id?:true,
	delivery_company_type?:true,
	id?:true,
	notification_info_id?:true,
	/** awaiting_approval, authorized, banned */
	status?:true,
	user_id?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "deliverer" */
["deliverer_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["deliverer"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "deliverer" */
["deliverer_obj_rel_insert_input"]: {
	data:ValueTypes["deliverer_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["deliverer_on_conflict"]
};
	/** on_conflict condition type for table "deliverer" */
["deliverer_on_conflict"]: {
	constraint:ValueTypes["deliverer_constraint"],
	update_columns:ValueTypes["deliverer_update_column"][],
	where?:ValueTypes["deliverer_bool_exp"]
};
	/** Ordering options when selecting data from "deliverer". */
["deliverer_order_by"]: {
	app_version?:ValueTypes["order_by"],
	current_location?:ValueTypes["order_by"],
	delivery_company_id?:ValueTypes["order_by"],
	delivery_company_type?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	notification_info_id?:ValueTypes["order_by"],
	notification_token?:ValueTypes["order_by"],
	online?:ValueTypes["order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	status?:ValueTypes["order_by"],
	user?:ValueTypes["user_order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: deliverer */
["deliverer_pk_columns_input"]: {
	id:number
};
	/** select columns of table "deliverer" */
["deliverer_select_column"]:deliverer_select_column;
	/** input type for updating data in table "deliverer" */
["deliverer_set_input"]: {
	app_version?:string,
	current_location?:ValueTypes["geography"],
	delivery_company_id?:number,
	delivery_company_type?:string,
	id?:number,
	notification_info_id?:number,
	online?:boolean,
	/** awaiting_approval, authorized, banned */
	status?:string,
	user_id?:number
};
	/** aggregate stddev on columns */
["deliverer_stddev_fields"]: AliasType<{
	delivery_company_id?:true,
	id?:true,
	notification_info_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["deliverer_stddev_pop_fields"]: AliasType<{
	delivery_company_id?:true,
	id?:true,
	notification_info_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["deliverer_stddev_samp_fields"]: AliasType<{
	delivery_company_id?:true,
	id?:true,
	notification_info_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "deliverer" */
["deliverer_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["deliverer_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["deliverer_stream_cursor_value_input"]: {
	app_version?:string,
	current_location?:ValueTypes["geography"],
	delivery_company_id?:number,
	delivery_company_type?:string,
	id?:number,
	notification_info_id?:number,
	online?:boolean,
	/** awaiting_approval, authorized, banned */
	status?:string,
	user_id?:number
};
	/** aggregate sum on columns */
["deliverer_sum_fields"]: AliasType<{
	delivery_company_id?:true,
	id?:true,
	notification_info_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** update columns of table "deliverer" */
["deliverer_update_column"]:deliverer_update_column;
	["deliverer_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["deliverer_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["deliverer_set_input"],
	where:ValueTypes["deliverer_bool_exp"]
};
	/** aggregate var_pop on columns */
["deliverer_var_pop_fields"]: AliasType<{
	delivery_company_id?:true,
	id?:true,
	notification_info_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["deliverer_var_samp_fields"]: AliasType<{
	delivery_company_id?:true,
	id?:true,
	notification_info_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["deliverer_variance_fields"]: AliasType<{
	delivery_company_id?:true,
	id?:true,
	notification_info_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** columns and relationships of "delivery_order" */
["delivery_order"]: AliasType<{
	actual_arrival_at_dropoff_time?:true,
	actual_arrival_at_pickup_time?:true,
	actual_delivered_time?:true,
	actual_package_ready_time?:true,
	cancellation_time?:true,
	/** An object relationship */
	chat_with_customer?:ValueTypes["chat"],
	chat_with_customer_id?:true,
	/** An object relationship */
	chat_with_service_provider?:ValueTypes["chat"],
	chat_with_service_provider_id?:true,
	current_gps?:true,
	customer_id?:true,
	/** An object relationship */
	customer_review_by_driver?:ValueTypes["review"],
	customer_review_by_driver_id?:true,
	/** An object relationship */
	deliverer?:ValueTypes["deliverer"],
	/** restaurant, delivery */
	deliverer_app_type_id?:true,
	deliverer_id?:true,
	delivery_cost?:true,
	/** An object relationship */
	driver_review_by_customer?:ValueTypes["review"],
	driver_review_by_customer_id?:true,
	/** An object relationship */
	driver_review_by_service_provider?:ValueTypes["review"],
	driver_review_by_service_provider_id?:true,
	dropoff_address?:true,
	dropoff_gps?:true,
	estimated_arrival_at_dropoff_time?:true,
	estimated_arrival_at_pickup_time?:true,
	estimated_package_ready_time?:true,
	id?:true,
	/** A computed field, executes function "delivery_notification_token" */
	notification_token?:true,
	order_time?:true,
	package_cost?:true,
	payment_type?:true,
	pickup_address?:true,
	pickup_gps?:true,
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	service_provider_id?:true,
	/** An object relationship */
	service_provider_review_by_driver?:ValueTypes["review"],
	service_provider_review_by_driver_id?:true,
	service_provider_type?:true,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:true,
	stripe_payment_id?:true,
	/** in meters */
	trip_distance?:true,
	/** in seconds */
	trip_duration?:true,
	trip_polyline?:true,
		__typename?: true
}>;
	/** aggregated selection of "delivery_order" */
["delivery_order_aggregate"]: AliasType<{
	aggregate?:ValueTypes["delivery_order_aggregate_fields"],
	nodes?:ValueTypes["delivery_order"],
		__typename?: true
}>;
	/** aggregate fields of "delivery_order" */
["delivery_order_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["delivery_order_avg_fields"],
count?: [{	columns?:ValueTypes["delivery_order_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["delivery_order_max_fields"],
	min?:ValueTypes["delivery_order_min_fields"],
	stddev?:ValueTypes["delivery_order_stddev_fields"],
	stddev_pop?:ValueTypes["delivery_order_stddev_pop_fields"],
	stddev_samp?:ValueTypes["delivery_order_stddev_samp_fields"],
	sum?:ValueTypes["delivery_order_sum_fields"],
	var_pop?:ValueTypes["delivery_order_var_pop_fields"],
	var_samp?:ValueTypes["delivery_order_var_samp_fields"],
	variance?:ValueTypes["delivery_order_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "delivery_order" */
["delivery_order_aggregate_order_by"]: {
	avg?:ValueTypes["delivery_order_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["delivery_order_max_order_by"],
	min?:ValueTypes["delivery_order_min_order_by"],
	stddev?:ValueTypes["delivery_order_stddev_order_by"],
	stddev_pop?:ValueTypes["delivery_order_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["delivery_order_stddev_samp_order_by"],
	sum?:ValueTypes["delivery_order_sum_order_by"],
	var_pop?:ValueTypes["delivery_order_var_pop_order_by"],
	var_samp?:ValueTypes["delivery_order_var_samp_order_by"],
	variance?:ValueTypes["delivery_order_variance_order_by"]
};
	/** input type for inserting array relation for remote table "delivery_order" */
["delivery_order_arr_rel_insert_input"]: {
	data:ValueTypes["delivery_order_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["delivery_order_on_conflict"]
};
	/** aggregate avg on columns */
["delivery_order_avg_fields"]: AliasType<{
	chat_with_customer_id?:true,
	chat_with_service_provider_id?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	delivery_cost?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	id?:true,
	package_cost?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	stripe_payment_id?:true,
	/** in meters */
	trip_distance?:true,
	/** in seconds */
	trip_duration?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "delivery_order" */
["delivery_order_avg_order_by"]: {
	chat_with_customer_id?:ValueTypes["order_by"],
	chat_with_service_provider_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	customer_review_by_driver_id?:ValueTypes["order_by"],
	deliverer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	driver_review_by_customer_id?:ValueTypes["order_by"],
	driver_review_by_service_provider_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	package_cost?:ValueTypes["order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_review_by_driver_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	/** in meters */
	trip_distance?:ValueTypes["order_by"],
	/** in seconds */
	trip_duration?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "delivery_order". All fields are combined with a logical 'AND'. */
["delivery_order_bool_exp"]: {
	_and?:ValueTypes["delivery_order_bool_exp"][],
	_not?:ValueTypes["delivery_order_bool_exp"],
	_or?:ValueTypes["delivery_order_bool_exp"][],
	actual_arrival_at_dropoff_time?:ValueTypes["timestamptz_comparison_exp"],
	actual_arrival_at_pickup_time?:ValueTypes["timestamptz_comparison_exp"],
	actual_delivered_time?:ValueTypes["timestamptz_comparison_exp"],
	actual_package_ready_time?:ValueTypes["timestamptz_comparison_exp"],
	cancellation_time?:ValueTypes["timestamptz_comparison_exp"],
	chat_with_customer?:ValueTypes["chat_bool_exp"],
	chat_with_customer_id?:ValueTypes["Int_comparison_exp"],
	chat_with_service_provider?:ValueTypes["chat_bool_exp"],
	chat_with_service_provider_id?:ValueTypes["Int_comparison_exp"],
	current_gps?:ValueTypes["geography_comparison_exp"],
	customer_id?:ValueTypes["Int_comparison_exp"],
	customer_review_by_driver?:ValueTypes["review_bool_exp"],
	customer_review_by_driver_id?:ValueTypes["Int_comparison_exp"],
	deliverer?:ValueTypes["deliverer_bool_exp"],
	deliverer_app_type_id?:ValueTypes["String_comparison_exp"],
	deliverer_id?:ValueTypes["Int_comparison_exp"],
	delivery_cost?:ValueTypes["money_comparison_exp"],
	driver_review_by_customer?:ValueTypes["review_bool_exp"],
	driver_review_by_customer_id?:ValueTypes["Int_comparison_exp"],
	driver_review_by_service_provider?:ValueTypes["review_bool_exp"],
	driver_review_by_service_provider_id?:ValueTypes["Int_comparison_exp"],
	dropoff_address?:ValueTypes["String_comparison_exp"],
	dropoff_gps?:ValueTypes["geography_comparison_exp"],
	estimated_arrival_at_dropoff_time?:ValueTypes["timestamptz_comparison_exp"],
	estimated_arrival_at_pickup_time?:ValueTypes["timestamptz_comparison_exp"],
	estimated_package_ready_time?:ValueTypes["timestamptz_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	notification_token?:ValueTypes["String_comparison_exp"],
	order_time?:ValueTypes["timestamptz_comparison_exp"],
	package_cost?:ValueTypes["money_comparison_exp"],
	payment_type?:ValueTypes["String_comparison_exp"],
	pickup_address?:ValueTypes["String_comparison_exp"],
	pickup_gps?:ValueTypes["geography_comparison_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	service_provider_id?:ValueTypes["Int_comparison_exp"],
	service_provider_review_by_driver?:ValueTypes["review_bool_exp"],
	service_provider_review_by_driver_id?:ValueTypes["Int_comparison_exp"],
	service_provider_type?:ValueTypes["String_comparison_exp"],
	status?:ValueTypes["String_comparison_exp"],
	stripe_payment_id?:ValueTypes["Int_comparison_exp"],
	trip_distance?:ValueTypes["Int_comparison_exp"],
	trip_duration?:ValueTypes["Int_comparison_exp"],
	trip_polyline?:ValueTypes["String_comparison_exp"]
};
	/** unique or primary key constraints on table "delivery_order" */
["delivery_order_constraint"]:delivery_order_constraint;
	/** input type for incrementing numeric columns in table "delivery_order" */
["delivery_order_inc_input"]: {
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	delivery_cost?:ValueTypes["money"],
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	id?:number,
	package_cost?:ValueTypes["money"],
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number
};
	/** input type for inserting data into table "delivery_order" */
["delivery_order_insert_input"]: {
	actual_arrival_at_dropoff_time?:ValueTypes["timestamptz"],
	actual_arrival_at_pickup_time?:ValueTypes["timestamptz"],
	actual_delivered_time?:ValueTypes["timestamptz"],
	actual_package_ready_time?:ValueTypes["timestamptz"],
	cancellation_time?:ValueTypes["timestamptz"],
	chat_with_customer?:ValueTypes["chat_obj_rel_insert_input"],
	chat_with_customer_id?:number,
	chat_with_service_provider?:ValueTypes["chat_obj_rel_insert_input"],
	chat_with_service_provider_id?:number,
	current_gps?:ValueTypes["geography"],
	customer_id?:number,
	customer_review_by_driver?:ValueTypes["review_obj_rel_insert_input"],
	customer_review_by_driver_id?:number,
	deliverer?:ValueTypes["deliverer_obj_rel_insert_input"],
	/** restaurant, delivery */
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	delivery_cost?:ValueTypes["money"],
	driver_review_by_customer?:ValueTypes["review_obj_rel_insert_input"],
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider?:ValueTypes["review_obj_rel_insert_input"],
	driver_review_by_service_provider_id?:number,
	dropoff_address?:string,
	dropoff_gps?:ValueTypes["geography"],
	estimated_arrival_at_dropoff_time?:ValueTypes["timestamptz"],
	estimated_arrival_at_pickup_time?:ValueTypes["timestamptz"],
	estimated_package_ready_time?:ValueTypes["timestamptz"],
	id?:number,
	order_time?:ValueTypes["timestamptz"],
	package_cost?:ValueTypes["money"],
	payment_type?:string,
	pickup_address?:string,
	pickup_gps?:ValueTypes["geography"],
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	service_provider_id?:number,
	service_provider_review_by_driver?:ValueTypes["review_obj_rel_insert_input"],
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number,
	trip_polyline?:string
};
	/** aggregate max on columns */
["delivery_order_max_fields"]: AliasType<{
	actual_arrival_at_dropoff_time?:true,
	actual_arrival_at_pickup_time?:true,
	actual_delivered_time?:true,
	actual_package_ready_time?:true,
	cancellation_time?:true,
	chat_with_customer_id?:true,
	chat_with_service_provider_id?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	/** restaurant, delivery */
	deliverer_app_type_id?:true,
	deliverer_id?:true,
	delivery_cost?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	dropoff_address?:true,
	estimated_arrival_at_dropoff_time?:true,
	estimated_arrival_at_pickup_time?:true,
	estimated_package_ready_time?:true,
	id?:true,
	order_time?:true,
	package_cost?:true,
	payment_type?:true,
	pickup_address?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	service_provider_type?:true,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:true,
	stripe_payment_id?:true,
	/** in meters */
	trip_distance?:true,
	/** in seconds */
	trip_duration?:true,
	trip_polyline?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "delivery_order" */
["delivery_order_max_order_by"]: {
	actual_arrival_at_dropoff_time?:ValueTypes["order_by"],
	actual_arrival_at_pickup_time?:ValueTypes["order_by"],
	actual_delivered_time?:ValueTypes["order_by"],
	actual_package_ready_time?:ValueTypes["order_by"],
	cancellation_time?:ValueTypes["order_by"],
	chat_with_customer_id?:ValueTypes["order_by"],
	chat_with_service_provider_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	customer_review_by_driver_id?:ValueTypes["order_by"],
	/** restaurant, delivery */
	deliverer_app_type_id?:ValueTypes["order_by"],
	deliverer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	driver_review_by_customer_id?:ValueTypes["order_by"],
	driver_review_by_service_provider_id?:ValueTypes["order_by"],
	dropoff_address?:ValueTypes["order_by"],
	estimated_arrival_at_dropoff_time?:ValueTypes["order_by"],
	estimated_arrival_at_pickup_time?:ValueTypes["order_by"],
	estimated_package_ready_time?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	order_time?:ValueTypes["order_by"],
	package_cost?:ValueTypes["order_by"],
	payment_type?:ValueTypes["order_by"],
	pickup_address?:ValueTypes["order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_review_by_driver_id?:ValueTypes["order_by"],
	service_provider_type?:ValueTypes["order_by"],
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	/** in meters */
	trip_distance?:ValueTypes["order_by"],
	/** in seconds */
	trip_duration?:ValueTypes["order_by"],
	trip_polyline?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["delivery_order_min_fields"]: AliasType<{
	actual_arrival_at_dropoff_time?:true,
	actual_arrival_at_pickup_time?:true,
	actual_delivered_time?:true,
	actual_package_ready_time?:true,
	cancellation_time?:true,
	chat_with_customer_id?:true,
	chat_with_service_provider_id?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	/** restaurant, delivery */
	deliverer_app_type_id?:true,
	deliverer_id?:true,
	delivery_cost?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	dropoff_address?:true,
	estimated_arrival_at_dropoff_time?:true,
	estimated_arrival_at_pickup_time?:true,
	estimated_package_ready_time?:true,
	id?:true,
	order_time?:true,
	package_cost?:true,
	payment_type?:true,
	pickup_address?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	service_provider_type?:true,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:true,
	stripe_payment_id?:true,
	/** in meters */
	trip_distance?:true,
	/** in seconds */
	trip_duration?:true,
	trip_polyline?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "delivery_order" */
["delivery_order_min_order_by"]: {
	actual_arrival_at_dropoff_time?:ValueTypes["order_by"],
	actual_arrival_at_pickup_time?:ValueTypes["order_by"],
	actual_delivered_time?:ValueTypes["order_by"],
	actual_package_ready_time?:ValueTypes["order_by"],
	cancellation_time?:ValueTypes["order_by"],
	chat_with_customer_id?:ValueTypes["order_by"],
	chat_with_service_provider_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	customer_review_by_driver_id?:ValueTypes["order_by"],
	/** restaurant, delivery */
	deliverer_app_type_id?:ValueTypes["order_by"],
	deliverer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	driver_review_by_customer_id?:ValueTypes["order_by"],
	driver_review_by_service_provider_id?:ValueTypes["order_by"],
	dropoff_address?:ValueTypes["order_by"],
	estimated_arrival_at_dropoff_time?:ValueTypes["order_by"],
	estimated_arrival_at_pickup_time?:ValueTypes["order_by"],
	estimated_package_ready_time?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	order_time?:ValueTypes["order_by"],
	package_cost?:ValueTypes["order_by"],
	payment_type?:ValueTypes["order_by"],
	pickup_address?:ValueTypes["order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_review_by_driver_id?:ValueTypes["order_by"],
	service_provider_type?:ValueTypes["order_by"],
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	/** in meters */
	trip_distance?:ValueTypes["order_by"],
	/** in seconds */
	trip_duration?:ValueTypes["order_by"],
	trip_polyline?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "delivery_order" */
["delivery_order_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["delivery_order"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "delivery_order" */
["delivery_order_obj_rel_insert_input"]: {
	data:ValueTypes["delivery_order_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["delivery_order_on_conflict"]
};
	/** on_conflict condition type for table "delivery_order" */
["delivery_order_on_conflict"]: {
	constraint:ValueTypes["delivery_order_constraint"],
	update_columns:ValueTypes["delivery_order_update_column"][],
	where?:ValueTypes["delivery_order_bool_exp"]
};
	/** Ordering options when selecting data from "delivery_order". */
["delivery_order_order_by"]: {
	actual_arrival_at_dropoff_time?:ValueTypes["order_by"],
	actual_arrival_at_pickup_time?:ValueTypes["order_by"],
	actual_delivered_time?:ValueTypes["order_by"],
	actual_package_ready_time?:ValueTypes["order_by"],
	cancellation_time?:ValueTypes["order_by"],
	chat_with_customer?:ValueTypes["chat_order_by"],
	chat_with_customer_id?:ValueTypes["order_by"],
	chat_with_service_provider?:ValueTypes["chat_order_by"],
	chat_with_service_provider_id?:ValueTypes["order_by"],
	current_gps?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	customer_review_by_driver?:ValueTypes["review_order_by"],
	customer_review_by_driver_id?:ValueTypes["order_by"],
	deliverer?:ValueTypes["deliverer_order_by"],
	deliverer_app_type_id?:ValueTypes["order_by"],
	deliverer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	driver_review_by_customer?:ValueTypes["review_order_by"],
	driver_review_by_customer_id?:ValueTypes["order_by"],
	driver_review_by_service_provider?:ValueTypes["review_order_by"],
	driver_review_by_service_provider_id?:ValueTypes["order_by"],
	dropoff_address?:ValueTypes["order_by"],
	dropoff_gps?:ValueTypes["order_by"],
	estimated_arrival_at_dropoff_time?:ValueTypes["order_by"],
	estimated_arrival_at_pickup_time?:ValueTypes["order_by"],
	estimated_package_ready_time?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	notification_token?:ValueTypes["order_by"],
	order_time?:ValueTypes["order_by"],
	package_cost?:ValueTypes["order_by"],
	payment_type?:ValueTypes["order_by"],
	pickup_address?:ValueTypes["order_by"],
	pickup_gps?:ValueTypes["order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_review_by_driver?:ValueTypes["review_order_by"],
	service_provider_review_by_driver_id?:ValueTypes["order_by"],
	service_provider_type?:ValueTypes["order_by"],
	status?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	trip_distance?:ValueTypes["order_by"],
	trip_duration?:ValueTypes["order_by"],
	trip_polyline?:ValueTypes["order_by"]
};
	/** primary key columns input for table: delivery_order */
["delivery_order_pk_columns_input"]: {
	id:number
};
	/** columns and relationships of "delivery_order_public" */
["delivery_order_public"]: AliasType<{
	actual_arrival_at_dropoff_time?:true,
	actual_arrival_at_pickup_time?:true,
	actual_delivered_time?:true,
	actual_package_ready_time?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	/** An object relationship */
	deliverer?:ValueTypes["deliverer"],
	deliverer_app_type_id?:true,
	deliverer_id?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	estimated_arrival_at_dropoff_time?:true,
	estimated_arrival_at_pickup_time?:true,
	estimated_package_ready_time?:true,
	order_time?:true,
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	service_provider_type?:true,
	status?:true,
	trip_distance?:true,
	trip_duration?:true,
		__typename?: true
}>;
	/** aggregated selection of "delivery_order_public" */
["delivery_order_public_aggregate"]: AliasType<{
	aggregate?:ValueTypes["delivery_order_public_aggregate_fields"],
	nodes?:ValueTypes["delivery_order_public"],
		__typename?: true
}>;
	/** aggregate fields of "delivery_order_public" */
["delivery_order_public_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["delivery_order_public_avg_fields"],
count?: [{	columns?:ValueTypes["delivery_order_public_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["delivery_order_public_max_fields"],
	min?:ValueTypes["delivery_order_public_min_fields"],
	stddev?:ValueTypes["delivery_order_public_stddev_fields"],
	stddev_pop?:ValueTypes["delivery_order_public_stddev_pop_fields"],
	stddev_samp?:ValueTypes["delivery_order_public_stddev_samp_fields"],
	sum?:ValueTypes["delivery_order_public_sum_fields"],
	var_pop?:ValueTypes["delivery_order_public_var_pop_fields"],
	var_samp?:ValueTypes["delivery_order_public_var_samp_fields"],
	variance?:ValueTypes["delivery_order_public_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["delivery_order_public_avg_fields"]: AliasType<{
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	trip_distance?:true,
	trip_duration?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "delivery_order_public". All fields are combined with a logical 'AND'. */
["delivery_order_public_bool_exp"]: {
	_and?:ValueTypes["delivery_order_public_bool_exp"][],
	_not?:ValueTypes["delivery_order_public_bool_exp"],
	_or?:ValueTypes["delivery_order_public_bool_exp"][],
	actual_arrival_at_dropoff_time?:ValueTypes["timestamptz_comparison_exp"],
	actual_arrival_at_pickup_time?:ValueTypes["timestamptz_comparison_exp"],
	actual_delivered_time?:ValueTypes["timestamptz_comparison_exp"],
	actual_package_ready_time?:ValueTypes["timestamptz_comparison_exp"],
	customer_id?:ValueTypes["Int_comparison_exp"],
	customer_review_by_driver_id?:ValueTypes["Int_comparison_exp"],
	deliverer?:ValueTypes["deliverer_bool_exp"],
	deliverer_app_type_id?:ValueTypes["String_comparison_exp"],
	deliverer_id?:ValueTypes["Int_comparison_exp"],
	driver_review_by_customer_id?:ValueTypes["Int_comparison_exp"],
	driver_review_by_service_provider_id?:ValueTypes["Int_comparison_exp"],
	estimated_arrival_at_dropoff_time?:ValueTypes["timestamptz_comparison_exp"],
	estimated_arrival_at_pickup_time?:ValueTypes["timestamptz_comparison_exp"],
	estimated_package_ready_time?:ValueTypes["timestamptz_comparison_exp"],
	order_time?:ValueTypes["timestamptz_comparison_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	service_provider_id?:ValueTypes["Int_comparison_exp"],
	service_provider_review_by_driver_id?:ValueTypes["Int_comparison_exp"],
	service_provider_type?:ValueTypes["String_comparison_exp"],
	status?:ValueTypes["String_comparison_exp"],
	trip_distance?:ValueTypes["Int_comparison_exp"],
	trip_duration?:ValueTypes["Int_comparison_exp"]
};
	/** input type for incrementing numeric columns in table "delivery_order_public" */
["delivery_order_public_inc_input"]: {
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	trip_distance?:number,
	trip_duration?:number
};
	/** input type for inserting data into table "delivery_order_public" */
["delivery_order_public_insert_input"]: {
	actual_arrival_at_dropoff_time?:ValueTypes["timestamptz"],
	actual_arrival_at_pickup_time?:ValueTypes["timestamptz"],
	actual_delivered_time?:ValueTypes["timestamptz"],
	actual_package_ready_time?:ValueTypes["timestamptz"],
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer?:ValueTypes["deliverer_obj_rel_insert_input"],
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	estimated_arrival_at_dropoff_time?:ValueTypes["timestamptz"],
	estimated_arrival_at_pickup_time?:ValueTypes["timestamptz"],
	estimated_package_ready_time?:ValueTypes["timestamptz"],
	order_time?:ValueTypes["timestamptz"],
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	status?:string,
	trip_distance?:number,
	trip_duration?:number
};
	/** aggregate max on columns */
["delivery_order_public_max_fields"]: AliasType<{
	actual_arrival_at_dropoff_time?:true,
	actual_arrival_at_pickup_time?:true,
	actual_delivered_time?:true,
	actual_package_ready_time?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_app_type_id?:true,
	deliverer_id?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	estimated_arrival_at_dropoff_time?:true,
	estimated_arrival_at_pickup_time?:true,
	estimated_package_ready_time?:true,
	order_time?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	service_provider_type?:true,
	status?:true,
	trip_distance?:true,
	trip_duration?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["delivery_order_public_min_fields"]: AliasType<{
	actual_arrival_at_dropoff_time?:true,
	actual_arrival_at_pickup_time?:true,
	actual_delivered_time?:true,
	actual_package_ready_time?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_app_type_id?:true,
	deliverer_id?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	estimated_arrival_at_dropoff_time?:true,
	estimated_arrival_at_pickup_time?:true,
	estimated_package_ready_time?:true,
	order_time?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	service_provider_type?:true,
	status?:true,
	trip_distance?:true,
	trip_duration?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "delivery_order_public" */
["delivery_order_public_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["delivery_order_public"],
		__typename?: true
}>;
	/** Ordering options when selecting data from "delivery_order_public". */
["delivery_order_public_order_by"]: {
	actual_arrival_at_dropoff_time?:ValueTypes["order_by"],
	actual_arrival_at_pickup_time?:ValueTypes["order_by"],
	actual_delivered_time?:ValueTypes["order_by"],
	actual_package_ready_time?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	customer_review_by_driver_id?:ValueTypes["order_by"],
	deliverer?:ValueTypes["deliverer_order_by"],
	deliverer_app_type_id?:ValueTypes["order_by"],
	deliverer_id?:ValueTypes["order_by"],
	driver_review_by_customer_id?:ValueTypes["order_by"],
	driver_review_by_service_provider_id?:ValueTypes["order_by"],
	estimated_arrival_at_dropoff_time?:ValueTypes["order_by"],
	estimated_arrival_at_pickup_time?:ValueTypes["order_by"],
	estimated_package_ready_time?:ValueTypes["order_by"],
	order_time?:ValueTypes["order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_review_by_driver_id?:ValueTypes["order_by"],
	service_provider_type?:ValueTypes["order_by"],
	status?:ValueTypes["order_by"],
	trip_distance?:ValueTypes["order_by"],
	trip_duration?:ValueTypes["order_by"]
};
	/** select columns of table "delivery_order_public" */
["delivery_order_public_select_column"]:delivery_order_public_select_column;
	/** input type for updating data in table "delivery_order_public" */
["delivery_order_public_set_input"]: {
	actual_arrival_at_dropoff_time?:ValueTypes["timestamptz"],
	actual_arrival_at_pickup_time?:ValueTypes["timestamptz"],
	actual_delivered_time?:ValueTypes["timestamptz"],
	actual_package_ready_time?:ValueTypes["timestamptz"],
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	estimated_arrival_at_dropoff_time?:ValueTypes["timestamptz"],
	estimated_arrival_at_pickup_time?:ValueTypes["timestamptz"],
	estimated_package_ready_time?:ValueTypes["timestamptz"],
	order_time?:ValueTypes["timestamptz"],
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	status?:string,
	trip_distance?:number,
	trip_duration?:number
};
	/** aggregate stddev on columns */
["delivery_order_public_stddev_fields"]: AliasType<{
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	trip_distance?:true,
	trip_duration?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["delivery_order_public_stddev_pop_fields"]: AliasType<{
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	trip_distance?:true,
	trip_duration?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["delivery_order_public_stddev_samp_fields"]: AliasType<{
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	trip_distance?:true,
	trip_duration?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "delivery_order_public" */
["delivery_order_public_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["delivery_order_public_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["delivery_order_public_stream_cursor_value_input"]: {
	actual_arrival_at_dropoff_time?:ValueTypes["timestamptz"],
	actual_arrival_at_pickup_time?:ValueTypes["timestamptz"],
	actual_delivered_time?:ValueTypes["timestamptz"],
	actual_package_ready_time?:ValueTypes["timestamptz"],
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	estimated_arrival_at_dropoff_time?:ValueTypes["timestamptz"],
	estimated_arrival_at_pickup_time?:ValueTypes["timestamptz"],
	estimated_package_ready_time?:ValueTypes["timestamptz"],
	order_time?:ValueTypes["timestamptz"],
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	status?:string,
	trip_distance?:number,
	trip_duration?:number
};
	/** aggregate sum on columns */
["delivery_order_public_sum_fields"]: AliasType<{
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	trip_distance?:true,
	trip_duration?:true,
		__typename?: true
}>;
	["delivery_order_public_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["delivery_order_public_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["delivery_order_public_set_input"],
	where:ValueTypes["delivery_order_public_bool_exp"]
};
	/** aggregate var_pop on columns */
["delivery_order_public_var_pop_fields"]: AliasType<{
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	trip_distance?:true,
	trip_duration?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["delivery_order_public_var_samp_fields"]: AliasType<{
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	trip_distance?:true,
	trip_duration?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["delivery_order_public_variance_fields"]: AliasType<{
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	trip_distance?:true,
	trip_duration?:true,
		__typename?: true
}>;
	/** select columns of table "delivery_order" */
["delivery_order_select_column"]:delivery_order_select_column;
	/** input type for updating data in table "delivery_order" */
["delivery_order_set_input"]: {
	actual_arrival_at_dropoff_time?:ValueTypes["timestamptz"],
	actual_arrival_at_pickup_time?:ValueTypes["timestamptz"],
	actual_delivered_time?:ValueTypes["timestamptz"],
	actual_package_ready_time?:ValueTypes["timestamptz"],
	cancellation_time?:ValueTypes["timestamptz"],
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	current_gps?:ValueTypes["geography"],
	customer_id?:number,
	customer_review_by_driver_id?:number,
	/** restaurant, delivery */
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	delivery_cost?:ValueTypes["money"],
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	dropoff_address?:string,
	dropoff_gps?:ValueTypes["geography"],
	estimated_arrival_at_dropoff_time?:ValueTypes["timestamptz"],
	estimated_arrival_at_pickup_time?:ValueTypes["timestamptz"],
	estimated_package_ready_time?:ValueTypes["timestamptz"],
	id?:number,
	order_time?:ValueTypes["timestamptz"],
	package_cost?:ValueTypes["money"],
	payment_type?:string,
	pickup_address?:string,
	pickup_gps?:ValueTypes["geography"],
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number,
	trip_polyline?:string
};
	/** aggregate stddev on columns */
["delivery_order_stddev_fields"]: AliasType<{
	chat_with_customer_id?:true,
	chat_with_service_provider_id?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	delivery_cost?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	id?:true,
	package_cost?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	stripe_payment_id?:true,
	/** in meters */
	trip_distance?:true,
	/** in seconds */
	trip_duration?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "delivery_order" */
["delivery_order_stddev_order_by"]: {
	chat_with_customer_id?:ValueTypes["order_by"],
	chat_with_service_provider_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	customer_review_by_driver_id?:ValueTypes["order_by"],
	deliverer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	driver_review_by_customer_id?:ValueTypes["order_by"],
	driver_review_by_service_provider_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	package_cost?:ValueTypes["order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_review_by_driver_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	/** in meters */
	trip_distance?:ValueTypes["order_by"],
	/** in seconds */
	trip_duration?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["delivery_order_stddev_pop_fields"]: AliasType<{
	chat_with_customer_id?:true,
	chat_with_service_provider_id?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	delivery_cost?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	id?:true,
	package_cost?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	stripe_payment_id?:true,
	/** in meters */
	trip_distance?:true,
	/** in seconds */
	trip_duration?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "delivery_order" */
["delivery_order_stddev_pop_order_by"]: {
	chat_with_customer_id?:ValueTypes["order_by"],
	chat_with_service_provider_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	customer_review_by_driver_id?:ValueTypes["order_by"],
	deliverer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	driver_review_by_customer_id?:ValueTypes["order_by"],
	driver_review_by_service_provider_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	package_cost?:ValueTypes["order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_review_by_driver_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	/** in meters */
	trip_distance?:ValueTypes["order_by"],
	/** in seconds */
	trip_duration?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["delivery_order_stddev_samp_fields"]: AliasType<{
	chat_with_customer_id?:true,
	chat_with_service_provider_id?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	delivery_cost?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	id?:true,
	package_cost?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	stripe_payment_id?:true,
	/** in meters */
	trip_distance?:true,
	/** in seconds */
	trip_duration?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "delivery_order" */
["delivery_order_stddev_samp_order_by"]: {
	chat_with_customer_id?:ValueTypes["order_by"],
	chat_with_service_provider_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	customer_review_by_driver_id?:ValueTypes["order_by"],
	deliverer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	driver_review_by_customer_id?:ValueTypes["order_by"],
	driver_review_by_service_provider_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	package_cost?:ValueTypes["order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_review_by_driver_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	/** in meters */
	trip_distance?:ValueTypes["order_by"],
	/** in seconds */
	trip_duration?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "delivery_order" */
["delivery_order_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["delivery_order_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["delivery_order_stream_cursor_value_input"]: {
	actual_arrival_at_dropoff_time?:ValueTypes["timestamptz"],
	actual_arrival_at_pickup_time?:ValueTypes["timestamptz"],
	actual_delivered_time?:ValueTypes["timestamptz"],
	actual_package_ready_time?:ValueTypes["timestamptz"],
	cancellation_time?:ValueTypes["timestamptz"],
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	current_gps?:ValueTypes["geography"],
	customer_id?:number,
	customer_review_by_driver_id?:number,
	/** restaurant, delivery */
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	delivery_cost?:ValueTypes["money"],
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	dropoff_address?:string,
	dropoff_gps?:ValueTypes["geography"],
	estimated_arrival_at_dropoff_time?:ValueTypes["timestamptz"],
	estimated_arrival_at_pickup_time?:ValueTypes["timestamptz"],
	estimated_package_ready_time?:ValueTypes["timestamptz"],
	id?:number,
	order_time?:ValueTypes["timestamptz"],
	package_cost?:ValueTypes["money"],
	payment_type?:string,
	pickup_address?:string,
	pickup_gps?:ValueTypes["geography"],
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number,
	trip_polyline?:string
};
	/** aggregate sum on columns */
["delivery_order_sum_fields"]: AliasType<{
	chat_with_customer_id?:true,
	chat_with_service_provider_id?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	delivery_cost?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	id?:true,
	package_cost?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	stripe_payment_id?:true,
	/** in meters */
	trip_distance?:true,
	/** in seconds */
	trip_duration?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "delivery_order" */
["delivery_order_sum_order_by"]: {
	chat_with_customer_id?:ValueTypes["order_by"],
	chat_with_service_provider_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	customer_review_by_driver_id?:ValueTypes["order_by"],
	deliverer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	driver_review_by_customer_id?:ValueTypes["order_by"],
	driver_review_by_service_provider_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	package_cost?:ValueTypes["order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_review_by_driver_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	/** in meters */
	trip_distance?:ValueTypes["order_by"],
	/** in seconds */
	trip_duration?:ValueTypes["order_by"]
};
	/** update columns of table "delivery_order" */
["delivery_order_update_column"]:delivery_order_update_column;
	["delivery_order_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["delivery_order_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["delivery_order_set_input"],
	where:ValueTypes["delivery_order_bool_exp"]
};
	/** aggregate var_pop on columns */
["delivery_order_var_pop_fields"]: AliasType<{
	chat_with_customer_id?:true,
	chat_with_service_provider_id?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	delivery_cost?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	id?:true,
	package_cost?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	stripe_payment_id?:true,
	/** in meters */
	trip_distance?:true,
	/** in seconds */
	trip_duration?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "delivery_order" */
["delivery_order_var_pop_order_by"]: {
	chat_with_customer_id?:ValueTypes["order_by"],
	chat_with_service_provider_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	customer_review_by_driver_id?:ValueTypes["order_by"],
	deliverer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	driver_review_by_customer_id?:ValueTypes["order_by"],
	driver_review_by_service_provider_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	package_cost?:ValueTypes["order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_review_by_driver_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	/** in meters */
	trip_distance?:ValueTypes["order_by"],
	/** in seconds */
	trip_duration?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["delivery_order_var_samp_fields"]: AliasType<{
	chat_with_customer_id?:true,
	chat_with_service_provider_id?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	delivery_cost?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	id?:true,
	package_cost?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	stripe_payment_id?:true,
	/** in meters */
	trip_distance?:true,
	/** in seconds */
	trip_duration?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "delivery_order" */
["delivery_order_var_samp_order_by"]: {
	chat_with_customer_id?:ValueTypes["order_by"],
	chat_with_service_provider_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	customer_review_by_driver_id?:ValueTypes["order_by"],
	deliverer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	driver_review_by_customer_id?:ValueTypes["order_by"],
	driver_review_by_service_provider_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	package_cost?:ValueTypes["order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_review_by_driver_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	/** in meters */
	trip_distance?:ValueTypes["order_by"],
	/** in seconds */
	trip_duration?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["delivery_order_variance_fields"]: AliasType<{
	chat_with_customer_id?:true,
	chat_with_service_provider_id?:true,
	customer_id?:true,
	customer_review_by_driver_id?:true,
	deliverer_id?:true,
	delivery_cost?:true,
	driver_review_by_customer_id?:true,
	driver_review_by_service_provider_id?:true,
	id?:true,
	package_cost?:true,
	service_provider_id?:true,
	service_provider_review_by_driver_id?:true,
	stripe_payment_id?:true,
	/** in meters */
	trip_distance?:true,
	/** in seconds */
	trip_duration?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "delivery_order" */
["delivery_order_variance_order_by"]: {
	chat_with_customer_id?:ValueTypes["order_by"],
	chat_with_service_provider_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	customer_review_by_driver_id?:ValueTypes["order_by"],
	deliverer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	driver_review_by_customer_id?:ValueTypes["order_by"],
	driver_review_by_service_provider_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	package_cost?:ValueTypes["order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_review_by_driver_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	/** in meters */
	trip_distance?:ValueTypes["order_by"],
	/** in seconds */
	trip_duration?:ValueTypes["order_by"]
};
	["float8"]:unknown;
	/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
["float8_comparison_exp"]: {
	_eq?:ValueTypes["float8"],
	_gt?:ValueTypes["float8"],
	_gte?:ValueTypes["float8"],
	_in?:ValueTypes["float8"][],
	_is_null?:boolean,
	_lt?:ValueTypes["float8"],
	_lte?:ValueTypes["float8"],
	_neq?:ValueTypes["float8"],
	_nin?:ValueTypes["float8"][]
};
	["geography"]:unknown;
	["geography_cast_exp"]: {
	geometry?:ValueTypes["geometry_comparison_exp"]
};
	/** Boolean expression to compare columns of type "geography". All fields are combined with logical 'AND'. */
["geography_comparison_exp"]: {
	_cast?:ValueTypes["geography_cast_exp"],
	_eq?:ValueTypes["geography"],
	_gt?:ValueTypes["geography"],
	_gte?:ValueTypes["geography"],
	_in?:ValueTypes["geography"][],
	_is_null?:boolean,
	_lt?:ValueTypes["geography"],
	_lte?:ValueTypes["geography"],
	_neq?:ValueTypes["geography"],
	_nin?:ValueTypes["geography"][],
	/** is the column within a given distance from the given geography value */
	_st_d_within?:ValueTypes["st_d_within_geography_input"],
	/** does the column spatially intersect the given geography value */
	_st_intersects?:ValueTypes["geography"]
};
	["geometry"]:unknown;
	["geometry_cast_exp"]: {
	geography?:ValueTypes["geography_comparison_exp"]
};
	/** Boolean expression to compare columns of type "geometry". All fields are combined with logical 'AND'. */
["geometry_comparison_exp"]: {
	_cast?:ValueTypes["geometry_cast_exp"],
	_eq?:ValueTypes["geometry"],
	_gt?:ValueTypes["geometry"],
	_gte?:ValueTypes["geometry"],
	_in?:ValueTypes["geometry"][],
	_is_null?:boolean,
	_lt?:ValueTypes["geometry"],
	_lte?:ValueTypes["geometry"],
	_neq?:ValueTypes["geometry"],
	_nin?:ValueTypes["geometry"][],
	/** is the column within a given 3D distance from the given geometry value */
	_st_3d_d_within?:ValueTypes["st_d_within_input"],
	/** does the column spatially intersect the given geometry value in 3D */
	_st_3d_intersects?:ValueTypes["geometry"],
	/** does the column contain the given geometry value */
	_st_contains?:ValueTypes["geometry"],
	/** does the column cross the given geometry value */
	_st_crosses?:ValueTypes["geometry"],
	/** is the column within a given distance from the given geometry value */
	_st_d_within?:ValueTypes["st_d_within_input"],
	/** is the column equal to given geometry value (directionality is ignored) */
	_st_equals?:ValueTypes["geometry"],
	/** does the column spatially intersect the given geometry value */
	_st_intersects?:ValueTypes["geometry"],
	/** does the column 'spatially overlap' (intersect but not completely contain) the given geometry value */
	_st_overlaps?:ValueTypes["geometry"],
	/** does the column have atleast one point in common with the given geometry value */
	_st_touches?:ValueTypes["geometry"],
	/** is the column contained in the given geometry value */
	_st_within?:ValueTypes["geometry"]
};
	/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
["Int_comparison_exp"]: {
	_eq?:number,
	_gt?:number,
	_gte?:number,
	_in?:number[],
	_is_null?:boolean,
	_lt?:number,
	_lte?:number,
	_neq?:number,
	_nin?:number[]
};
	["json"]:unknown;
	/** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
["json_comparison_exp"]: {
	_eq?:ValueTypes["json"],
	_gt?:ValueTypes["json"],
	_gte?:ValueTypes["json"],
	_in?:ValueTypes["json"][],
	_is_null?:boolean,
	_lt?:ValueTypes["json"],
	_lte?:ValueTypes["json"],
	_neq?:ValueTypes["json"],
	_nin?:ValueTypes["json"][]
};
	["jsonb"]:unknown;
	["jsonb_cast_exp"]: {
	String?:ValueTypes["String_comparison_exp"]
};
	/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
["jsonb_comparison_exp"]: {
	_cast?:ValueTypes["jsonb_cast_exp"],
	/** is the column contained in the given json value */
	_contained_in?:ValueTypes["jsonb"],
	/** does the column contain the given json value at the top level */
	_contains?:ValueTypes["jsonb"],
	_eq?:ValueTypes["jsonb"],
	_gt?:ValueTypes["jsonb"],
	_gte?:ValueTypes["jsonb"],
	/** does the string exist as a top-level key in the column */
	_has_key?:string,
	/** do all of these strings exist as top-level keys in the column */
	_has_keys_all?:string[],
	/** do any of these strings exist as top-level keys in the column */
	_has_keys_any?:string[],
	_in?:ValueTypes["jsonb"][],
	_is_null?:boolean,
	_lt?:ValueTypes["jsonb"],
	_lte?:ValueTypes["jsonb"],
	_neq?:ValueTypes["jsonb"],
	_nin?:ValueTypes["jsonb"][]
};
	/** columns and relationships of "mez_admin" */
["mez_admin"]: AliasType<{
	/** A computed field, executes function "mez_admin_notification_token" */
	notification_token?:true,
	/** An object relationship */
	user?:ValueTypes["user"],
	user_id?:true,
	version?:true,
		__typename?: true
}>;
	/** aggregated selection of "mez_admin" */
["mez_admin_aggregate"]: AliasType<{
	aggregate?:ValueTypes["mez_admin_aggregate_fields"],
	nodes?:ValueTypes["mez_admin"],
		__typename?: true
}>;
	/** aggregate fields of "mez_admin" */
["mez_admin_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["mez_admin_avg_fields"],
count?: [{	columns?:ValueTypes["mez_admin_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["mez_admin_max_fields"],
	min?:ValueTypes["mez_admin_min_fields"],
	stddev?:ValueTypes["mez_admin_stddev_fields"],
	stddev_pop?:ValueTypes["mez_admin_stddev_pop_fields"],
	stddev_samp?:ValueTypes["mez_admin_stddev_samp_fields"],
	sum?:ValueTypes["mez_admin_sum_fields"],
	var_pop?:ValueTypes["mez_admin_var_pop_fields"],
	var_samp?:ValueTypes["mez_admin_var_samp_fields"],
	variance?:ValueTypes["mez_admin_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["mez_admin_avg_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "mez_admin". All fields are combined with a logical 'AND'. */
["mez_admin_bool_exp"]: {
	_and?:ValueTypes["mez_admin_bool_exp"][],
	_not?:ValueTypes["mez_admin_bool_exp"],
	_or?:ValueTypes["mez_admin_bool_exp"][],
	notification_token?:ValueTypes["String_comparison_exp"],
	user?:ValueTypes["user_bool_exp"],
	user_id?:ValueTypes["Int_comparison_exp"],
	version?:ValueTypes["String_comparison_exp"]
};
	/** unique or primary key constraints on table "mez_admin" */
["mez_admin_constraint"]:mez_admin_constraint;
	/** input type for incrementing numeric columns in table "mez_admin" */
["mez_admin_inc_input"]: {
	user_id?:number
};
	/** input type for inserting data into table "mez_admin" */
["mez_admin_insert_input"]: {
	user?:ValueTypes["user_obj_rel_insert_input"],
	user_id?:number,
	version?:string
};
	/** aggregate max on columns */
["mez_admin_max_fields"]: AliasType<{
	user_id?:true,
	version?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["mez_admin_min_fields"]: AliasType<{
	user_id?:true,
	version?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "mez_admin" */
["mez_admin_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["mez_admin"],
		__typename?: true
}>;
	/** on_conflict condition type for table "mez_admin" */
["mez_admin_on_conflict"]: {
	constraint:ValueTypes["mez_admin_constraint"],
	update_columns:ValueTypes["mez_admin_update_column"][],
	where?:ValueTypes["mez_admin_bool_exp"]
};
	/** Ordering options when selecting data from "mez_admin". */
["mez_admin_order_by"]: {
	notification_token?:ValueTypes["order_by"],
	user?:ValueTypes["user_order_by"],
	user_id?:ValueTypes["order_by"],
	version?:ValueTypes["order_by"]
};
	/** primary key columns input for table: mez_admin */
["mez_admin_pk_columns_input"]: {
	user_id:number
};
	/** select columns of table "mez_admin" */
["mez_admin_select_column"]:mez_admin_select_column;
	/** input type for updating data in table "mez_admin" */
["mez_admin_set_input"]: {
	user_id?:number,
	version?:string
};
	/** aggregate stddev on columns */
["mez_admin_stddev_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["mez_admin_stddev_pop_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["mez_admin_stddev_samp_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "mez_admin" */
["mez_admin_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["mez_admin_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["mez_admin_stream_cursor_value_input"]: {
	user_id?:number,
	version?:string
};
	/** aggregate sum on columns */
["mez_admin_sum_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** update columns of table "mez_admin" */
["mez_admin_update_column"]:mez_admin_update_column;
	["mez_admin_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["mez_admin_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["mez_admin_set_input"],
	where:ValueTypes["mez_admin_bool_exp"]
};
	/** aggregate var_pop on columns */
["mez_admin_var_pop_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["mez_admin_var_samp_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["mez_admin_variance_fields"]: AliasType<{
	user_id?:true,
		__typename?: true
}>;
	["money"]:unknown;
	/** Boolean expression to compare columns of type "money". All fields are combined with logical 'AND'. */
["money_comparison_exp"]: {
	_eq?:ValueTypes["money"],
	_gt?:ValueTypes["money"],
	_gte?:ValueTypes["money"],
	_in?:ValueTypes["money"][],
	_is_null?:boolean,
	_lt?:ValueTypes["money"],
	_lte?:ValueTypes["money"],
	_neq?:ValueTypes["money"],
	_nin?:ValueTypes["money"][]
};
	/** mutation root */
["mutation_root"]: AliasType<{
delete_chat?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["chat_bool_exp"]},ValueTypes["chat_mutation_response"]],
delete_chat_by_pk?: [{	id:number},ValueTypes["chat"]],
delete_chat_participant?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["chat_participant_bool_exp"]},ValueTypes["chat_participant_mutation_response"]],
delete_chat_participant_by_pk?: [{	id:number},ValueTypes["chat_participant"]],
delete_customer?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["customer_bool_exp"]},ValueTypes["customer_mutation_response"]],
delete_customer_by_pk?: [{	user_id:number},ValueTypes["customer"]],
delete_deliverer?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["deliverer_bool_exp"]},ValueTypes["deliverer_mutation_response"]],
delete_deliverer_by_pk?: [{	id:number},ValueTypes["deliverer"]],
delete_delivery_order?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["delivery_order_bool_exp"]},ValueTypes["delivery_order_mutation_response"]],
delete_delivery_order_by_pk?: [{	id:number},ValueTypes["delivery_order"]],
delete_delivery_order_public?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["delivery_order_public_bool_exp"]},ValueTypes["delivery_order_public_mutation_response"]],
delete_mez_admin?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["mez_admin_bool_exp"]},ValueTypes["mez_admin_mutation_response"]],
delete_mez_admin_by_pk?: [{	user_id:number},ValueTypes["mez_admin"]],
delete_notification_info?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["notification_info_bool_exp"]},ValueTypes["notification_info_mutation_response"]],
delete_notification_info_by_pk?: [{	id:number},ValueTypes["notification_info"]],
delete_restaurant?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_bool_exp"]},ValueTypes["restaurant_mutation_response"]],
delete_restaurant_by_pk?: [{	id:number},ValueTypes["restaurant"]],
delete_restaurant_cart?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_cart_bool_exp"]},ValueTypes["restaurant_cart_mutation_response"]],
delete_restaurant_cart_by_pk?: [{	customer_id:number},ValueTypes["restaurant_cart"]],
delete_restaurant_cart_item?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_cart_item_bool_exp"]},ValueTypes["restaurant_cart_item_mutation_response"]],
delete_restaurant_cart_item_by_pk?: [{	id:number},ValueTypes["restaurant_cart_item"]],
delete_restaurant_category?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_category_bool_exp"]},ValueTypes["restaurant_category_mutation_response"]],
delete_restaurant_category_by_pk?: [{	id:number},ValueTypes["restaurant_category"]],
delete_restaurant_choice?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_choice_bool_exp"]},ValueTypes["restaurant_choice_mutation_response"]],
delete_restaurant_choice_by_pk?: [{	id:number},ValueTypes["restaurant_choice"]],
delete_restaurant_item?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_item_bool_exp"]},ValueTypes["restaurant_item_mutation_response"]],
delete_restaurant_item_by_pk?: [{	id:number},ValueTypes["restaurant_item"]],
delete_restaurant_item_option_map?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_item_option_map_bool_exp"]},ValueTypes["restaurant_item_option_map_mutation_response"]],
delete_restaurant_item_option_map_by_pk?: [{	id:number},ValueTypes["restaurant_item_option_map"]],
delete_restaurant_operator?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_operator_bool_exp"]},ValueTypes["restaurant_operator_mutation_response"]],
delete_restaurant_operator_by_pk?: [{	id:number},ValueTypes["restaurant_operator"]],
delete_restaurant_option?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_option_bool_exp"]},ValueTypes["restaurant_option_mutation_response"]],
delete_restaurant_option_by_pk?: [{	id:number},ValueTypes["restaurant_option"]],
delete_restaurant_option_choice_map?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_option_choice_map_bool_exp"]},ValueTypes["restaurant_option_choice_map_mutation_response"]],
delete_restaurant_option_choice_map_by_pk?: [{	id:number},ValueTypes["restaurant_option_choice_map"]],
delete_restaurant_order?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_order_bool_exp"]},ValueTypes["restaurant_order_mutation_response"]],
delete_restaurant_order_by_pk?: [{	id:number},ValueTypes["restaurant_order"]],
delete_restaurant_order_item?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_order_item_bool_exp"]},ValueTypes["restaurant_order_item_mutation_response"]],
delete_restaurant_order_item_by_pk?: [{	id:number},ValueTypes["restaurant_order_item"]],
delete_restaurant_order_public?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["restaurant_order_public_bool_exp"]},ValueTypes["restaurant_order_public_mutation_response"]],
delete_review?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["review_bool_exp"]},ValueTypes["review_mutation_response"]],
delete_review_by_pk?: [{	id:number},ValueTypes["review"]],
delete_saved_location?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["saved_location_bool_exp"]},ValueTypes["saved_location_mutation_response"]],
delete_saved_location_by_pk?: [{	id:number},ValueTypes["saved_location"]],
delete_service_provider_payment_info?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["service_provider_payment_info_bool_exp"]},ValueTypes["service_provider_payment_info_mutation_response"]],
delete_service_provider_payment_info_by_pk?: [{	id:number},ValueTypes["service_provider_payment_info"]],
delete_stripe_info?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["stripe_info_bool_exp"]},ValueTypes["stripe_info_mutation_response"]],
delete_stripe_info_by_pk?: [{	id:number},ValueTypes["stripe_info"]],
delete_topology_app_type?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["topology_app_type_bool_exp"]},ValueTypes["topology_app_type_mutation_response"]],
delete_topology_app_type_by_pk?: [{	/** customer, delivery, restaurant, admin */
	id:string},ValueTypes["topology_app_type"]],
delete_topology_language?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["topology_language_bool_exp"]},ValueTypes["topology_language_mutation_response"]],
delete_topology_language_by_pk?: [{	id:string},ValueTypes["topology_language"]],
delete_translation?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["translation_bool_exp"]},ValueTypes["translation_mutation_response"]],
delete_translation_by_pk?: [{	id:number},ValueTypes["translation"]],
delete_translation_value?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["translation_value_bool_exp"]},ValueTypes["translation_value_mutation_response"]],
delete_translation_value_by_pk?: [{	language_id:string,	translation_id:number},ValueTypes["translation_value"]],
delete_user?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["user_bool_exp"]},ValueTypes["user_mutation_response"]],
delete_user_by_pk?: [{	id:number},ValueTypes["user"]],
insert_chat?: [{	/** the rows to be inserted */
	objects:ValueTypes["chat_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["chat_on_conflict"]},ValueTypes["chat_mutation_response"]],
insert_chat_one?: [{	/** the row to be inserted */
	object:ValueTypes["chat_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["chat_on_conflict"]},ValueTypes["chat"]],
insert_chat_participant?: [{	/** the rows to be inserted */
	objects:ValueTypes["chat_participant_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["chat_participant_on_conflict"]},ValueTypes["chat_participant_mutation_response"]],
insert_chat_participant_one?: [{	/** the row to be inserted */
	object:ValueTypes["chat_participant_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["chat_participant_on_conflict"]},ValueTypes["chat_participant"]],
insert_customer?: [{	/** the rows to be inserted */
	objects:ValueTypes["customer_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["customer_on_conflict"]},ValueTypes["customer_mutation_response"]],
insert_customer_one?: [{	/** the row to be inserted */
	object:ValueTypes["customer_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["customer_on_conflict"]},ValueTypes["customer"]],
insert_deliverer?: [{	/** the rows to be inserted */
	objects:ValueTypes["deliverer_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["deliverer_on_conflict"]},ValueTypes["deliverer_mutation_response"]],
insert_deliverer_one?: [{	/** the row to be inserted */
	object:ValueTypes["deliverer_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["deliverer_on_conflict"]},ValueTypes["deliverer"]],
insert_delivery_order?: [{	/** the rows to be inserted */
	objects:ValueTypes["delivery_order_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["delivery_order_on_conflict"]},ValueTypes["delivery_order_mutation_response"]],
insert_delivery_order_one?: [{	/** the row to be inserted */
	object:ValueTypes["delivery_order_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["delivery_order_on_conflict"]},ValueTypes["delivery_order"]],
insert_delivery_order_public?: [{	/** the rows to be inserted */
	objects:ValueTypes["delivery_order_public_insert_input"][]},ValueTypes["delivery_order_public_mutation_response"]],
insert_delivery_order_public_one?: [{	/** the row to be inserted */
	object:ValueTypes["delivery_order_public_insert_input"]},ValueTypes["delivery_order_public"]],
insert_mez_admin?: [{	/** the rows to be inserted */
	objects:ValueTypes["mez_admin_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["mez_admin_on_conflict"]},ValueTypes["mez_admin_mutation_response"]],
insert_mez_admin_one?: [{	/** the row to be inserted */
	object:ValueTypes["mez_admin_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["mez_admin_on_conflict"]},ValueTypes["mez_admin"]],
insert_notification_info?: [{	/** the rows to be inserted */
	objects:ValueTypes["notification_info_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["notification_info_on_conflict"]},ValueTypes["notification_info_mutation_response"]],
insert_notification_info_one?: [{	/** the row to be inserted */
	object:ValueTypes["notification_info_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["notification_info_on_conflict"]},ValueTypes["notification_info"]],
insert_restaurant?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_on_conflict"]},ValueTypes["restaurant_mutation_response"]],
insert_restaurant_cart?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_cart_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_cart_on_conflict"]},ValueTypes["restaurant_cart_mutation_response"]],
insert_restaurant_cart_item?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_cart_item_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_cart_item_on_conflict"]},ValueTypes["restaurant_cart_item_mutation_response"]],
insert_restaurant_cart_item_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_cart_item_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_cart_item_on_conflict"]},ValueTypes["restaurant_cart_item"]],
insert_restaurant_cart_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_cart_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_cart_on_conflict"]},ValueTypes["restaurant_cart"]],
insert_restaurant_category?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_category_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_category_on_conflict"]},ValueTypes["restaurant_category_mutation_response"]],
insert_restaurant_category_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_category_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_category_on_conflict"]},ValueTypes["restaurant_category"]],
insert_restaurant_choice?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_choice_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_choice_on_conflict"]},ValueTypes["restaurant_choice_mutation_response"]],
insert_restaurant_choice_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_choice_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_choice_on_conflict"]},ValueTypes["restaurant_choice"]],
insert_restaurant_item?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_item_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_item_on_conflict"]},ValueTypes["restaurant_item_mutation_response"]],
insert_restaurant_item_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_item_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_item_on_conflict"]},ValueTypes["restaurant_item"]],
insert_restaurant_item_option_map?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_item_option_map_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_item_option_map_on_conflict"]},ValueTypes["restaurant_item_option_map_mutation_response"]],
insert_restaurant_item_option_map_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_item_option_map_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_item_option_map_on_conflict"]},ValueTypes["restaurant_item_option_map"]],
insert_restaurant_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_on_conflict"]},ValueTypes["restaurant"]],
insert_restaurant_operator?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_operator_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_operator_on_conflict"]},ValueTypes["restaurant_operator_mutation_response"]],
insert_restaurant_operator_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_operator_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_operator_on_conflict"]},ValueTypes["restaurant_operator"]],
insert_restaurant_option?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_option_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_option_on_conflict"]},ValueTypes["restaurant_option_mutation_response"]],
insert_restaurant_option_choice_map?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_option_choice_map_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_option_choice_map_on_conflict"]},ValueTypes["restaurant_option_choice_map_mutation_response"]],
insert_restaurant_option_choice_map_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_option_choice_map_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_option_choice_map_on_conflict"]},ValueTypes["restaurant_option_choice_map"]],
insert_restaurant_option_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_option_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_option_on_conflict"]},ValueTypes["restaurant_option"]],
insert_restaurant_order?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_order_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_order_on_conflict"]},ValueTypes["restaurant_order_mutation_response"]],
insert_restaurant_order_item?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_order_item_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_order_item_on_conflict"]},ValueTypes["restaurant_order_item_mutation_response"]],
insert_restaurant_order_item_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_order_item_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_order_item_on_conflict"]},ValueTypes["restaurant_order_item"]],
insert_restaurant_order_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_order_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_order_on_conflict"]},ValueTypes["restaurant_order"]],
insert_restaurant_order_public?: [{	/** the rows to be inserted */
	objects:ValueTypes["restaurant_order_public_insert_input"][]},ValueTypes["restaurant_order_public_mutation_response"]],
insert_restaurant_order_public_one?: [{	/** the row to be inserted */
	object:ValueTypes["restaurant_order_public_insert_input"]},ValueTypes["restaurant_order_public"]],
insert_review?: [{	/** the rows to be inserted */
	objects:ValueTypes["review_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["review_on_conflict"]},ValueTypes["review_mutation_response"]],
insert_review_one?: [{	/** the row to be inserted */
	object:ValueTypes["review_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["review_on_conflict"]},ValueTypes["review"]],
insert_saved_location?: [{	/** the rows to be inserted */
	objects:ValueTypes["saved_location_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["saved_location_on_conflict"]},ValueTypes["saved_location_mutation_response"]],
insert_saved_location_one?: [{	/** the row to be inserted */
	object:ValueTypes["saved_location_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["saved_location_on_conflict"]},ValueTypes["saved_location"]],
insert_service_provider_payment_info?: [{	/** the rows to be inserted */
	objects:ValueTypes["service_provider_payment_info_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["service_provider_payment_info_on_conflict"]},ValueTypes["service_provider_payment_info_mutation_response"]],
insert_service_provider_payment_info_one?: [{	/** the row to be inserted */
	object:ValueTypes["service_provider_payment_info_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["service_provider_payment_info_on_conflict"]},ValueTypes["service_provider_payment_info"]],
insert_stripe_info?: [{	/** the rows to be inserted */
	objects:ValueTypes["stripe_info_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["stripe_info_on_conflict"]},ValueTypes["stripe_info_mutation_response"]],
insert_stripe_info_one?: [{	/** the row to be inserted */
	object:ValueTypes["stripe_info_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["stripe_info_on_conflict"]},ValueTypes["stripe_info"]],
insert_topology_app_type?: [{	/** the rows to be inserted */
	objects:ValueTypes["topology_app_type_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["topology_app_type_on_conflict"]},ValueTypes["topology_app_type_mutation_response"]],
insert_topology_app_type_one?: [{	/** the row to be inserted */
	object:ValueTypes["topology_app_type_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["topology_app_type_on_conflict"]},ValueTypes["topology_app_type"]],
insert_topology_language?: [{	/** the rows to be inserted */
	objects:ValueTypes["topology_language_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["topology_language_on_conflict"]},ValueTypes["topology_language_mutation_response"]],
insert_topology_language_one?: [{	/** the row to be inserted */
	object:ValueTypes["topology_language_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["topology_language_on_conflict"]},ValueTypes["topology_language"]],
insert_translation?: [{	/** the rows to be inserted */
	objects:ValueTypes["translation_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["translation_on_conflict"]},ValueTypes["translation_mutation_response"]],
insert_translation_one?: [{	/** the row to be inserted */
	object:ValueTypes["translation_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["translation_on_conflict"]},ValueTypes["translation"]],
insert_translation_value?: [{	/** the rows to be inserted */
	objects:ValueTypes["translation_value_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["translation_value_on_conflict"]},ValueTypes["translation_value_mutation_response"]],
insert_translation_value_one?: [{	/** the row to be inserted */
	object:ValueTypes["translation_value_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["translation_value_on_conflict"]},ValueTypes["translation_value"]],
insert_user?: [{	/** the rows to be inserted */
	objects:ValueTypes["user_insert_input"][],	/** upsert condition */
	on_conflict?:ValueTypes["user_on_conflict"]},ValueTypes["user_mutation_response"]],
insert_user_one?: [{	/** the row to be inserted */
	object:ValueTypes["user_insert_input"],	/** upsert condition */
	on_conflict?:ValueTypes["user_on_conflict"]},ValueTypes["user"]],
update_chat?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["chat_append_input"],	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["chat_delete_at_path_input"],	/** delete the array element with specified index (negative integers count from
the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["chat_delete_elem_input"],	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["chat_delete_key_input"],	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["chat_inc_input"],	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["chat_prepend_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["chat_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["chat_bool_exp"]},ValueTypes["chat_mutation_response"]],
update_chat_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["chat_append_input"],	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["chat_delete_at_path_input"],	/** delete the array element with specified index (negative integers count from
the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["chat_delete_elem_input"],	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["chat_delete_key_input"],	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["chat_inc_input"],	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["chat_prepend_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["chat_set_input"],	pk_columns:ValueTypes["chat_pk_columns_input"]},ValueTypes["chat"]],
update_chat_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["chat_updates"][]},ValueTypes["chat_mutation_response"]],
update_chat_participant?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["chat_participant_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["chat_participant_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["chat_participant_bool_exp"]},ValueTypes["chat_participant_mutation_response"]],
update_chat_participant_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["chat_participant_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["chat_participant_set_input"],	pk_columns:ValueTypes["chat_participant_pk_columns_input"]},ValueTypes["chat_participant"]],
update_chat_participant_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["chat_participant_updates"][]},ValueTypes["chat_participant_mutation_response"]],
update_customer?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["customer_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["customer_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["customer_bool_exp"]},ValueTypes["customer_mutation_response"]],
update_customer_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["customer_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["customer_set_input"],	pk_columns:ValueTypes["customer_pk_columns_input"]},ValueTypes["customer"]],
update_customer_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["customer_updates"][]},ValueTypes["customer_mutation_response"]],
update_deliverer?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["deliverer_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["deliverer_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["deliverer_bool_exp"]},ValueTypes["deliverer_mutation_response"]],
update_deliverer_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["deliverer_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["deliverer_set_input"],	pk_columns:ValueTypes["deliverer_pk_columns_input"]},ValueTypes["deliverer"]],
update_deliverer_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["deliverer_updates"][]},ValueTypes["deliverer_mutation_response"]],
update_delivery_order?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["delivery_order_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["delivery_order_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["delivery_order_bool_exp"]},ValueTypes["delivery_order_mutation_response"]],
update_delivery_order_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["delivery_order_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["delivery_order_set_input"],	pk_columns:ValueTypes["delivery_order_pk_columns_input"]},ValueTypes["delivery_order"]],
update_delivery_order_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["delivery_order_updates"][]},ValueTypes["delivery_order_mutation_response"]],
update_delivery_order_public?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["delivery_order_public_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["delivery_order_public_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["delivery_order_public_bool_exp"]},ValueTypes["delivery_order_public_mutation_response"]],
update_delivery_order_public_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["delivery_order_public_updates"][]},ValueTypes["delivery_order_public_mutation_response"]],
update_mez_admin?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["mez_admin_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["mez_admin_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["mez_admin_bool_exp"]},ValueTypes["mez_admin_mutation_response"]],
update_mez_admin_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["mez_admin_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["mez_admin_set_input"],	pk_columns:ValueTypes["mez_admin_pk_columns_input"]},ValueTypes["mez_admin"]],
update_mez_admin_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["mez_admin_updates"][]},ValueTypes["mez_admin_mutation_response"]],
update_notification_info?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["notification_info_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["notification_info_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["notification_info_bool_exp"]},ValueTypes["notification_info_mutation_response"]],
update_notification_info_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["notification_info_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["notification_info_set_input"],	pk_columns:ValueTypes["notification_info_pk_columns_input"]},ValueTypes["notification_info"]],
update_notification_info_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["notification_info_updates"][]},ValueTypes["notification_info_mutation_response"]],
update_restaurant?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_bool_exp"]},ValueTypes["restaurant_mutation_response"]],
update_restaurant_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_set_input"],	pk_columns:ValueTypes["restaurant_pk_columns_input"]},ValueTypes["restaurant"]],
update_restaurant_cart?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_cart_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_cart_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_cart_bool_exp"]},ValueTypes["restaurant_cart_mutation_response"]],
update_restaurant_cart_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_cart_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_cart_set_input"],	pk_columns:ValueTypes["restaurant_cart_pk_columns_input"]},ValueTypes["restaurant_cart"]],
update_restaurant_cart_item?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_cart_item_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_cart_item_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_cart_item_bool_exp"]},ValueTypes["restaurant_cart_item_mutation_response"]],
update_restaurant_cart_item_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_cart_item_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_cart_item_set_input"],	pk_columns:ValueTypes["restaurant_cart_item_pk_columns_input"]},ValueTypes["restaurant_cart_item"]],
update_restaurant_cart_item_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_cart_item_updates"][]},ValueTypes["restaurant_cart_item_mutation_response"]],
update_restaurant_cart_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_cart_updates"][]},ValueTypes["restaurant_cart_mutation_response"]],
update_restaurant_category?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_category_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_category_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_category_bool_exp"]},ValueTypes["restaurant_category_mutation_response"]],
update_restaurant_category_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_category_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_category_set_input"],	pk_columns:ValueTypes["restaurant_category_pk_columns_input"]},ValueTypes["restaurant_category"]],
update_restaurant_category_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_category_updates"][]},ValueTypes["restaurant_category_mutation_response"]],
update_restaurant_choice?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_choice_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_choice_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_choice_bool_exp"]},ValueTypes["restaurant_choice_mutation_response"]],
update_restaurant_choice_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_choice_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_choice_set_input"],	pk_columns:ValueTypes["restaurant_choice_pk_columns_input"]},ValueTypes["restaurant_choice"]],
update_restaurant_choice_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_choice_updates"][]},ValueTypes["restaurant_choice_mutation_response"]],
update_restaurant_item?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_item_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_item_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_item_bool_exp"]},ValueTypes["restaurant_item_mutation_response"]],
update_restaurant_item_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_item_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_item_set_input"],	pk_columns:ValueTypes["restaurant_item_pk_columns_input"]},ValueTypes["restaurant_item"]],
update_restaurant_item_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_item_updates"][]},ValueTypes["restaurant_item_mutation_response"]],
update_restaurant_item_option_map?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_item_option_map_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_item_option_map_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_item_option_map_bool_exp"]},ValueTypes["restaurant_item_option_map_mutation_response"]],
update_restaurant_item_option_map_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_item_option_map_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_item_option_map_set_input"],	pk_columns:ValueTypes["restaurant_item_option_map_pk_columns_input"]},ValueTypes["restaurant_item_option_map"]],
update_restaurant_item_option_map_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_item_option_map_updates"][]},ValueTypes["restaurant_item_option_map_mutation_response"]],
update_restaurant_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_updates"][]},ValueTypes["restaurant_mutation_response"]],
update_restaurant_operator?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_operator_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_operator_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_operator_bool_exp"]},ValueTypes["restaurant_operator_mutation_response"]],
update_restaurant_operator_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_operator_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_operator_set_input"],	pk_columns:ValueTypes["restaurant_operator_pk_columns_input"]},ValueTypes["restaurant_operator"]],
update_restaurant_operator_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_operator_updates"][]},ValueTypes["restaurant_operator_mutation_response"]],
update_restaurant_option?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_option_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_option_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_option_bool_exp"]},ValueTypes["restaurant_option_mutation_response"]],
update_restaurant_option_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_option_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_option_set_input"],	pk_columns:ValueTypes["restaurant_option_pk_columns_input"]},ValueTypes["restaurant_option"]],
update_restaurant_option_choice_map?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_option_choice_map_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_option_choice_map_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_option_choice_map_bool_exp"]},ValueTypes["restaurant_option_choice_map_mutation_response"]],
update_restaurant_option_choice_map_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_option_choice_map_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_option_choice_map_set_input"],	pk_columns:ValueTypes["restaurant_option_choice_map_pk_columns_input"]},ValueTypes["restaurant_option_choice_map"]],
update_restaurant_option_choice_map_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_option_choice_map_updates"][]},ValueTypes["restaurant_option_choice_map_mutation_response"]],
update_restaurant_option_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_option_updates"][]},ValueTypes["restaurant_option_mutation_response"]],
update_restaurant_order?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_order_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_order_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_order_bool_exp"]},ValueTypes["restaurant_order_mutation_response"]],
update_restaurant_order_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_order_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_order_set_input"],	pk_columns:ValueTypes["restaurant_order_pk_columns_input"]},ValueTypes["restaurant_order"]],
update_restaurant_order_item?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_order_item_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_order_item_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_order_item_bool_exp"]},ValueTypes["restaurant_order_item_mutation_response"]],
update_restaurant_order_item_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_order_item_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_order_item_set_input"],	pk_columns:ValueTypes["restaurant_order_item_pk_columns_input"]},ValueTypes["restaurant_order_item"]],
update_restaurant_order_item_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_order_item_updates"][]},ValueTypes["restaurant_order_item_mutation_response"]],
update_restaurant_order_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_order_updates"][]},ValueTypes["restaurant_order_mutation_response"]],
update_restaurant_order_public?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_order_public_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_order_public_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["restaurant_order_public_bool_exp"]},ValueTypes["restaurant_order_public_mutation_response"]],
update_restaurant_order_public_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["restaurant_order_public_updates"][]},ValueTypes["restaurant_order_public_mutation_response"]],
update_review?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["review_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["review_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["review_bool_exp"]},ValueTypes["review_mutation_response"]],
update_review_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["review_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["review_set_input"],	pk_columns:ValueTypes["review_pk_columns_input"]},ValueTypes["review"]],
update_review_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["review_updates"][]},ValueTypes["review_mutation_response"]],
update_saved_location?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["saved_location_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["saved_location_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["saved_location_bool_exp"]},ValueTypes["saved_location_mutation_response"]],
update_saved_location_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["saved_location_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["saved_location_set_input"],	pk_columns:ValueTypes["saved_location_pk_columns_input"]},ValueTypes["saved_location"]],
update_saved_location_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["saved_location_updates"][]},ValueTypes["saved_location_mutation_response"]],
update_service_provider_payment_info?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["service_provider_payment_info_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["service_provider_payment_info_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["service_provider_payment_info_bool_exp"]},ValueTypes["service_provider_payment_info_mutation_response"]],
update_service_provider_payment_info_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["service_provider_payment_info_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["service_provider_payment_info_set_input"],	pk_columns:ValueTypes["service_provider_payment_info_pk_columns_input"]},ValueTypes["service_provider_payment_info"]],
update_service_provider_payment_info_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["service_provider_payment_info_updates"][]},ValueTypes["service_provider_payment_info_mutation_response"]],
update_stripe_info?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["stripe_info_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["stripe_info_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["stripe_info_bool_exp"]},ValueTypes["stripe_info_mutation_response"]],
update_stripe_info_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["stripe_info_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["stripe_info_set_input"],	pk_columns:ValueTypes["stripe_info_pk_columns_input"]},ValueTypes["stripe_info"]],
update_stripe_info_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["stripe_info_updates"][]},ValueTypes["stripe_info_mutation_response"]],
update_topology_app_type?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["topology_app_type_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["topology_app_type_bool_exp"]},ValueTypes["topology_app_type_mutation_response"]],
update_topology_app_type_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["topology_app_type_set_input"],	pk_columns:ValueTypes["topology_app_type_pk_columns_input"]},ValueTypes["topology_app_type"]],
update_topology_app_type_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["topology_app_type_updates"][]},ValueTypes["topology_app_type_mutation_response"]],
update_topology_language?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["topology_language_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["topology_language_bool_exp"]},ValueTypes["topology_language_mutation_response"]],
update_topology_language_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["topology_language_set_input"],	pk_columns:ValueTypes["topology_language_pk_columns_input"]},ValueTypes["topology_language"]],
update_topology_language_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["topology_language_updates"][]},ValueTypes["topology_language_mutation_response"]],
update_translation?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["translation_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["translation_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["translation_bool_exp"]},ValueTypes["translation_mutation_response"]],
update_translation_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["translation_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["translation_set_input"],	pk_columns:ValueTypes["translation_pk_columns_input"]},ValueTypes["translation"]],
update_translation_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["translation_updates"][]},ValueTypes["translation_mutation_response"]],
update_translation_value?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["translation_value_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["translation_value_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["translation_value_bool_exp"]},ValueTypes["translation_value_mutation_response"]],
update_translation_value_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["translation_value_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["translation_value_set_input"],	pk_columns:ValueTypes["translation_value_pk_columns_input"]},ValueTypes["translation_value"]],
update_translation_value_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["translation_value_updates"][]},ValueTypes["translation_value_mutation_response"]],
update_user?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["user_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["user_set_input"],	/** filter the rows which have to be updated */
	where:ValueTypes["user_bool_exp"]},ValueTypes["user_mutation_response"]],
update_user_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["user_inc_input"],	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["user_set_input"],	pk_columns:ValueTypes["user_pk_columns_input"]},ValueTypes["user"]],
update_user_many?: [{	/** updates to execute, in order */
	updates:ValueTypes["user_updates"][]},ValueTypes["user_mutation_response"]],
		__typename?: true
}>;
	/** columns and relationships of "notification_info" */
["notification_info"]: AliasType<{
	app_type_id?:true,
	id?:true,
	token?:true,
	user_id?:true,
		__typename?: true
}>;
	/** aggregated selection of "notification_info" */
["notification_info_aggregate"]: AliasType<{
	aggregate?:ValueTypes["notification_info_aggregate_fields"],
	nodes?:ValueTypes["notification_info"],
		__typename?: true
}>;
	/** aggregate fields of "notification_info" */
["notification_info_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["notification_info_avg_fields"],
count?: [{	columns?:ValueTypes["notification_info_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["notification_info_max_fields"],
	min?:ValueTypes["notification_info_min_fields"],
	stddev?:ValueTypes["notification_info_stddev_fields"],
	stddev_pop?:ValueTypes["notification_info_stddev_pop_fields"],
	stddev_samp?:ValueTypes["notification_info_stddev_samp_fields"],
	sum?:ValueTypes["notification_info_sum_fields"],
	var_pop?:ValueTypes["notification_info_var_pop_fields"],
	var_samp?:ValueTypes["notification_info_var_samp_fields"],
	variance?:ValueTypes["notification_info_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["notification_info_avg_fields"]: AliasType<{
	id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "notification_info". All fields are combined with a logical 'AND'. */
["notification_info_bool_exp"]: {
	_and?:ValueTypes["notification_info_bool_exp"][],
	_not?:ValueTypes["notification_info_bool_exp"],
	_or?:ValueTypes["notification_info_bool_exp"][],
	app_type_id?:ValueTypes["String_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	token?:ValueTypes["String_comparison_exp"],
	user_id?:ValueTypes["Int_comparison_exp"]
};
	/** unique or primary key constraints on table "notification_info" */
["notification_info_constraint"]:notification_info_constraint;
	/** input type for incrementing numeric columns in table "notification_info" */
["notification_info_inc_input"]: {
	id?:number,
	user_id?:number
};
	/** input type for inserting data into table "notification_info" */
["notification_info_insert_input"]: {
	app_type_id?:string,
	id?:number,
	token?:string,
	user_id?:number
};
	/** aggregate max on columns */
["notification_info_max_fields"]: AliasType<{
	app_type_id?:true,
	id?:true,
	token?:true,
	user_id?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["notification_info_min_fields"]: AliasType<{
	app_type_id?:true,
	id?:true,
	token?:true,
	user_id?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "notification_info" */
["notification_info_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["notification_info"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "notification_info" */
["notification_info_obj_rel_insert_input"]: {
	data:ValueTypes["notification_info_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["notification_info_on_conflict"]
};
	/** on_conflict condition type for table "notification_info" */
["notification_info_on_conflict"]: {
	constraint:ValueTypes["notification_info_constraint"],
	update_columns:ValueTypes["notification_info_update_column"][],
	where?:ValueTypes["notification_info_bool_exp"]
};
	/** Ordering options when selecting data from "notification_info". */
["notification_info_order_by"]: {
	app_type_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	token?:ValueTypes["order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: notification_info */
["notification_info_pk_columns_input"]: {
	id:number
};
	/** select columns of table "notification_info" */
["notification_info_select_column"]:notification_info_select_column;
	/** input type for updating data in table "notification_info" */
["notification_info_set_input"]: {
	app_type_id?:string,
	id?:number,
	token?:string,
	user_id?:number
};
	/** aggregate stddev on columns */
["notification_info_stddev_fields"]: AliasType<{
	id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["notification_info_stddev_pop_fields"]: AliasType<{
	id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["notification_info_stddev_samp_fields"]: AliasType<{
	id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "notification_info" */
["notification_info_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["notification_info_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["notification_info_stream_cursor_value_input"]: {
	app_type_id?:string,
	id?:number,
	token?:string,
	user_id?:number
};
	/** aggregate sum on columns */
["notification_info_sum_fields"]: AliasType<{
	id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** update columns of table "notification_info" */
["notification_info_update_column"]:notification_info_update_column;
	["notification_info_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["notification_info_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["notification_info_set_input"],
	where:ValueTypes["notification_info_bool_exp"]
};
	/** aggregate var_pop on columns */
["notification_info_var_pop_fields"]: AliasType<{
	id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["notification_info_var_samp_fields"]: AliasType<{
	id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["notification_info_variance_fields"]: AliasType<{
	id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** column ordering options */
["order_by"]:order_by;
	["query_root"]: AliasType<{
chat?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["chat_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["chat_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["chat_bool_exp"]},ValueTypes["chat"]],
chat_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["chat_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["chat_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["chat_bool_exp"]},ValueTypes["chat_aggregate"]],
chat_by_pk?: [{	id:number},ValueTypes["chat"]],
chat_participant?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["chat_participant_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["chat_participant_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["chat_participant_bool_exp"]},ValueTypes["chat_participant"]],
chat_participant_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["chat_participant_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["chat_participant_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["chat_participant_bool_exp"]},ValueTypes["chat_participant_aggregate"]],
chat_participant_by_pk?: [{	id:number},ValueTypes["chat_participant"]],
customer?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["customer_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["customer_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["customer_bool_exp"]},ValueTypes["customer"]],
customer_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["customer_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["customer_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["customer_bool_exp"]},ValueTypes["customer_aggregate"]],
customer_by_pk?: [{	user_id:number},ValueTypes["customer"]],
deliverer?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["deliverer_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["deliverer_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["deliverer_bool_exp"]},ValueTypes["deliverer"]],
deliverer_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["deliverer_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["deliverer_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["deliverer_bool_exp"]},ValueTypes["deliverer_aggregate"]],
deliverer_by_pk?: [{	id:number},ValueTypes["deliverer"]],
delivery_order?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["delivery_order_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["delivery_order_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["delivery_order_bool_exp"]},ValueTypes["delivery_order"]],
delivery_order_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["delivery_order_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["delivery_order_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["delivery_order_bool_exp"]},ValueTypes["delivery_order_aggregate"]],
delivery_order_by_pk?: [{	id:number},ValueTypes["delivery_order"]],
delivery_order_public?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["delivery_order_public_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["delivery_order_public_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["delivery_order_public_bool_exp"]},ValueTypes["delivery_order_public"]],
delivery_order_public_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["delivery_order_public_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["delivery_order_public_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["delivery_order_public_bool_exp"]},ValueTypes["delivery_order_public_aggregate"]],
mez_admin?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["mez_admin_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["mez_admin_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["mez_admin_bool_exp"]},ValueTypes["mez_admin"]],
mez_admin_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["mez_admin_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["mez_admin_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["mez_admin_bool_exp"]},ValueTypes["mez_admin_aggregate"]],
mez_admin_by_pk?: [{	user_id:number},ValueTypes["mez_admin"]],
notification_info?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["notification_info_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["notification_info_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["notification_info_bool_exp"]},ValueTypes["notification_info"]],
notification_info_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["notification_info_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["notification_info_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["notification_info_bool_exp"]},ValueTypes["notification_info_aggregate"]],
notification_info_by_pk?: [{	id:number},ValueTypes["notification_info"]],
restaurant?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_bool_exp"]},ValueTypes["restaurant"]],
restaurant_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_bool_exp"]},ValueTypes["restaurant_aggregate"]],
restaurant_by_pk?: [{	id:number},ValueTypes["restaurant"]],
restaurant_cart?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_cart_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_cart_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_cart_bool_exp"]},ValueTypes["restaurant_cart"]],
restaurant_cart_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_cart_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_cart_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_cart_bool_exp"]},ValueTypes["restaurant_cart_aggregate"]],
restaurant_cart_by_pk?: [{	customer_id:number},ValueTypes["restaurant_cart"]],
restaurant_cart_item?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_cart_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_cart_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_cart_item_bool_exp"]},ValueTypes["restaurant_cart_item"]],
restaurant_cart_item_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_cart_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_cart_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_cart_item_bool_exp"]},ValueTypes["restaurant_cart_item_aggregate"]],
restaurant_cart_item_by_pk?: [{	id:number},ValueTypes["restaurant_cart_item"]],
restaurant_category?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_category_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_category_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_category_bool_exp"]},ValueTypes["restaurant_category"]],
restaurant_category_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_category_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_category_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_category_bool_exp"]},ValueTypes["restaurant_category_aggregate"]],
restaurant_category_by_pk?: [{	id:number},ValueTypes["restaurant_category"]],
restaurant_choice?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_choice_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_choice_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_choice_bool_exp"]},ValueTypes["restaurant_choice"]],
restaurant_choice_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_choice_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_choice_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_choice_bool_exp"]},ValueTypes["restaurant_choice_aggregate"]],
restaurant_choice_by_pk?: [{	id:number},ValueTypes["restaurant_choice"]],
restaurant_item?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_bool_exp"]},ValueTypes["restaurant_item"]],
restaurant_item_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_bool_exp"]},ValueTypes["restaurant_item_aggregate"]],
restaurant_item_by_pk?: [{	id:number},ValueTypes["restaurant_item"]],
restaurant_item_option_map?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_option_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_option_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_option_map_bool_exp"]},ValueTypes["restaurant_item_option_map"]],
restaurant_item_option_map_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_option_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_option_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_option_map_bool_exp"]},ValueTypes["restaurant_item_option_map_aggregate"]],
restaurant_item_option_map_by_pk?: [{	id:number},ValueTypes["restaurant_item_option_map"]],
restaurant_operator?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_operator_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_operator_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_operator_bool_exp"]},ValueTypes["restaurant_operator"]],
restaurant_operator_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_operator_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_operator_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_operator_bool_exp"]},ValueTypes["restaurant_operator_aggregate"]],
restaurant_operator_by_pk?: [{	id:number},ValueTypes["restaurant_operator"]],
restaurant_option?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_bool_exp"]},ValueTypes["restaurant_option"]],
restaurant_option_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_bool_exp"]},ValueTypes["restaurant_option_aggregate"]],
restaurant_option_by_pk?: [{	id:number},ValueTypes["restaurant_option"]],
restaurant_option_choice_map?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_choice_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_choice_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_choice_map_bool_exp"]},ValueTypes["restaurant_option_choice_map"]],
restaurant_option_choice_map_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_choice_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_choice_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_choice_map_bool_exp"]},ValueTypes["restaurant_option_choice_map_aggregate"]],
restaurant_option_choice_map_by_pk?: [{	id:number},ValueTypes["restaurant_option_choice_map"]],
restaurant_order?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_bool_exp"]},ValueTypes["restaurant_order"]],
restaurant_order_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_bool_exp"]},ValueTypes["restaurant_order_aggregate"]],
restaurant_order_by_pk?: [{	id:number},ValueTypes["restaurant_order"]],
restaurant_order_item?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_item_bool_exp"]},ValueTypes["restaurant_order_item"]],
restaurant_order_item_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_item_bool_exp"]},ValueTypes["restaurant_order_item_aggregate"]],
restaurant_order_item_by_pk?: [{	id:number},ValueTypes["restaurant_order_item"]],
restaurant_order_public?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_public_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_public_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_public_bool_exp"]},ValueTypes["restaurant_order_public"]],
restaurant_order_public_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_public_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_public_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_public_bool_exp"]},ValueTypes["restaurant_order_public_aggregate"]],
review?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["review_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["review_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["review_bool_exp"]},ValueTypes["review"]],
review_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["review_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["review_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["review_bool_exp"]},ValueTypes["review_aggregate"]],
review_by_pk?: [{	id:number},ValueTypes["review"]],
saved_location?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["saved_location_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["saved_location_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["saved_location_bool_exp"]},ValueTypes["saved_location"]],
saved_location_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["saved_location_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["saved_location_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["saved_location_bool_exp"]},ValueTypes["saved_location_aggregate"]],
saved_location_by_pk?: [{	id:number},ValueTypes["saved_location"]],
service_provider_payment_info?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["service_provider_payment_info_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["service_provider_payment_info_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["service_provider_payment_info_bool_exp"]},ValueTypes["service_provider_payment_info"]],
service_provider_payment_info_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["service_provider_payment_info_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["service_provider_payment_info_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["service_provider_payment_info_bool_exp"]},ValueTypes["service_provider_payment_info_aggregate"]],
service_provider_payment_info_by_pk?: [{	id:number},ValueTypes["service_provider_payment_info"]],
stripe_info?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["stripe_info_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["stripe_info_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["stripe_info_bool_exp"]},ValueTypes["stripe_info"]],
stripe_info_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["stripe_info_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["stripe_info_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["stripe_info_bool_exp"]},ValueTypes["stripe_info_aggregate"]],
stripe_info_by_pk?: [{	id:number},ValueTypes["stripe_info"]],
topology_app_type?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["topology_app_type_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["topology_app_type_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["topology_app_type_bool_exp"]},ValueTypes["topology_app_type"]],
topology_app_type_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["topology_app_type_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["topology_app_type_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["topology_app_type_bool_exp"]},ValueTypes["topology_app_type_aggregate"]],
topology_app_type_by_pk?: [{	/** customer, delivery, restaurant, admin */
	id:string},ValueTypes["topology_app_type"]],
topology_language?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["topology_language_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["topology_language_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["topology_language_bool_exp"]},ValueTypes["topology_language"]],
topology_language_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["topology_language_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["topology_language_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["topology_language_bool_exp"]},ValueTypes["topology_language_aggregate"]],
topology_language_by_pk?: [{	id:string},ValueTypes["topology_language"]],
translation?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["translation_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["translation_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["translation_bool_exp"]},ValueTypes["translation"]],
translation_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["translation_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["translation_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["translation_bool_exp"]},ValueTypes["translation_aggregate"]],
translation_by_pk?: [{	id:number},ValueTypes["translation"]],
translation_value?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["translation_value_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["translation_value_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["translation_value_bool_exp"]},ValueTypes["translation_value"]],
translation_value_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["translation_value_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["translation_value_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["translation_value_bool_exp"]},ValueTypes["translation_value_aggregate"]],
translation_value_by_pk?: [{	language_id:string,	translation_id:number},ValueTypes["translation_value"]],
user?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["user_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["user_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["user_bool_exp"]},ValueTypes["user"]],
user_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["user_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["user_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["user_bool_exp"]},ValueTypes["user_aggregate"]],
user_by_pk?: [{	id:number},ValueTypes["user"]],
		__typename?: true
}>;
	/** columns and relationships of "restaurant" */
["restaurant"]: AliasType<{
	approved?:true,
categories?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_category_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_category_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_category_bool_exp"]},ValueTypes["restaurant_category"]],
categories_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_category_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_category_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_category_bool_exp"]},ValueTypes["restaurant_category_aggregate"]],
	/** An object relationship */
	description?:ValueTypes["translation"],
	description_id?:true,
	firebase_id?:true,
	id?:true,
	image?:true,
	language_id?:true,
	location_gps?:true,
	location_text?:true,
	name?:true,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:true,
orders?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_bool_exp"]},ValueTypes["restaurant_order"]],
orders_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_bool_exp"]},ValueTypes["restaurant_order_aggregate"]],
	/** An object relationship */
	payment_info?:ValueTypes["service_provider_payment_info"],
	payment_info_id?:true,
restaurant_operators?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_operator_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_operator_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_operator_bool_exp"]},ValueTypes["restaurant_operator"]],
restaurant_operators_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_operator_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_operator_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_operator_bool_exp"]},ValueTypes["restaurant_operator_aggregate"]],
	schedule_id?:true,
	self_delivery?:true,
	service_provider_type?:true,
specials?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_bool_exp"]},ValueTypes["restaurant_item"]],
		__typename?: true
}>;
	/** aggregated selection of "restaurant" */
["restaurant_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_aggregate_fields"],
	nodes?:ValueTypes["restaurant"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant" */
["restaurant_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_max_fields"],
	min?:ValueTypes["restaurant_min_fields"],
	stddev?:ValueTypes["restaurant_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_sum_fields"],
	var_pop?:ValueTypes["restaurant_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_var_samp_fields"],
	variance?:ValueTypes["restaurant_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["restaurant_avg_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	payment_info_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "restaurant". All fields are combined with a logical 'AND'. */
["restaurant_bool_exp"]: {
	_and?:ValueTypes["restaurant_bool_exp"][],
	_not?:ValueTypes["restaurant_bool_exp"],
	_or?:ValueTypes["restaurant_bool_exp"][],
	approved?:ValueTypes["Boolean_comparison_exp"],
	categories?:ValueTypes["restaurant_category_bool_exp"],
	description?:ValueTypes["translation_bool_exp"],
	description_id?:ValueTypes["Int_comparison_exp"],
	firebase_id?:ValueTypes["String_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	image?:ValueTypes["String_comparison_exp"],
	language_id?:ValueTypes["String_comparison_exp"],
	location_gps?:ValueTypes["geography_comparison_exp"],
	location_text?:ValueTypes["String_comparison_exp"],
	name?:ValueTypes["String_comparison_exp"],
	open_status?:ValueTypes["String_comparison_exp"],
	orders?:ValueTypes["restaurant_order_bool_exp"],
	payment_info?:ValueTypes["service_provider_payment_info_bool_exp"],
	payment_info_id?:ValueTypes["Int_comparison_exp"],
	restaurant_operators?:ValueTypes["restaurant_operator_bool_exp"],
	schedule_id?:ValueTypes["Int_comparison_exp"],
	self_delivery?:ValueTypes["Boolean_comparison_exp"],
	service_provider_type?:ValueTypes["String_comparison_exp"],
	specials?:ValueTypes["restaurant_item_bool_exp"]
};
	/** columns and relationships of "restaurant_cart" */
["restaurant_cart"]: AliasType<{
	/** A computed field, executes function "cost" */
	cost?:true,
	/** An object relationship */
	customer?:ValueTypes["customer"],
	customer_id?:true,
items?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_cart_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_cart_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_cart_item_bool_exp"]},ValueTypes["restaurant_cart_item"]],
items_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_cart_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_cart_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_cart_item_bool_exp"]},ValueTypes["restaurant_cart_item_aggregate"]],
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	restaurant_id?:true,
		__typename?: true
}>;
	/** aggregated selection of "restaurant_cart" */
["restaurant_cart_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_cart_aggregate_fields"],
	nodes?:ValueTypes["restaurant_cart"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant_cart" */
["restaurant_cart_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_cart_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_cart_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_cart_max_fields"],
	min?:ValueTypes["restaurant_cart_min_fields"],
	stddev?:ValueTypes["restaurant_cart_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_cart_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_cart_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_cart_sum_fields"],
	var_pop?:ValueTypes["restaurant_cart_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_cart_var_samp_fields"],
	variance?:ValueTypes["restaurant_cart_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["restaurant_cart_avg_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "restaurant_cart". All fields are combined with a logical 'AND'. */
["restaurant_cart_bool_exp"]: {
	_and?:ValueTypes["restaurant_cart_bool_exp"][],
	_not?:ValueTypes["restaurant_cart_bool_exp"],
	_or?:ValueTypes["restaurant_cart_bool_exp"][],
	cost?:ValueTypes["money_comparison_exp"],
	customer?:ValueTypes["customer_bool_exp"],
	customer_id?:ValueTypes["Int_comparison_exp"],
	items?:ValueTypes["restaurant_cart_item_bool_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	restaurant_id?:ValueTypes["Int_comparison_exp"]
};
	/** unique or primary key constraints on table "restaurant_cart" */
["restaurant_cart_constraint"]:restaurant_cart_constraint;
	/** input type for incrementing numeric columns in table "restaurant_cart" */
["restaurant_cart_inc_input"]: {
	customer_id?:number,
	restaurant_id?:number
};
	/** input type for inserting data into table "restaurant_cart" */
["restaurant_cart_insert_input"]: {
	customer?:ValueTypes["customer_obj_rel_insert_input"],
	customer_id?:number,
	items?:ValueTypes["restaurant_cart_item_arr_rel_insert_input"],
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	restaurant_id?:number
};
	/** columns and relationships of "restaurant_cart_item" */
["restaurant_cart_item"]: AliasType<{
	cost_per_one?:true,
	customer_id?:true,
	id?:true,
	note?:true,
	quantity?:true,
	/** An object relationship */
	restaurant_cart?:ValueTypes["restaurant_cart"],
	/** An object relationship */
	restaurant_item?:ValueTypes["restaurant_item"],
	restaurant_item_id?:true,
selected_options?: [{	/** JSON select path */
	path?:string},true],
		__typename?: true
}>;
	/** aggregated selection of "restaurant_cart_item" */
["restaurant_cart_item_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_cart_item_aggregate_fields"],
	nodes?:ValueTypes["restaurant_cart_item"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant_cart_item" */
["restaurant_cart_item_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_cart_item_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_cart_item_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_cart_item_max_fields"],
	min?:ValueTypes["restaurant_cart_item_min_fields"],
	stddev?:ValueTypes["restaurant_cart_item_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_cart_item_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_cart_item_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_cart_item_sum_fields"],
	var_pop?:ValueTypes["restaurant_cart_item_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_cart_item_var_samp_fields"],
	variance?:ValueTypes["restaurant_cart_item_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "restaurant_cart_item" */
["restaurant_cart_item_aggregate_order_by"]: {
	avg?:ValueTypes["restaurant_cart_item_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["restaurant_cart_item_max_order_by"],
	min?:ValueTypes["restaurant_cart_item_min_order_by"],
	stddev?:ValueTypes["restaurant_cart_item_stddev_order_by"],
	stddev_pop?:ValueTypes["restaurant_cart_item_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["restaurant_cart_item_stddev_samp_order_by"],
	sum?:ValueTypes["restaurant_cart_item_sum_order_by"],
	var_pop?:ValueTypes["restaurant_cart_item_var_pop_order_by"],
	var_samp?:ValueTypes["restaurant_cart_item_var_samp_order_by"],
	variance?:ValueTypes["restaurant_cart_item_variance_order_by"]
};
	/** input type for inserting array relation for remote table "restaurant_cart_item" */
["restaurant_cart_item_arr_rel_insert_input"]: {
	data:ValueTypes["restaurant_cart_item_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_cart_item_on_conflict"]
};
	/** aggregate avg on columns */
["restaurant_cart_item_avg_fields"]: AliasType<{
	cost_per_one?:true,
	customer_id?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_avg_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "restaurant_cart_item". All fields are combined with a logical 'AND'. */
["restaurant_cart_item_bool_exp"]: {
	_and?:ValueTypes["restaurant_cart_item_bool_exp"][],
	_not?:ValueTypes["restaurant_cart_item_bool_exp"],
	_or?:ValueTypes["restaurant_cart_item_bool_exp"][],
	cost_per_one?:ValueTypes["money_comparison_exp"],
	customer_id?:ValueTypes["Int_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	note?:ValueTypes["String_comparison_exp"],
	quantity?:ValueTypes["Int_comparison_exp"],
	restaurant_cart?:ValueTypes["restaurant_cart_bool_exp"],
	restaurant_item?:ValueTypes["restaurant_item_bool_exp"],
	restaurant_item_id?:ValueTypes["Int_comparison_exp"],
	selected_options?:ValueTypes["json_comparison_exp"]
};
	/** unique or primary key constraints on table "restaurant_cart_item" */
["restaurant_cart_item_constraint"]:restaurant_cart_item_constraint;
	/** input type for incrementing numeric columns in table "restaurant_cart_item" */
["restaurant_cart_item_inc_input"]: {
	cost_per_one?:ValueTypes["money"],
	customer_id?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number
};
	/** input type for inserting data into table "restaurant_cart_item" */
["restaurant_cart_item_insert_input"]: {
	cost_per_one?:ValueTypes["money"],
	customer_id?:number,
	id?:number,
	note?:string,
	quantity?:number,
	restaurant_cart?:ValueTypes["restaurant_cart_obj_rel_insert_input"],
	restaurant_item?:ValueTypes["restaurant_item_obj_rel_insert_input"],
	restaurant_item_id?:number,
	/** {<option-id>:[<choice-id>] */
	selected_options?:ValueTypes["json"]
};
	/** aggregate max on columns */
["restaurant_cart_item_max_fields"]: AliasType<{
	cost_per_one?:true,
	customer_id?:true,
	id?:true,
	note?:true,
	quantity?:true,
	restaurant_item_id?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_max_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	note?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["restaurant_cart_item_min_fields"]: AliasType<{
	cost_per_one?:true,
	customer_id?:true,
	id?:true,
	note?:true,
	quantity?:true,
	restaurant_item_id?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_min_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	note?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "restaurant_cart_item" */
["restaurant_cart_item_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant_cart_item"],
		__typename?: true
}>;
	/** on_conflict condition type for table "restaurant_cart_item" */
["restaurant_cart_item_on_conflict"]: {
	constraint:ValueTypes["restaurant_cart_item_constraint"],
	update_columns:ValueTypes["restaurant_cart_item_update_column"][],
	where?:ValueTypes["restaurant_cart_item_bool_exp"]
};
	/** Ordering options when selecting data from "restaurant_cart_item". */
["restaurant_cart_item_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	note?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_cart?:ValueTypes["restaurant_cart_order_by"],
	restaurant_item?:ValueTypes["restaurant_item_order_by"],
	restaurant_item_id?:ValueTypes["order_by"],
	selected_options?:ValueTypes["order_by"]
};
	/** primary key columns input for table: restaurant_cart_item */
["restaurant_cart_item_pk_columns_input"]: {
	id:number
};
	/** select columns of table "restaurant_cart_item" */
["restaurant_cart_item_select_column"]:restaurant_cart_item_select_column;
	/** input type for updating data in table "restaurant_cart_item" */
["restaurant_cart_item_set_input"]: {
	cost_per_one?:ValueTypes["money"],
	customer_id?:number,
	id?:number,
	note?:string,
	quantity?:number,
	restaurant_item_id?:number,
	/** {<option-id>:[<choice-id>] */
	selected_options?:ValueTypes["json"]
};
	/** aggregate stddev on columns */
["restaurant_cart_item_stddev_fields"]: AliasType<{
	cost_per_one?:true,
	customer_id?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_stddev_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["restaurant_cart_item_stddev_pop_fields"]: AliasType<{
	cost_per_one?:true,
	customer_id?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_stddev_pop_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["restaurant_cart_item_stddev_samp_fields"]: AliasType<{
	cost_per_one?:true,
	customer_id?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_stddev_samp_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "restaurant_cart_item" */
["restaurant_cart_item_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_cart_item_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_cart_item_stream_cursor_value_input"]: {
	cost_per_one?:ValueTypes["money"],
	customer_id?:number,
	id?:number,
	note?:string,
	quantity?:number,
	restaurant_item_id?:number,
	/** {<option-id>:[<choice-id>] */
	selected_options?:ValueTypes["json"]
};
	/** aggregate sum on columns */
["restaurant_cart_item_sum_fields"]: AliasType<{
	cost_per_one?:true,
	customer_id?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_sum_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"]
};
	/** update columns of table "restaurant_cart_item" */
["restaurant_cart_item_update_column"]:restaurant_cart_item_update_column;
	["restaurant_cart_item_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_cart_item_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_cart_item_set_input"],
	where:ValueTypes["restaurant_cart_item_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_cart_item_var_pop_fields"]: AliasType<{
	cost_per_one?:true,
	customer_id?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_var_pop_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["restaurant_cart_item_var_samp_fields"]: AliasType<{
	cost_per_one?:true,
	customer_id?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_var_samp_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["restaurant_cart_item_variance_fields"]: AliasType<{
	cost_per_one?:true,
	customer_id?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_variance_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"]
};
	/** aggregate max on columns */
["restaurant_cart_max_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["restaurant_cart_min_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "restaurant_cart" */
["restaurant_cart_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant_cart"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "restaurant_cart" */
["restaurant_cart_obj_rel_insert_input"]: {
	data:ValueTypes["restaurant_cart_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_cart_on_conflict"]
};
	/** on_conflict condition type for table "restaurant_cart" */
["restaurant_cart_on_conflict"]: {
	constraint:ValueTypes["restaurant_cart_constraint"],
	update_columns:ValueTypes["restaurant_cart_update_column"][],
	where?:ValueTypes["restaurant_cart_bool_exp"]
};
	/** Ordering options when selecting data from "restaurant_cart". */
["restaurant_cart_order_by"]: {
	cost?:ValueTypes["order_by"],
	customer?:ValueTypes["customer_order_by"],
	customer_id?:ValueTypes["order_by"],
	items_aggregate?:ValueTypes["restaurant_cart_item_aggregate_order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: restaurant_cart */
["restaurant_cart_pk_columns_input"]: {
	customer_id:number
};
	/** select columns of table "restaurant_cart" */
["restaurant_cart_select_column"]:restaurant_cart_select_column;
	/** input type for updating data in table "restaurant_cart" */
["restaurant_cart_set_input"]: {
	customer_id?:number,
	restaurant_id?:number
};
	/** aggregate stddev on columns */
["restaurant_cart_stddev_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["restaurant_cart_stddev_pop_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["restaurant_cart_stddev_samp_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "restaurant_cart" */
["restaurant_cart_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_cart_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_cart_stream_cursor_value_input"]: {
	customer_id?:number,
	restaurant_id?:number
};
	/** aggregate sum on columns */
["restaurant_cart_sum_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** update columns of table "restaurant_cart" */
["restaurant_cart_update_column"]:restaurant_cart_update_column;
	["restaurant_cart_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_cart_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_cart_set_input"],
	where:ValueTypes["restaurant_cart_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_cart_var_pop_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["restaurant_cart_var_samp_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["restaurant_cart_variance_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** columns and relationships of "restaurant_category" */
["restaurant_category"]: AliasType<{
	/** An object relationship */
	description?:ValueTypes["translation"],
	description_id?:true,
	id?:true,
items?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_bool_exp"]},ValueTypes["restaurant_item"]],
items_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_bool_exp"]},ValueTypes["restaurant_item_aggregate"]],
	/** An object relationship */
	name?:ValueTypes["translation"],
	name_id?:true,
	position?:true,
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	restaurant_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** aggregated selection of "restaurant_category" */
["restaurant_category_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_category_aggregate_fields"],
	nodes?:ValueTypes["restaurant_category"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant_category" */
["restaurant_category_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_category_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_category_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_category_max_fields"],
	min?:ValueTypes["restaurant_category_min_fields"],
	stddev?:ValueTypes["restaurant_category_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_category_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_category_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_category_sum_fields"],
	var_pop?:ValueTypes["restaurant_category_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_category_var_samp_fields"],
	variance?:ValueTypes["restaurant_category_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "restaurant_category" */
["restaurant_category_aggregate_order_by"]: {
	avg?:ValueTypes["restaurant_category_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["restaurant_category_max_order_by"],
	min?:ValueTypes["restaurant_category_min_order_by"],
	stddev?:ValueTypes["restaurant_category_stddev_order_by"],
	stddev_pop?:ValueTypes["restaurant_category_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["restaurant_category_stddev_samp_order_by"],
	sum?:ValueTypes["restaurant_category_sum_order_by"],
	var_pop?:ValueTypes["restaurant_category_var_pop_order_by"],
	var_samp?:ValueTypes["restaurant_category_var_samp_order_by"],
	variance?:ValueTypes["restaurant_category_variance_order_by"]
};
	/** input type for inserting array relation for remote table "restaurant_category" */
["restaurant_category_arr_rel_insert_input"]: {
	data:ValueTypes["restaurant_category_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_category_on_conflict"]
};
	/** aggregate avg on columns */
["restaurant_category_avg_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "restaurant_category" */
["restaurant_category_avg_order_by"]: {
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	schedule_id?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "restaurant_category". All fields are combined with a logical 'AND'. */
["restaurant_category_bool_exp"]: {
	_and?:ValueTypes["restaurant_category_bool_exp"][],
	_not?:ValueTypes["restaurant_category_bool_exp"],
	_or?:ValueTypes["restaurant_category_bool_exp"][],
	description?:ValueTypes["translation_bool_exp"],
	description_id?:ValueTypes["Int_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	items?:ValueTypes["restaurant_item_bool_exp"],
	name?:ValueTypes["translation_bool_exp"],
	name_id?:ValueTypes["Int_comparison_exp"],
	position?:ValueTypes["Int_comparison_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	restaurant_id?:ValueTypes["Int_comparison_exp"],
	schedule_id?:ValueTypes["Int_comparison_exp"]
};
	/** unique or primary key constraints on table "restaurant_category" */
["restaurant_category_constraint"]:restaurant_category_constraint;
	/** input type for incrementing numeric columns in table "restaurant_category" */
["restaurant_category_inc_input"]: {
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
};
	/** input type for inserting data into table "restaurant_category" */
["restaurant_category_insert_input"]: {
	description?:ValueTypes["translation_obj_rel_insert_input"],
	description_id?:number,
	id?:number,
	items?:ValueTypes["restaurant_item_arr_rel_insert_input"],
	name?:ValueTypes["translation_obj_rel_insert_input"],
	name_id?:number,
	position?:number,
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	restaurant_id?:number,
	schedule_id?:number
};
	/** aggregate max on columns */
["restaurant_category_max_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "restaurant_category" */
["restaurant_category_max_order_by"]: {
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	schedule_id?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["restaurant_category_min_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "restaurant_category" */
["restaurant_category_min_order_by"]: {
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	schedule_id?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "restaurant_category" */
["restaurant_category_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant_category"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "restaurant_category" */
["restaurant_category_obj_rel_insert_input"]: {
	data:ValueTypes["restaurant_category_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_category_on_conflict"]
};
	/** on_conflict condition type for table "restaurant_category" */
["restaurant_category_on_conflict"]: {
	constraint:ValueTypes["restaurant_category_constraint"],
	update_columns:ValueTypes["restaurant_category_update_column"][],
	where?:ValueTypes["restaurant_category_bool_exp"]
};
	/** Ordering options when selecting data from "restaurant_category". */
["restaurant_category_order_by"]: {
	description?:ValueTypes["translation_order_by"],
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	items_aggregate?:ValueTypes["restaurant_item_aggregate_order_by"],
	name?:ValueTypes["translation_order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	restaurant_id?:ValueTypes["order_by"],
	schedule_id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: restaurant_category */
["restaurant_category_pk_columns_input"]: {
	id:number
};
	/** select columns of table "restaurant_category" */
["restaurant_category_select_column"]:restaurant_category_select_column;
	/** input type for updating data in table "restaurant_category" */
["restaurant_category_set_input"]: {
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
};
	/** aggregate stddev on columns */
["restaurant_category_stddev_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "restaurant_category" */
["restaurant_category_stddev_order_by"]: {
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	schedule_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["restaurant_category_stddev_pop_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "restaurant_category" */
["restaurant_category_stddev_pop_order_by"]: {
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	schedule_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["restaurant_category_stddev_samp_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "restaurant_category" */
["restaurant_category_stddev_samp_order_by"]: {
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	schedule_id?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "restaurant_category" */
["restaurant_category_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_category_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_category_stream_cursor_value_input"]: {
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
};
	/** aggregate sum on columns */
["restaurant_category_sum_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "restaurant_category" */
["restaurant_category_sum_order_by"]: {
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	schedule_id?:ValueTypes["order_by"]
};
	/** update columns of table "restaurant_category" */
["restaurant_category_update_column"]:restaurant_category_update_column;
	["restaurant_category_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_category_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_category_set_input"],
	where:ValueTypes["restaurant_category_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_category_var_pop_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "restaurant_category" */
["restaurant_category_var_pop_order_by"]: {
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	schedule_id?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["restaurant_category_var_samp_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "restaurant_category" */
["restaurant_category_var_samp_order_by"]: {
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	schedule_id?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["restaurant_category_variance_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "restaurant_category" */
["restaurant_category_variance_order_by"]: {
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	schedule_id?:ValueTypes["order_by"]
};
	/** columns and relationships of "restaurant_choice" */
["restaurant_choice"]: AliasType<{
	available?:true,
	cost?:true,
	id?:true,
	/** An object relationship */
	name?:ValueTypes["translation"],
	name_id?:true,
options?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_choice_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_choice_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_choice_map_bool_exp"]},ValueTypes["restaurant_option_choice_map"]],
options_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_choice_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_choice_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_choice_map_bool_exp"]},ValueTypes["restaurant_option_choice_map_aggregate"]],
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	restaurant_id?:true,
		__typename?: true
}>;
	/** aggregated selection of "restaurant_choice" */
["restaurant_choice_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_choice_aggregate_fields"],
	nodes?:ValueTypes["restaurant_choice"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant_choice" */
["restaurant_choice_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_choice_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_choice_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_choice_max_fields"],
	min?:ValueTypes["restaurant_choice_min_fields"],
	stddev?:ValueTypes["restaurant_choice_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_choice_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_choice_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_choice_sum_fields"],
	var_pop?:ValueTypes["restaurant_choice_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_choice_var_samp_fields"],
	variance?:ValueTypes["restaurant_choice_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "restaurant_choice" */
["restaurant_choice_aggregate_order_by"]: {
	avg?:ValueTypes["restaurant_choice_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["restaurant_choice_max_order_by"],
	min?:ValueTypes["restaurant_choice_min_order_by"],
	stddev?:ValueTypes["restaurant_choice_stddev_order_by"],
	stddev_pop?:ValueTypes["restaurant_choice_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["restaurant_choice_stddev_samp_order_by"],
	sum?:ValueTypes["restaurant_choice_sum_order_by"],
	var_pop?:ValueTypes["restaurant_choice_var_pop_order_by"],
	var_samp?:ValueTypes["restaurant_choice_var_samp_order_by"],
	variance?:ValueTypes["restaurant_choice_variance_order_by"]
};
	/** input type for inserting array relation for remote table "restaurant_choice" */
["restaurant_choice_arr_rel_insert_input"]: {
	data:ValueTypes["restaurant_choice_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_choice_on_conflict"]
};
	/** aggregate avg on columns */
["restaurant_choice_avg_fields"]: AliasType<{
	cost?:true,
	id?:true,
	name_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "restaurant_choice" */
["restaurant_choice_avg_order_by"]: {
	cost?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "restaurant_choice". All fields are combined with a logical 'AND'. */
["restaurant_choice_bool_exp"]: {
	_and?:ValueTypes["restaurant_choice_bool_exp"][],
	_not?:ValueTypes["restaurant_choice_bool_exp"],
	_or?:ValueTypes["restaurant_choice_bool_exp"][],
	available?:ValueTypes["Boolean_comparison_exp"],
	cost?:ValueTypes["money_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	name?:ValueTypes["translation_bool_exp"],
	name_id?:ValueTypes["Int_comparison_exp"],
	options?:ValueTypes["restaurant_option_choice_map_bool_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	restaurant_id?:ValueTypes["Int_comparison_exp"]
};
	/** unique or primary key constraints on table "restaurant_choice" */
["restaurant_choice_constraint"]:restaurant_choice_constraint;
	/** input type for incrementing numeric columns in table "restaurant_choice" */
["restaurant_choice_inc_input"]: {
	cost?:ValueTypes["money"],
	id?:number,
	name_id?:number,
	restaurant_id?:number
};
	/** input type for inserting data into table "restaurant_choice" */
["restaurant_choice_insert_input"]: {
	available?:boolean,
	cost?:ValueTypes["money"],
	id?:number,
	name?:ValueTypes["translation_obj_rel_insert_input"],
	name_id?:number,
	options?:ValueTypes["restaurant_option_choice_map_arr_rel_insert_input"],
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	restaurant_id?:number
};
	/** aggregate max on columns */
["restaurant_choice_max_fields"]: AliasType<{
	cost?:true,
	id?:true,
	name_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "restaurant_choice" */
["restaurant_choice_max_order_by"]: {
	cost?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["restaurant_choice_min_fields"]: AliasType<{
	cost?:true,
	id?:true,
	name_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "restaurant_choice" */
["restaurant_choice_min_order_by"]: {
	cost?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "restaurant_choice" */
["restaurant_choice_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant_choice"],
		__typename?: true
}>;
	/** on_conflict condition type for table "restaurant_choice" */
["restaurant_choice_on_conflict"]: {
	constraint:ValueTypes["restaurant_choice_constraint"],
	update_columns:ValueTypes["restaurant_choice_update_column"][],
	where?:ValueTypes["restaurant_choice_bool_exp"]
};
	/** Ordering options when selecting data from "restaurant_choice". */
["restaurant_choice_order_by"]: {
	available?:ValueTypes["order_by"],
	cost?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name?:ValueTypes["translation_order_by"],
	name_id?:ValueTypes["order_by"],
	options_aggregate?:ValueTypes["restaurant_option_choice_map_aggregate_order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: restaurant_choice */
["restaurant_choice_pk_columns_input"]: {
	id:number
};
	/** select columns of table "restaurant_choice" */
["restaurant_choice_select_column"]:restaurant_choice_select_column;
	/** input type for updating data in table "restaurant_choice" */
["restaurant_choice_set_input"]: {
	available?:boolean,
	cost?:ValueTypes["money"],
	id?:number,
	name_id?:number,
	restaurant_id?:number
};
	/** aggregate stddev on columns */
["restaurant_choice_stddev_fields"]: AliasType<{
	cost?:true,
	id?:true,
	name_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "restaurant_choice" */
["restaurant_choice_stddev_order_by"]: {
	cost?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["restaurant_choice_stddev_pop_fields"]: AliasType<{
	cost?:true,
	id?:true,
	name_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "restaurant_choice" */
["restaurant_choice_stddev_pop_order_by"]: {
	cost?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["restaurant_choice_stddev_samp_fields"]: AliasType<{
	cost?:true,
	id?:true,
	name_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "restaurant_choice" */
["restaurant_choice_stddev_samp_order_by"]: {
	cost?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "restaurant_choice" */
["restaurant_choice_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_choice_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_choice_stream_cursor_value_input"]: {
	available?:boolean,
	cost?:ValueTypes["money"],
	id?:number,
	name_id?:number,
	restaurant_id?:number
};
	/** aggregate sum on columns */
["restaurant_choice_sum_fields"]: AliasType<{
	cost?:true,
	id?:true,
	name_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "restaurant_choice" */
["restaurant_choice_sum_order_by"]: {
	cost?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** update columns of table "restaurant_choice" */
["restaurant_choice_update_column"]:restaurant_choice_update_column;
	["restaurant_choice_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_choice_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_choice_set_input"],
	where:ValueTypes["restaurant_choice_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_choice_var_pop_fields"]: AliasType<{
	cost?:true,
	id?:true,
	name_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "restaurant_choice" */
["restaurant_choice_var_pop_order_by"]: {
	cost?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["restaurant_choice_var_samp_fields"]: AliasType<{
	cost?:true,
	id?:true,
	name_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "restaurant_choice" */
["restaurant_choice_var_samp_order_by"]: {
	cost?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["restaurant_choice_variance_fields"]: AliasType<{
	cost?:true,
	id?:true,
	name_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "restaurant_choice" */
["restaurant_choice_variance_order_by"]: {
	cost?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** unique or primary key constraints on table "restaurant" */
["restaurant_constraint"]:restaurant_constraint;
	/** input type for incrementing numeric columns in table "restaurant" */
["restaurant_inc_input"]: {
	description_id?:number,
	id?:number,
	payment_info_id?:number,
	schedule_id?:number
};
	/** input type for inserting data into table "restaurant" */
["restaurant_insert_input"]: {
	approved?:boolean,
	categories?:ValueTypes["restaurant_category_arr_rel_insert_input"],
	description?:ValueTypes["translation_obj_rel_insert_input"],
	description_id?:number,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	location_gps?:ValueTypes["geography"],
	location_text?:string,
	name?:string,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
	orders?:ValueTypes["restaurant_order_arr_rel_insert_input"],
	payment_info?:ValueTypes["service_provider_payment_info_obj_rel_insert_input"],
	payment_info_id?:number,
	restaurant_operators?:ValueTypes["restaurant_operator_arr_rel_insert_input"],
	schedule_id?:number,
	self_delivery?:boolean,
	service_provider_type?:string
};
	/** columns and relationships of "restaurant_item" */
["restaurant_item"]: AliasType<{
	archived?:true,
	available?:true,
	/** An object relationship */
	category?:ValueTypes["restaurant_category"],
	category_id?:true,
	cost?:true,
	/** An object relationship */
	description?:ValueTypes["translation"],
	description_id?:true,
	id?:true,
	/** daily, special */
	item_type?:true,
	/** An object relationship */
	name?:ValueTypes["translation"],
	name_id?:true,
options?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_option_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_option_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_option_map_bool_exp"]},ValueTypes["restaurant_item_option_map"]],
options_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_option_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_option_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_option_map_bool_exp"]},ValueTypes["restaurant_item_option_map_aggregate"]],
	position?:true,
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	restaurant_id?:true,
	special_period_end?:true,
	special_period_start?:true,
		__typename?: true
}>;
	/** aggregated selection of "restaurant_item" */
["restaurant_item_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_item_aggregate_fields"],
	nodes?:ValueTypes["restaurant_item"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant_item" */
["restaurant_item_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_item_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_item_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_item_max_fields"],
	min?:ValueTypes["restaurant_item_min_fields"],
	stddev?:ValueTypes["restaurant_item_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_item_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_item_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_item_sum_fields"],
	var_pop?:ValueTypes["restaurant_item_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_item_var_samp_fields"],
	variance?:ValueTypes["restaurant_item_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "restaurant_item" */
["restaurant_item_aggregate_order_by"]: {
	avg?:ValueTypes["restaurant_item_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["restaurant_item_max_order_by"],
	min?:ValueTypes["restaurant_item_min_order_by"],
	stddev?:ValueTypes["restaurant_item_stddev_order_by"],
	stddev_pop?:ValueTypes["restaurant_item_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["restaurant_item_stddev_samp_order_by"],
	sum?:ValueTypes["restaurant_item_sum_order_by"],
	var_pop?:ValueTypes["restaurant_item_var_pop_order_by"],
	var_samp?:ValueTypes["restaurant_item_var_samp_order_by"],
	variance?:ValueTypes["restaurant_item_variance_order_by"]
};
	/** input type for inserting array relation for remote table "restaurant_item" */
["restaurant_item_arr_rel_insert_input"]: {
	data:ValueTypes["restaurant_item_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_item_on_conflict"]
};
	/** aggregate avg on columns */
["restaurant_item_avg_fields"]: AliasType<{
	category_id?:true,
	cost?:true,
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "restaurant_item" */
["restaurant_item_avg_order_by"]: {
	category_id?:ValueTypes["order_by"],
	cost?:ValueTypes["order_by"],
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "restaurant_item". All fields are combined with a logical 'AND'. */
["restaurant_item_bool_exp"]: {
	_and?:ValueTypes["restaurant_item_bool_exp"][],
	_not?:ValueTypes["restaurant_item_bool_exp"],
	_or?:ValueTypes["restaurant_item_bool_exp"][],
	archived?:ValueTypes["Boolean_comparison_exp"],
	available?:ValueTypes["Boolean_comparison_exp"],
	category?:ValueTypes["restaurant_category_bool_exp"],
	category_id?:ValueTypes["Int_comparison_exp"],
	cost?:ValueTypes["money_comparison_exp"],
	description?:ValueTypes["translation_bool_exp"],
	description_id?:ValueTypes["Int_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	item_type?:ValueTypes["String_comparison_exp"],
	name?:ValueTypes["translation_bool_exp"],
	name_id?:ValueTypes["Int_comparison_exp"],
	options?:ValueTypes["restaurant_item_option_map_bool_exp"],
	position?:ValueTypes["Int_comparison_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	restaurant_id?:ValueTypes["Int_comparison_exp"],
	special_period_end?:ValueTypes["timestamptz_comparison_exp"],
	special_period_start?:ValueTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "restaurant_item" */
["restaurant_item_constraint"]:restaurant_item_constraint;
	/** input type for incrementing numeric columns in table "restaurant_item" */
["restaurant_item_inc_input"]: {
	category_id?:number,
	cost?:ValueTypes["money"],
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
};
	/** input type for inserting data into table "restaurant_item" */
["restaurant_item_insert_input"]: {
	archived?:boolean,
	available?:boolean,
	category?:ValueTypes["restaurant_category_obj_rel_insert_input"],
	category_id?:number,
	cost?:ValueTypes["money"],
	description?:ValueTypes["translation_obj_rel_insert_input"],
	description_id?:number,
	id?:number,
	/** daily, special */
	item_type?:string,
	name?:ValueTypes["translation_obj_rel_insert_input"],
	name_id?:number,
	options?:ValueTypes["restaurant_item_option_map_arr_rel_insert_input"],
	position?:number,
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	restaurant_id?:number,
	special_period_end?:ValueTypes["timestamptz"],
	special_period_start?:ValueTypes["timestamptz"]
};
	/** aggregate max on columns */
["restaurant_item_max_fields"]: AliasType<{
	category_id?:true,
	cost?:true,
	description_id?:true,
	id?:true,
	/** daily, special */
	item_type?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
	special_period_end?:true,
	special_period_start?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "restaurant_item" */
["restaurant_item_max_order_by"]: {
	category_id?:ValueTypes["order_by"],
	cost?:ValueTypes["order_by"],
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	/** daily, special */
	item_type?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	special_period_end?:ValueTypes["order_by"],
	special_period_start?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["restaurant_item_min_fields"]: AliasType<{
	category_id?:true,
	cost?:true,
	description_id?:true,
	id?:true,
	/** daily, special */
	item_type?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
	special_period_end?:true,
	special_period_start?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "restaurant_item" */
["restaurant_item_min_order_by"]: {
	category_id?:ValueTypes["order_by"],
	cost?:ValueTypes["order_by"],
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	/** daily, special */
	item_type?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	special_period_end?:ValueTypes["order_by"],
	special_period_start?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "restaurant_item" */
["restaurant_item_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant_item"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "restaurant_item" */
["restaurant_item_obj_rel_insert_input"]: {
	data:ValueTypes["restaurant_item_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_item_on_conflict"]
};
	/** on_conflict condition type for table "restaurant_item" */
["restaurant_item_on_conflict"]: {
	constraint:ValueTypes["restaurant_item_constraint"],
	update_columns:ValueTypes["restaurant_item_update_column"][],
	where?:ValueTypes["restaurant_item_bool_exp"]
};
	/** columns and relationships of "restaurant_item_option_map" */
["restaurant_item_option_map"]: AliasType<{
	id?:true,
	item_id?:true,
item_options?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_bool_exp"]},ValueTypes["restaurant_option"]],
item_options_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_bool_exp"]},ValueTypes["restaurant_option_aggregate"]],
	option_id?:true,
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	restaurant_id?:true,
		__typename?: true
}>;
	/** aggregated selection of "restaurant_item_option_map" */
["restaurant_item_option_map_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_item_option_map_aggregate_fields"],
	nodes?:ValueTypes["restaurant_item_option_map"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant_item_option_map" */
["restaurant_item_option_map_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_item_option_map_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_item_option_map_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_item_option_map_max_fields"],
	min?:ValueTypes["restaurant_item_option_map_min_fields"],
	stddev?:ValueTypes["restaurant_item_option_map_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_item_option_map_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_item_option_map_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_item_option_map_sum_fields"],
	var_pop?:ValueTypes["restaurant_item_option_map_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_item_option_map_var_samp_fields"],
	variance?:ValueTypes["restaurant_item_option_map_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "restaurant_item_option_map" */
["restaurant_item_option_map_aggregate_order_by"]: {
	avg?:ValueTypes["restaurant_item_option_map_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["restaurant_item_option_map_max_order_by"],
	min?:ValueTypes["restaurant_item_option_map_min_order_by"],
	stddev?:ValueTypes["restaurant_item_option_map_stddev_order_by"],
	stddev_pop?:ValueTypes["restaurant_item_option_map_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["restaurant_item_option_map_stddev_samp_order_by"],
	sum?:ValueTypes["restaurant_item_option_map_sum_order_by"],
	var_pop?:ValueTypes["restaurant_item_option_map_var_pop_order_by"],
	var_samp?:ValueTypes["restaurant_item_option_map_var_samp_order_by"],
	variance?:ValueTypes["restaurant_item_option_map_variance_order_by"]
};
	/** input type for inserting array relation for remote table "restaurant_item_option_map" */
["restaurant_item_option_map_arr_rel_insert_input"]: {
	data:ValueTypes["restaurant_item_option_map_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_item_option_map_on_conflict"]
};
	/** aggregate avg on columns */
["restaurant_item_option_map_avg_fields"]: AliasType<{
	id?:true,
	item_id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_avg_order_by"]: {
	id?:ValueTypes["order_by"],
	item_id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "restaurant_item_option_map". All fields are combined with a logical 'AND'. */
["restaurant_item_option_map_bool_exp"]: {
	_and?:ValueTypes["restaurant_item_option_map_bool_exp"][],
	_not?:ValueTypes["restaurant_item_option_map_bool_exp"],
	_or?:ValueTypes["restaurant_item_option_map_bool_exp"][],
	id?:ValueTypes["Int_comparison_exp"],
	item_id?:ValueTypes["Int_comparison_exp"],
	item_options?:ValueTypes["restaurant_option_bool_exp"],
	option_id?:ValueTypes["Int_comparison_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	restaurant_id?:ValueTypes["Int_comparison_exp"]
};
	/** unique or primary key constraints on table "restaurant_item_option_map" */
["restaurant_item_option_map_constraint"]:restaurant_item_option_map_constraint;
	/** input type for incrementing numeric columns in table "restaurant_item_option_map" */
["restaurant_item_option_map_inc_input"]: {
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
};
	/** input type for inserting data into table "restaurant_item_option_map" */
["restaurant_item_option_map_insert_input"]: {
	id?:number,
	item_id?:number,
	item_options?:ValueTypes["restaurant_option_arr_rel_insert_input"],
	option_id?:number,
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	restaurant_id?:number
};
	/** aggregate max on columns */
["restaurant_item_option_map_max_fields"]: AliasType<{
	id?:true,
	item_id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_max_order_by"]: {
	id?:ValueTypes["order_by"],
	item_id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["restaurant_item_option_map_min_fields"]: AliasType<{
	id?:true,
	item_id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_min_order_by"]: {
	id?:ValueTypes["order_by"],
	item_id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "restaurant_item_option_map" */
["restaurant_item_option_map_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant_item_option_map"],
		__typename?: true
}>;
	/** on_conflict condition type for table "restaurant_item_option_map" */
["restaurant_item_option_map_on_conflict"]: {
	constraint:ValueTypes["restaurant_item_option_map_constraint"],
	update_columns:ValueTypes["restaurant_item_option_map_update_column"][],
	where?:ValueTypes["restaurant_item_option_map_bool_exp"]
};
	/** Ordering options when selecting data from "restaurant_item_option_map". */
["restaurant_item_option_map_order_by"]: {
	id?:ValueTypes["order_by"],
	item_id?:ValueTypes["order_by"],
	item_options_aggregate?:ValueTypes["restaurant_option_aggregate_order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: restaurant_item_option_map */
["restaurant_item_option_map_pk_columns_input"]: {
	id:number
};
	/** select columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_select_column"]:restaurant_item_option_map_select_column;
	/** input type for updating data in table "restaurant_item_option_map" */
["restaurant_item_option_map_set_input"]: {
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
};
	/** aggregate stddev on columns */
["restaurant_item_option_map_stddev_fields"]: AliasType<{
	id?:true,
	item_id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_stddev_order_by"]: {
	id?:ValueTypes["order_by"],
	item_id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["restaurant_item_option_map_stddev_pop_fields"]: AliasType<{
	id?:true,
	item_id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_stddev_pop_order_by"]: {
	id?:ValueTypes["order_by"],
	item_id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["restaurant_item_option_map_stddev_samp_fields"]: AliasType<{
	id?:true,
	item_id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_stddev_samp_order_by"]: {
	id?:ValueTypes["order_by"],
	item_id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "restaurant_item_option_map" */
["restaurant_item_option_map_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_item_option_map_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_item_option_map_stream_cursor_value_input"]: {
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
};
	/** aggregate sum on columns */
["restaurant_item_option_map_sum_fields"]: AliasType<{
	id?:true,
	item_id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_sum_order_by"]: {
	id?:ValueTypes["order_by"],
	item_id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** update columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_update_column"]:restaurant_item_option_map_update_column;
	["restaurant_item_option_map_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_item_option_map_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_item_option_map_set_input"],
	where:ValueTypes["restaurant_item_option_map_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_item_option_map_var_pop_fields"]: AliasType<{
	id?:true,
	item_id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_var_pop_order_by"]: {
	id?:ValueTypes["order_by"],
	item_id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["restaurant_item_option_map_var_samp_fields"]: AliasType<{
	id?:true,
	item_id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_var_samp_order_by"]: {
	id?:ValueTypes["order_by"],
	item_id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["restaurant_item_option_map_variance_fields"]: AliasType<{
	id?:true,
	item_id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_variance_order_by"]: {
	id?:ValueTypes["order_by"],
	item_id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** Ordering options when selecting data from "restaurant_item". */
["restaurant_item_order_by"]: {
	archived?:ValueTypes["order_by"],
	available?:ValueTypes["order_by"],
	category?:ValueTypes["restaurant_category_order_by"],
	category_id?:ValueTypes["order_by"],
	cost?:ValueTypes["order_by"],
	description?:ValueTypes["translation_order_by"],
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	item_type?:ValueTypes["order_by"],
	name?:ValueTypes["translation_order_by"],
	name_id?:ValueTypes["order_by"],
	options_aggregate?:ValueTypes["restaurant_item_option_map_aggregate_order_by"],
	position?:ValueTypes["order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	restaurant_id?:ValueTypes["order_by"],
	special_period_end?:ValueTypes["order_by"],
	special_period_start?:ValueTypes["order_by"]
};
	/** primary key columns input for table: restaurant_item */
["restaurant_item_pk_columns_input"]: {
	id:number
};
	/** select columns of table "restaurant_item" */
["restaurant_item_select_column"]:restaurant_item_select_column;
	/** input type for updating data in table "restaurant_item" */
["restaurant_item_set_input"]: {
	archived?:boolean,
	available?:boolean,
	category_id?:number,
	cost?:ValueTypes["money"],
	description_id?:number,
	id?:number,
	/** daily, special */
	item_type?:string,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	special_period_end?:ValueTypes["timestamptz"],
	special_period_start?:ValueTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["restaurant_item_stddev_fields"]: AliasType<{
	category_id?:true,
	cost?:true,
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "restaurant_item" */
["restaurant_item_stddev_order_by"]: {
	category_id?:ValueTypes["order_by"],
	cost?:ValueTypes["order_by"],
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["restaurant_item_stddev_pop_fields"]: AliasType<{
	category_id?:true,
	cost?:true,
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "restaurant_item" */
["restaurant_item_stddev_pop_order_by"]: {
	category_id?:ValueTypes["order_by"],
	cost?:ValueTypes["order_by"],
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["restaurant_item_stddev_samp_fields"]: AliasType<{
	category_id?:true,
	cost?:true,
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "restaurant_item" */
["restaurant_item_stddev_samp_order_by"]: {
	category_id?:ValueTypes["order_by"],
	cost?:ValueTypes["order_by"],
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "restaurant_item" */
["restaurant_item_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_item_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_item_stream_cursor_value_input"]: {
	archived?:boolean,
	available?:boolean,
	category_id?:number,
	cost?:ValueTypes["money"],
	description_id?:number,
	id?:number,
	/** daily, special */
	item_type?:string,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	special_period_end?:ValueTypes["timestamptz"],
	special_period_start?:ValueTypes["timestamptz"]
};
	/** aggregate sum on columns */
["restaurant_item_sum_fields"]: AliasType<{
	category_id?:true,
	cost?:true,
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "restaurant_item" */
["restaurant_item_sum_order_by"]: {
	category_id?:ValueTypes["order_by"],
	cost?:ValueTypes["order_by"],
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** update columns of table "restaurant_item" */
["restaurant_item_update_column"]:restaurant_item_update_column;
	["restaurant_item_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_item_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_item_set_input"],
	where:ValueTypes["restaurant_item_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_item_var_pop_fields"]: AliasType<{
	category_id?:true,
	cost?:true,
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "restaurant_item" */
["restaurant_item_var_pop_order_by"]: {
	category_id?:ValueTypes["order_by"],
	cost?:ValueTypes["order_by"],
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["restaurant_item_var_samp_fields"]: AliasType<{
	category_id?:true,
	cost?:true,
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "restaurant_item" */
["restaurant_item_var_samp_order_by"]: {
	category_id?:ValueTypes["order_by"],
	cost?:ValueTypes["order_by"],
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["restaurant_item_variance_fields"]: AliasType<{
	category_id?:true,
	cost?:true,
	description_id?:true,
	id?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "restaurant_item" */
["restaurant_item_variance_order_by"]: {
	category_id?:ValueTypes["order_by"],
	cost?:ValueTypes["order_by"],
	description_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate max on columns */
["restaurant_max_fields"]: AliasType<{
	description_id?:true,
	firebase_id?:true,
	id?:true,
	image?:true,
	language_id?:true,
	location_text?:true,
	name?:true,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:true,
	payment_info_id?:true,
	schedule_id?:true,
	service_provider_type?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["restaurant_min_fields"]: AliasType<{
	description_id?:true,
	firebase_id?:true,
	id?:true,
	image?:true,
	language_id?:true,
	location_text?:true,
	name?:true,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:true,
	payment_info_id?:true,
	schedule_id?:true,
	service_provider_type?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "restaurant" */
["restaurant_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "restaurant" */
["restaurant_obj_rel_insert_input"]: {
	data:ValueTypes["restaurant_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_on_conflict"]
};
	/** on_conflict condition type for table "restaurant" */
["restaurant_on_conflict"]: {
	constraint:ValueTypes["restaurant_constraint"],
	update_columns:ValueTypes["restaurant_update_column"][],
	where?:ValueTypes["restaurant_bool_exp"]
};
	/** columns and relationships of "restaurant_operator" */
["restaurant_operator"]: AliasType<{
	app_version?:true,
	current_gps?:true,
	id?:true,
	/** A computed field, executes function "restaurant_operator_notification_token" */
	notification_token?:true,
	owner?:true,
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	restaurant_id?:true,
	/** awaiting_approval,authorized,banned */
	status?:true,
	/** An object relationship */
	user?:ValueTypes["user"],
	user_id?:true,
		__typename?: true
}>;
	/** aggregated selection of "restaurant_operator" */
["restaurant_operator_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_operator_aggregate_fields"],
	nodes?:ValueTypes["restaurant_operator"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant_operator" */
["restaurant_operator_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_operator_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_operator_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_operator_max_fields"],
	min?:ValueTypes["restaurant_operator_min_fields"],
	stddev?:ValueTypes["restaurant_operator_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_operator_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_operator_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_operator_sum_fields"],
	var_pop?:ValueTypes["restaurant_operator_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_operator_var_samp_fields"],
	variance?:ValueTypes["restaurant_operator_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "restaurant_operator" */
["restaurant_operator_aggregate_order_by"]: {
	avg?:ValueTypes["restaurant_operator_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["restaurant_operator_max_order_by"],
	min?:ValueTypes["restaurant_operator_min_order_by"],
	stddev?:ValueTypes["restaurant_operator_stddev_order_by"],
	stddev_pop?:ValueTypes["restaurant_operator_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["restaurant_operator_stddev_samp_order_by"],
	sum?:ValueTypes["restaurant_operator_sum_order_by"],
	var_pop?:ValueTypes["restaurant_operator_var_pop_order_by"],
	var_samp?:ValueTypes["restaurant_operator_var_samp_order_by"],
	variance?:ValueTypes["restaurant_operator_variance_order_by"]
};
	/** input type for inserting array relation for remote table "restaurant_operator" */
["restaurant_operator_arr_rel_insert_input"]: {
	data:ValueTypes["restaurant_operator_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_operator_on_conflict"]
};
	/** aggregate avg on columns */
["restaurant_operator_avg_fields"]: AliasType<{
	id?:true,
	restaurant_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "restaurant_operator" */
["restaurant_operator_avg_order_by"]: {
	id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "restaurant_operator". All fields are combined with a logical 'AND'. */
["restaurant_operator_bool_exp"]: {
	_and?:ValueTypes["restaurant_operator_bool_exp"][],
	_not?:ValueTypes["restaurant_operator_bool_exp"],
	_or?:ValueTypes["restaurant_operator_bool_exp"][],
	app_version?:ValueTypes["String_comparison_exp"],
	current_gps?:ValueTypes["geography_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	notification_token?:ValueTypes["String_comparison_exp"],
	owner?:ValueTypes["Boolean_comparison_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	restaurant_id?:ValueTypes["Int_comparison_exp"],
	status?:ValueTypes["String_comparison_exp"],
	user?:ValueTypes["user_bool_exp"],
	user_id?:ValueTypes["Int_comparison_exp"]
};
	/** unique or primary key constraints on table "restaurant_operator" */
["restaurant_operator_constraint"]:restaurant_operator_constraint;
	/** input type for incrementing numeric columns in table "restaurant_operator" */
["restaurant_operator_inc_input"]: {
	id?:number,
	restaurant_id?:number,
	user_id?:number
};
	/** input type for inserting data into table "restaurant_operator" */
["restaurant_operator_insert_input"]: {
	app_version?:string,
	current_gps?:ValueTypes["geography"],
	id?:number,
	owner?:boolean,
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	restaurant_id?:number,
	/** awaiting_approval,authorized,banned */
	status?:string,
	user?:ValueTypes["user_obj_rel_insert_input"],
	user_id?:number
};
	/** aggregate max on columns */
["restaurant_operator_max_fields"]: AliasType<{
	app_version?:true,
	id?:true,
	restaurant_id?:true,
	/** awaiting_approval,authorized,banned */
	status?:true,
	user_id?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "restaurant_operator" */
["restaurant_operator_max_order_by"]: {
	app_version?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	/** awaiting_approval,authorized,banned */
	status?:ValueTypes["order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["restaurant_operator_min_fields"]: AliasType<{
	app_version?:true,
	id?:true,
	restaurant_id?:true,
	/** awaiting_approval,authorized,banned */
	status?:true,
	user_id?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "restaurant_operator" */
["restaurant_operator_min_order_by"]: {
	app_version?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	/** awaiting_approval,authorized,banned */
	status?:ValueTypes["order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "restaurant_operator" */
["restaurant_operator_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant_operator"],
		__typename?: true
}>;
	/** on_conflict condition type for table "restaurant_operator" */
["restaurant_operator_on_conflict"]: {
	constraint:ValueTypes["restaurant_operator_constraint"],
	update_columns:ValueTypes["restaurant_operator_update_column"][],
	where?:ValueTypes["restaurant_operator_bool_exp"]
};
	/** Ordering options when selecting data from "restaurant_operator". */
["restaurant_operator_order_by"]: {
	app_version?:ValueTypes["order_by"],
	current_gps?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	notification_token?:ValueTypes["order_by"],
	owner?:ValueTypes["order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	restaurant_id?:ValueTypes["order_by"],
	status?:ValueTypes["order_by"],
	user?:ValueTypes["user_order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: restaurant_operator */
["restaurant_operator_pk_columns_input"]: {
	id:number
};
	/** select columns of table "restaurant_operator" */
["restaurant_operator_select_column"]:restaurant_operator_select_column;
	/** input type for updating data in table "restaurant_operator" */
["restaurant_operator_set_input"]: {
	app_version?:string,
	current_gps?:ValueTypes["geography"],
	id?:number,
	owner?:boolean,
	restaurant_id?:number,
	/** awaiting_approval,authorized,banned */
	status?:string,
	user_id?:number
};
	/** aggregate stddev on columns */
["restaurant_operator_stddev_fields"]: AliasType<{
	id?:true,
	restaurant_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "restaurant_operator" */
["restaurant_operator_stddev_order_by"]: {
	id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["restaurant_operator_stddev_pop_fields"]: AliasType<{
	id?:true,
	restaurant_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "restaurant_operator" */
["restaurant_operator_stddev_pop_order_by"]: {
	id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["restaurant_operator_stddev_samp_fields"]: AliasType<{
	id?:true,
	restaurant_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "restaurant_operator" */
["restaurant_operator_stddev_samp_order_by"]: {
	id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "restaurant_operator" */
["restaurant_operator_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_operator_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_operator_stream_cursor_value_input"]: {
	app_version?:string,
	current_gps?:ValueTypes["geography"],
	id?:number,
	owner?:boolean,
	restaurant_id?:number,
	/** awaiting_approval,authorized,banned */
	status?:string,
	user_id?:number
};
	/** aggregate sum on columns */
["restaurant_operator_sum_fields"]: AliasType<{
	id?:true,
	restaurant_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "restaurant_operator" */
["restaurant_operator_sum_order_by"]: {
	id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** update columns of table "restaurant_operator" */
["restaurant_operator_update_column"]:restaurant_operator_update_column;
	["restaurant_operator_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_operator_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_operator_set_input"],
	where:ValueTypes["restaurant_operator_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_operator_var_pop_fields"]: AliasType<{
	id?:true,
	restaurant_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "restaurant_operator" */
["restaurant_operator_var_pop_order_by"]: {
	id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["restaurant_operator_var_samp_fields"]: AliasType<{
	id?:true,
	restaurant_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "restaurant_operator" */
["restaurant_operator_var_samp_order_by"]: {
	id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["restaurant_operator_variance_fields"]: AliasType<{
	id?:true,
	restaurant_id?:true,
	user_id?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "restaurant_operator" */
["restaurant_operator_variance_order_by"]: {
	id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	user_id?:ValueTypes["order_by"]
};
	/** columns and relationships of "restaurant_option" */
["restaurant_option"]: AliasType<{
choices?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_choice_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_choice_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_choice_map_bool_exp"]},ValueTypes["restaurant_option_choice_map"]],
choices_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_choice_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_choice_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_choice_map_bool_exp"]},ValueTypes["restaurant_option_choice_map_aggregate"]],
	cost_per_extra?:true,
	free_choice?:true,
	id?:true,
items?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_option_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_option_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_option_map_bool_exp"]},ValueTypes["restaurant_item_option_map"]],
items_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_option_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_option_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_option_map_bool_exp"]},ValueTypes["restaurant_item_option_map_aggregate"]],
	maximum_choice?:true,
	minimum_choice?:true,
	/** An object relationship */
	name?:ValueTypes["translation"],
	name_id?:true,
	option_type?:true,
	position?:true,
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	restaurant_id?:true,
		__typename?: true
}>;
	/** aggregated selection of "restaurant_option" */
["restaurant_option_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_option_aggregate_fields"],
	nodes?:ValueTypes["restaurant_option"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant_option" */
["restaurant_option_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_option_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_option_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_option_max_fields"],
	min?:ValueTypes["restaurant_option_min_fields"],
	stddev?:ValueTypes["restaurant_option_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_option_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_option_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_option_sum_fields"],
	var_pop?:ValueTypes["restaurant_option_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_option_var_samp_fields"],
	variance?:ValueTypes["restaurant_option_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "restaurant_option" */
["restaurant_option_aggregate_order_by"]: {
	avg?:ValueTypes["restaurant_option_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["restaurant_option_max_order_by"],
	min?:ValueTypes["restaurant_option_min_order_by"],
	stddev?:ValueTypes["restaurant_option_stddev_order_by"],
	stddev_pop?:ValueTypes["restaurant_option_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["restaurant_option_stddev_samp_order_by"],
	sum?:ValueTypes["restaurant_option_sum_order_by"],
	var_pop?:ValueTypes["restaurant_option_var_pop_order_by"],
	var_samp?:ValueTypes["restaurant_option_var_samp_order_by"],
	variance?:ValueTypes["restaurant_option_variance_order_by"]
};
	/** input type for inserting array relation for remote table "restaurant_option" */
["restaurant_option_arr_rel_insert_input"]: {
	data:ValueTypes["restaurant_option_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_option_on_conflict"]
};
	/** aggregate avg on columns */
["restaurant_option_avg_fields"]: AliasType<{
	cost_per_extra?:true,
	free_choice?:true,
	id?:true,
	maximum_choice?:true,
	minimum_choice?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "restaurant_option" */
["restaurant_option_avg_order_by"]: {
	cost_per_extra?:ValueTypes["order_by"],
	free_choice?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	maximum_choice?:ValueTypes["order_by"],
	minimum_choice?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "restaurant_option". All fields are combined with a logical 'AND'. */
["restaurant_option_bool_exp"]: {
	_and?:ValueTypes["restaurant_option_bool_exp"][],
	_not?:ValueTypes["restaurant_option_bool_exp"],
	_or?:ValueTypes["restaurant_option_bool_exp"][],
	choices?:ValueTypes["restaurant_option_choice_map_bool_exp"],
	cost_per_extra?:ValueTypes["money_comparison_exp"],
	free_choice?:ValueTypes["Int_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	items?:ValueTypes["restaurant_item_option_map_bool_exp"],
	maximum_choice?:ValueTypes["Int_comparison_exp"],
	minimum_choice?:ValueTypes["Int_comparison_exp"],
	name?:ValueTypes["translation_bool_exp"],
	name_id?:ValueTypes["Int_comparison_exp"],
	option_type?:ValueTypes["String_comparison_exp"],
	position?:ValueTypes["Int_comparison_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	restaurant_id?:ValueTypes["Int_comparison_exp"]
};
	/** columns and relationships of "restaurant_option_choice_map" */
["restaurant_option_choice_map"]: AliasType<{
	choice_id?:true,
	id?:true,
option_choices?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_choice_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_choice_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_choice_bool_exp"]},ValueTypes["restaurant_choice"]],
option_choices_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_choice_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_choice_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_choice_bool_exp"]},ValueTypes["restaurant_choice_aggregate"]],
	option_id?:true,
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	restaurant_id?:true,
		__typename?: true
}>;
	/** aggregated selection of "restaurant_option_choice_map" */
["restaurant_option_choice_map_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_option_choice_map_aggregate_fields"],
	nodes?:ValueTypes["restaurant_option_choice_map"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant_option_choice_map" */
["restaurant_option_choice_map_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_option_choice_map_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_option_choice_map_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_option_choice_map_max_fields"],
	min?:ValueTypes["restaurant_option_choice_map_min_fields"],
	stddev?:ValueTypes["restaurant_option_choice_map_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_option_choice_map_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_option_choice_map_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_option_choice_map_sum_fields"],
	var_pop?:ValueTypes["restaurant_option_choice_map_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_option_choice_map_var_samp_fields"],
	variance?:ValueTypes["restaurant_option_choice_map_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_aggregate_order_by"]: {
	avg?:ValueTypes["restaurant_option_choice_map_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["restaurant_option_choice_map_max_order_by"],
	min?:ValueTypes["restaurant_option_choice_map_min_order_by"],
	stddev?:ValueTypes["restaurant_option_choice_map_stddev_order_by"],
	stddev_pop?:ValueTypes["restaurant_option_choice_map_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["restaurant_option_choice_map_stddev_samp_order_by"],
	sum?:ValueTypes["restaurant_option_choice_map_sum_order_by"],
	var_pop?:ValueTypes["restaurant_option_choice_map_var_pop_order_by"],
	var_samp?:ValueTypes["restaurant_option_choice_map_var_samp_order_by"],
	variance?:ValueTypes["restaurant_option_choice_map_variance_order_by"]
};
	/** input type for inserting array relation for remote table "restaurant_option_choice_map" */
["restaurant_option_choice_map_arr_rel_insert_input"]: {
	data:ValueTypes["restaurant_option_choice_map_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_option_choice_map_on_conflict"]
};
	/** aggregate avg on columns */
["restaurant_option_choice_map_avg_fields"]: AliasType<{
	choice_id?:true,
	id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_avg_order_by"]: {
	choice_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "restaurant_option_choice_map".
All fields are combined with a logical 'AND'. */
["restaurant_option_choice_map_bool_exp"]: {
	_and?:ValueTypes["restaurant_option_choice_map_bool_exp"][],
	_not?:ValueTypes["restaurant_option_choice_map_bool_exp"],
	_or?:ValueTypes["restaurant_option_choice_map_bool_exp"][],
	choice_id?:ValueTypes["Int_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	option_choices?:ValueTypes["restaurant_choice_bool_exp"],
	option_id?:ValueTypes["Int_comparison_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	restaurant_id?:ValueTypes["Int_comparison_exp"]
};
	/** unique or primary key constraints on table "restaurant_option_choice_map" */
["restaurant_option_choice_map_constraint"]:restaurant_option_choice_map_constraint;
	/** input type for incrementing numeric columns in table "restaurant_option_choice_map" */
["restaurant_option_choice_map_inc_input"]: {
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
};
	/** input type for inserting data into table "restaurant_option_choice_map" */
["restaurant_option_choice_map_insert_input"]: {
	choice_id?:number,
	id?:number,
	option_choices?:ValueTypes["restaurant_choice_arr_rel_insert_input"],
	option_id?:number,
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	restaurant_id?:number
};
	/** aggregate max on columns */
["restaurant_option_choice_map_max_fields"]: AliasType<{
	choice_id?:true,
	id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_max_order_by"]: {
	choice_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["restaurant_option_choice_map_min_fields"]: AliasType<{
	choice_id?:true,
	id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_min_order_by"]: {
	choice_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "restaurant_option_choice_map" */
["restaurant_option_choice_map_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant_option_choice_map"],
		__typename?: true
}>;
	/** on_conflict condition type for table "restaurant_option_choice_map" */
["restaurant_option_choice_map_on_conflict"]: {
	constraint:ValueTypes["restaurant_option_choice_map_constraint"],
	update_columns:ValueTypes["restaurant_option_choice_map_update_column"][],
	where?:ValueTypes["restaurant_option_choice_map_bool_exp"]
};
	/** Ordering options when selecting data from "restaurant_option_choice_map". */
["restaurant_option_choice_map_order_by"]: {
	choice_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	option_choices_aggregate?:ValueTypes["restaurant_choice_aggregate_order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: restaurant_option_choice_map */
["restaurant_option_choice_map_pk_columns_input"]: {
	id:number
};
	/** select columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_select_column"]:restaurant_option_choice_map_select_column;
	/** input type for updating data in table "restaurant_option_choice_map" */
["restaurant_option_choice_map_set_input"]: {
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
};
	/** aggregate stddev on columns */
["restaurant_option_choice_map_stddev_fields"]: AliasType<{
	choice_id?:true,
	id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_stddev_order_by"]: {
	choice_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["restaurant_option_choice_map_stddev_pop_fields"]: AliasType<{
	choice_id?:true,
	id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_stddev_pop_order_by"]: {
	choice_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["restaurant_option_choice_map_stddev_samp_fields"]: AliasType<{
	choice_id?:true,
	id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_stddev_samp_order_by"]: {
	choice_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "restaurant_option_choice_map" */
["restaurant_option_choice_map_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_option_choice_map_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_option_choice_map_stream_cursor_value_input"]: {
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
};
	/** aggregate sum on columns */
["restaurant_option_choice_map_sum_fields"]: AliasType<{
	choice_id?:true,
	id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_sum_order_by"]: {
	choice_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** update columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_update_column"]:restaurant_option_choice_map_update_column;
	["restaurant_option_choice_map_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_option_choice_map_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_option_choice_map_set_input"],
	where:ValueTypes["restaurant_option_choice_map_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_option_choice_map_var_pop_fields"]: AliasType<{
	choice_id?:true,
	id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_var_pop_order_by"]: {
	choice_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["restaurant_option_choice_map_var_samp_fields"]: AliasType<{
	choice_id?:true,
	id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_var_samp_order_by"]: {
	choice_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["restaurant_option_choice_map_variance_fields"]: AliasType<{
	choice_id?:true,
	id?:true,
	option_id?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_variance_order_by"]: {
	choice_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	option_id?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** unique or primary key constraints on table "restaurant_option" */
["restaurant_option_constraint"]:restaurant_option_constraint;
	/** input type for incrementing numeric columns in table "restaurant_option" */
["restaurant_option_inc_input"]: {
	cost_per_extra?:ValueTypes["money"],
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
};
	/** input type for inserting data into table "restaurant_option" */
["restaurant_option_insert_input"]: {
	choices?:ValueTypes["restaurant_option_choice_map_arr_rel_insert_input"],
	cost_per_extra?:ValueTypes["money"],
	free_choice?:number,
	id?:number,
	items?:ValueTypes["restaurant_item_option_map_arr_rel_insert_input"],
	maximum_choice?:number,
	minimum_choice?:number,
	name?:ValueTypes["translation_obj_rel_insert_input"],
	name_id?:number,
	option_type?:string,
	position?:number,
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	restaurant_id?:number
};
	/** aggregate max on columns */
["restaurant_option_max_fields"]: AliasType<{
	cost_per_extra?:true,
	free_choice?:true,
	id?:true,
	maximum_choice?:true,
	minimum_choice?:true,
	name_id?:true,
	option_type?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "restaurant_option" */
["restaurant_option_max_order_by"]: {
	cost_per_extra?:ValueTypes["order_by"],
	free_choice?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	maximum_choice?:ValueTypes["order_by"],
	minimum_choice?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	option_type?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["restaurant_option_min_fields"]: AliasType<{
	cost_per_extra?:true,
	free_choice?:true,
	id?:true,
	maximum_choice?:true,
	minimum_choice?:true,
	name_id?:true,
	option_type?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "restaurant_option" */
["restaurant_option_min_order_by"]: {
	cost_per_extra?:ValueTypes["order_by"],
	free_choice?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	maximum_choice?:ValueTypes["order_by"],
	minimum_choice?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	option_type?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "restaurant_option" */
["restaurant_option_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant_option"],
		__typename?: true
}>;
	/** on_conflict condition type for table "restaurant_option" */
["restaurant_option_on_conflict"]: {
	constraint:ValueTypes["restaurant_option_constraint"],
	update_columns:ValueTypes["restaurant_option_update_column"][],
	where?:ValueTypes["restaurant_option_bool_exp"]
};
	/** Ordering options when selecting data from "restaurant_option". */
["restaurant_option_order_by"]: {
	choices_aggregate?:ValueTypes["restaurant_option_choice_map_aggregate_order_by"],
	cost_per_extra?:ValueTypes["order_by"],
	free_choice?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	items_aggregate?:ValueTypes["restaurant_item_option_map_aggregate_order_by"],
	maximum_choice?:ValueTypes["order_by"],
	minimum_choice?:ValueTypes["order_by"],
	name?:ValueTypes["translation_order_by"],
	name_id?:ValueTypes["order_by"],
	option_type?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: restaurant_option */
["restaurant_option_pk_columns_input"]: {
	id:number
};
	/** select columns of table "restaurant_option" */
["restaurant_option_select_column"]:restaurant_option_select_column;
	/** input type for updating data in table "restaurant_option" */
["restaurant_option_set_input"]: {
	cost_per_extra?:ValueTypes["money"],
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	option_type?:string,
	position?:number,
	restaurant_id?:number
};
	/** aggregate stddev on columns */
["restaurant_option_stddev_fields"]: AliasType<{
	cost_per_extra?:true,
	free_choice?:true,
	id?:true,
	maximum_choice?:true,
	minimum_choice?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "restaurant_option" */
["restaurant_option_stddev_order_by"]: {
	cost_per_extra?:ValueTypes["order_by"],
	free_choice?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	maximum_choice?:ValueTypes["order_by"],
	minimum_choice?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["restaurant_option_stddev_pop_fields"]: AliasType<{
	cost_per_extra?:true,
	free_choice?:true,
	id?:true,
	maximum_choice?:true,
	minimum_choice?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "restaurant_option" */
["restaurant_option_stddev_pop_order_by"]: {
	cost_per_extra?:ValueTypes["order_by"],
	free_choice?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	maximum_choice?:ValueTypes["order_by"],
	minimum_choice?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["restaurant_option_stddev_samp_fields"]: AliasType<{
	cost_per_extra?:true,
	free_choice?:true,
	id?:true,
	maximum_choice?:true,
	minimum_choice?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "restaurant_option" */
["restaurant_option_stddev_samp_order_by"]: {
	cost_per_extra?:ValueTypes["order_by"],
	free_choice?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	maximum_choice?:ValueTypes["order_by"],
	minimum_choice?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "restaurant_option" */
["restaurant_option_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_option_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_option_stream_cursor_value_input"]: {
	cost_per_extra?:ValueTypes["money"],
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	option_type?:string,
	position?:number,
	restaurant_id?:number
};
	/** aggregate sum on columns */
["restaurant_option_sum_fields"]: AliasType<{
	cost_per_extra?:true,
	free_choice?:true,
	id?:true,
	maximum_choice?:true,
	minimum_choice?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "restaurant_option" */
["restaurant_option_sum_order_by"]: {
	cost_per_extra?:ValueTypes["order_by"],
	free_choice?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	maximum_choice?:ValueTypes["order_by"],
	minimum_choice?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** update columns of table "restaurant_option" */
["restaurant_option_update_column"]:restaurant_option_update_column;
	["restaurant_option_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_option_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_option_set_input"],
	where:ValueTypes["restaurant_option_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_option_var_pop_fields"]: AliasType<{
	cost_per_extra?:true,
	free_choice?:true,
	id?:true,
	maximum_choice?:true,
	minimum_choice?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "restaurant_option" */
["restaurant_option_var_pop_order_by"]: {
	cost_per_extra?:ValueTypes["order_by"],
	free_choice?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	maximum_choice?:ValueTypes["order_by"],
	minimum_choice?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["restaurant_option_var_samp_fields"]: AliasType<{
	cost_per_extra?:true,
	free_choice?:true,
	id?:true,
	maximum_choice?:true,
	minimum_choice?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "restaurant_option" */
["restaurant_option_var_samp_order_by"]: {
	cost_per_extra?:ValueTypes["order_by"],
	free_choice?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	maximum_choice?:ValueTypes["order_by"],
	minimum_choice?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["restaurant_option_variance_fields"]: AliasType<{
	cost_per_extra?:true,
	free_choice?:true,
	id?:true,
	maximum_choice?:true,
	minimum_choice?:true,
	name_id?:true,
	position?:true,
	restaurant_id?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "restaurant_option" */
["restaurant_option_variance_order_by"]: {
	cost_per_extra?:ValueTypes["order_by"],
	free_choice?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	maximum_choice?:ValueTypes["order_by"],
	minimum_choice?:ValueTypes["order_by"],
	name_id?:ValueTypes["order_by"],
	position?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"]
};
	/** columns and relationships of "restaurant_order" */
["restaurant_order"]: AliasType<{
	actual_food_ready_time?:true,
	cancellation_time?:true,
	/** An object relationship */
	chat?:ValueTypes["chat"],
	chat_id?:true,
	/** An object relationship */
	customer?:ValueTypes["customer"],
	customer_app_type?:true,
	customer_id?:true,
	/** An object relationship */
	delivery?:ValueTypes["delivery_order"],
	delivery_cost?:true,
	delivery_id?:true,
	estimated_food_ready_time?:true,
	firebase_id?:true,
	id?:true,
items?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_item_bool_exp"]},ValueTypes["restaurant_order_item"]],
items_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_item_bool_exp"]},ValueTypes["restaurant_order_item_aggregate"]],
	/** A computed field, executes function "itemscost" */
	items_cost?:true,
	notes?:true,
	order_time?:true,
	order_type?:true,
	payment_type?:true,
	refund_amount?:true,
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	restaurant_id?:true,
	/** An object relationship */
	review?:ValueTypes["review"],
	review_id?:true,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:true,
	stripe_payment_id?:true,
	tax?:true,
	to_location_address?:true,
	to_location_gps?:true,
	/** A computed field, executes function "totalcost" */
	total_cost?:true,
		__typename?: true
}>;
	/** aggregated selection of "restaurant_order" */
["restaurant_order_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_order_aggregate_fields"],
	nodes?:ValueTypes["restaurant_order"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant_order" */
["restaurant_order_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_order_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_order_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_order_max_fields"],
	min?:ValueTypes["restaurant_order_min_fields"],
	stddev?:ValueTypes["restaurant_order_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_order_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_order_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_order_sum_fields"],
	var_pop?:ValueTypes["restaurant_order_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_order_var_samp_fields"],
	variance?:ValueTypes["restaurant_order_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "restaurant_order" */
["restaurant_order_aggregate_order_by"]: {
	avg?:ValueTypes["restaurant_order_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["restaurant_order_max_order_by"],
	min?:ValueTypes["restaurant_order_min_order_by"],
	stddev?:ValueTypes["restaurant_order_stddev_order_by"],
	stddev_pop?:ValueTypes["restaurant_order_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["restaurant_order_stddev_samp_order_by"],
	sum?:ValueTypes["restaurant_order_sum_order_by"],
	var_pop?:ValueTypes["restaurant_order_var_pop_order_by"],
	var_samp?:ValueTypes["restaurant_order_var_samp_order_by"],
	variance?:ValueTypes["restaurant_order_variance_order_by"]
};
	/** input type for inserting array relation for remote table "restaurant_order" */
["restaurant_order_arr_rel_insert_input"]: {
	data:ValueTypes["restaurant_order_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_order_on_conflict"]
};
	/** aggregate avg on columns */
["restaurant_order_avg_fields"]: AliasType<{
	chat_id?:true,
	customer_id?:true,
	delivery_cost?:true,
	delivery_id?:true,
	id?:true,
	refund_amount?:true,
	restaurant_id?:true,
	review_id?:true,
	stripe_payment_id?:true,
	tax?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "restaurant_order" */
["restaurant_order_avg_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	delivery_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	refund_amount?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	tax?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "restaurant_order". All fields are combined with a logical 'AND'. */
["restaurant_order_bool_exp"]: {
	_and?:ValueTypes["restaurant_order_bool_exp"][],
	_not?:ValueTypes["restaurant_order_bool_exp"],
	_or?:ValueTypes["restaurant_order_bool_exp"][],
	actual_food_ready_time?:ValueTypes["timestamptz_comparison_exp"],
	cancellation_time?:ValueTypes["timestamptz_comparison_exp"],
	chat?:ValueTypes["chat_bool_exp"],
	chat_id?:ValueTypes["Int_comparison_exp"],
	customer?:ValueTypes["customer_bool_exp"],
	customer_app_type?:ValueTypes["String_comparison_exp"],
	customer_id?:ValueTypes["Int_comparison_exp"],
	delivery?:ValueTypes["delivery_order_bool_exp"],
	delivery_cost?:ValueTypes["money_comparison_exp"],
	delivery_id?:ValueTypes["Int_comparison_exp"],
	estimated_food_ready_time?:ValueTypes["timestamptz_comparison_exp"],
	firebase_id?:ValueTypes["String_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	items?:ValueTypes["restaurant_order_item_bool_exp"],
	items_cost?:ValueTypes["money_comparison_exp"],
	notes?:ValueTypes["String_comparison_exp"],
	order_time?:ValueTypes["timestamptz_comparison_exp"],
	order_type?:ValueTypes["String_comparison_exp"],
	payment_type?:ValueTypes["String_comparison_exp"],
	refund_amount?:ValueTypes["Int_comparison_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	restaurant_id?:ValueTypes["Int_comparison_exp"],
	review?:ValueTypes["review_bool_exp"],
	review_id?:ValueTypes["Int_comparison_exp"],
	status?:ValueTypes["String_comparison_exp"],
	stripe_payment_id?:ValueTypes["Int_comparison_exp"],
	tax?:ValueTypes["float8_comparison_exp"],
	to_location_address?:ValueTypes["String_comparison_exp"],
	to_location_gps?:ValueTypes["geography_comparison_exp"],
	total_cost?:ValueTypes["money_comparison_exp"]
};
	/** Ordering options when selecting data from "restaurant". */
["restaurant_order_by"]: {
	approved?:ValueTypes["order_by"],
	categories_aggregate?:ValueTypes["restaurant_category_aggregate_order_by"],
	description?:ValueTypes["translation_order_by"],
	description_id?:ValueTypes["order_by"],
	firebase_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	image?:ValueTypes["order_by"],
	language_id?:ValueTypes["order_by"],
	location_gps?:ValueTypes["order_by"],
	location_text?:ValueTypes["order_by"],
	name?:ValueTypes["order_by"],
	open_status?:ValueTypes["order_by"],
	orders_aggregate?:ValueTypes["restaurant_order_aggregate_order_by"],
	payment_info?:ValueTypes["service_provider_payment_info_order_by"],
	payment_info_id?:ValueTypes["order_by"],
	restaurant_operators_aggregate?:ValueTypes["restaurant_operator_aggregate_order_by"],
	schedule_id?:ValueTypes["order_by"],
	self_delivery?:ValueTypes["order_by"],
	service_provider_type?:ValueTypes["order_by"],
	specials_aggregate?:ValueTypes["restaurant_item_aggregate_order_by"]
};
	/** unique or primary key constraints on table "restaurant_order" */
["restaurant_order_constraint"]:restaurant_order_constraint;
	/** input type for incrementing numeric columns in table "restaurant_order" */
["restaurant_order_inc_input"]: {
	chat_id?:number,
	customer_id?:number,
	delivery_cost?:ValueTypes["money"],
	delivery_id?:number,
	id?:number,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	stripe_payment_id?:number,
	tax?:ValueTypes["float8"]
};
	/** input type for inserting data into table "restaurant_order" */
["restaurant_order_insert_input"]: {
	actual_food_ready_time?:ValueTypes["timestamptz"],
	cancellation_time?:ValueTypes["timestamptz"],
	chat?:ValueTypes["chat_obj_rel_insert_input"],
	chat_id?:number,
	customer?:ValueTypes["customer_obj_rel_insert_input"],
	customer_app_type?:string,
	customer_id?:number,
	delivery?:ValueTypes["delivery_order_obj_rel_insert_input"],
	delivery_cost?:ValueTypes["money"],
	delivery_id?:number,
	estimated_food_ready_time?:ValueTypes["timestamptz"],
	firebase_id?:string,
	id?:number,
	items?:ValueTypes["restaurant_order_item_arr_rel_insert_input"],
	notes?:string,
	order_time?:ValueTypes["timestamptz"],
	order_type?:string,
	payment_type?:string,
	refund_amount?:number,
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	restaurant_id?:number,
	review?:ValueTypes["review_obj_rel_insert_input"],
	review_id?:number,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
	stripe_payment_id?:number,
	tax?:ValueTypes["float8"],
	to_location_address?:string,
	to_location_gps?:ValueTypes["geography"]
};
	/** in_json:[name(en,es), selected_options] */
["restaurant_order_item"]: AliasType<{
	cost_per_one?:true,
	id?:true,
in_json?: [{	/** JSON select path */
	path?:string},true],
	notes?:true,
	/** An object relationship */
	order?:ValueTypes["restaurant_order"],
	quantity?:true,
	/** An object relationship */
	restaurant_item?:ValueTypes["restaurant_item"],
	restaurant_item_id?:true,
	restaurant_order_id?:true,
	review_id?:true,
	unavailable?:true,
		__typename?: true
}>;
	/** aggregated selection of "restaurant_order_item" */
["restaurant_order_item_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_order_item_aggregate_fields"],
	nodes?:ValueTypes["restaurant_order_item"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant_order_item" */
["restaurant_order_item_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_order_item_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_order_item_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_order_item_max_fields"],
	min?:ValueTypes["restaurant_order_item_min_fields"],
	stddev?:ValueTypes["restaurant_order_item_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_order_item_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_order_item_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_order_item_sum_fields"],
	var_pop?:ValueTypes["restaurant_order_item_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_order_item_var_samp_fields"],
	variance?:ValueTypes["restaurant_order_item_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "restaurant_order_item" */
["restaurant_order_item_aggregate_order_by"]: {
	avg?:ValueTypes["restaurant_order_item_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["restaurant_order_item_max_order_by"],
	min?:ValueTypes["restaurant_order_item_min_order_by"],
	stddev?:ValueTypes["restaurant_order_item_stddev_order_by"],
	stddev_pop?:ValueTypes["restaurant_order_item_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["restaurant_order_item_stddev_samp_order_by"],
	sum?:ValueTypes["restaurant_order_item_sum_order_by"],
	var_pop?:ValueTypes["restaurant_order_item_var_pop_order_by"],
	var_samp?:ValueTypes["restaurant_order_item_var_samp_order_by"],
	variance?:ValueTypes["restaurant_order_item_variance_order_by"]
};
	/** input type for inserting array relation for remote table "restaurant_order_item" */
["restaurant_order_item_arr_rel_insert_input"]: {
	data:ValueTypes["restaurant_order_item_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_order_item_on_conflict"]
};
	/** aggregate avg on columns */
["restaurant_order_item_avg_fields"]: AliasType<{
	cost_per_one?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
	restaurant_order_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "restaurant_order_item" */
["restaurant_order_item_avg_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"],
	restaurant_order_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "restaurant_order_item". All fields are combined with a logical 'AND'. */
["restaurant_order_item_bool_exp"]: {
	_and?:ValueTypes["restaurant_order_item_bool_exp"][],
	_not?:ValueTypes["restaurant_order_item_bool_exp"],
	_or?:ValueTypes["restaurant_order_item_bool_exp"][],
	cost_per_one?:ValueTypes["money_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	in_json?:ValueTypes["json_comparison_exp"],
	notes?:ValueTypes["String_comparison_exp"],
	order?:ValueTypes["restaurant_order_bool_exp"],
	quantity?:ValueTypes["Int_comparison_exp"],
	restaurant_item?:ValueTypes["restaurant_item_bool_exp"],
	restaurant_item_id?:ValueTypes["Int_comparison_exp"],
	restaurant_order_id?:ValueTypes["Int_comparison_exp"],
	review_id?:ValueTypes["Int_comparison_exp"],
	unavailable?:ValueTypes["Boolean_comparison_exp"]
};
	/** unique or primary key constraints on table "restaurant_order_item" */
["restaurant_order_item_constraint"]:restaurant_order_item_constraint;
	/** input type for incrementing numeric columns in table "restaurant_order_item" */
["restaurant_order_item_inc_input"]: {
	cost_per_one?:ValueTypes["money"],
	id?:number,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
};
	/** input type for inserting data into table "restaurant_order_item" */
["restaurant_order_item_insert_input"]: {
	cost_per_one?:ValueTypes["money"],
	id?:number,
	in_json?:ValueTypes["json"],
	notes?:string,
	order?:ValueTypes["restaurant_order_obj_rel_insert_input"],
	quantity?:number,
	restaurant_item?:ValueTypes["restaurant_item_obj_rel_insert_input"],
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number,
	unavailable?:boolean
};
	/** aggregate max on columns */
["restaurant_order_item_max_fields"]: AliasType<{
	cost_per_one?:true,
	id?:true,
	notes?:true,
	quantity?:true,
	restaurant_item_id?:true,
	restaurant_order_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "restaurant_order_item" */
["restaurant_order_item_max_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	notes?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"],
	restaurant_order_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["restaurant_order_item_min_fields"]: AliasType<{
	cost_per_one?:true,
	id?:true,
	notes?:true,
	quantity?:true,
	restaurant_item_id?:true,
	restaurant_order_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "restaurant_order_item" */
["restaurant_order_item_min_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	notes?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"],
	restaurant_order_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "restaurant_order_item" */
["restaurant_order_item_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant_order_item"],
		__typename?: true
}>;
	/** on_conflict condition type for table "restaurant_order_item" */
["restaurant_order_item_on_conflict"]: {
	constraint:ValueTypes["restaurant_order_item_constraint"],
	update_columns:ValueTypes["restaurant_order_item_update_column"][],
	where?:ValueTypes["restaurant_order_item_bool_exp"]
};
	/** Ordering options when selecting data from "restaurant_order_item". */
["restaurant_order_item_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	in_json?:ValueTypes["order_by"],
	notes?:ValueTypes["order_by"],
	order?:ValueTypes["restaurant_order_order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item?:ValueTypes["restaurant_item_order_by"],
	restaurant_item_id?:ValueTypes["order_by"],
	restaurant_order_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"],
	unavailable?:ValueTypes["order_by"]
};
	/** primary key columns input for table: restaurant_order_item */
["restaurant_order_item_pk_columns_input"]: {
	id:number
};
	/** select columns of table "restaurant_order_item" */
["restaurant_order_item_select_column"]:restaurant_order_item_select_column;
	/** input type for updating data in table "restaurant_order_item" */
["restaurant_order_item_set_input"]: {
	cost_per_one?:ValueTypes["money"],
	id?:number,
	in_json?:ValueTypes["json"],
	notes?:string,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number,
	unavailable?:boolean
};
	/** aggregate stddev on columns */
["restaurant_order_item_stddev_fields"]: AliasType<{
	cost_per_one?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
	restaurant_order_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "restaurant_order_item" */
["restaurant_order_item_stddev_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"],
	restaurant_order_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["restaurant_order_item_stddev_pop_fields"]: AliasType<{
	cost_per_one?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
	restaurant_order_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "restaurant_order_item" */
["restaurant_order_item_stddev_pop_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"],
	restaurant_order_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["restaurant_order_item_stddev_samp_fields"]: AliasType<{
	cost_per_one?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
	restaurant_order_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "restaurant_order_item" */
["restaurant_order_item_stddev_samp_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"],
	restaurant_order_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "restaurant_order_item" */
["restaurant_order_item_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_order_item_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_order_item_stream_cursor_value_input"]: {
	cost_per_one?:ValueTypes["money"],
	id?:number,
	in_json?:ValueTypes["json"],
	notes?:string,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number,
	unavailable?:boolean
};
	/** aggregate sum on columns */
["restaurant_order_item_sum_fields"]: AliasType<{
	cost_per_one?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
	restaurant_order_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "restaurant_order_item" */
["restaurant_order_item_sum_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"],
	restaurant_order_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"]
};
	/** update columns of table "restaurant_order_item" */
["restaurant_order_item_update_column"]:restaurant_order_item_update_column;
	["restaurant_order_item_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_order_item_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_order_item_set_input"],
	where:ValueTypes["restaurant_order_item_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_order_item_var_pop_fields"]: AliasType<{
	cost_per_one?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
	restaurant_order_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "restaurant_order_item" */
["restaurant_order_item_var_pop_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"],
	restaurant_order_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["restaurant_order_item_var_samp_fields"]: AliasType<{
	cost_per_one?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
	restaurant_order_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "restaurant_order_item" */
["restaurant_order_item_var_samp_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"],
	restaurant_order_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["restaurant_order_item_variance_fields"]: AliasType<{
	cost_per_one?:true,
	id?:true,
	quantity?:true,
	restaurant_item_id?:true,
	restaurant_order_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "restaurant_order_item" */
["restaurant_order_item_variance_order_by"]: {
	cost_per_one?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	quantity?:ValueTypes["order_by"],
	restaurant_item_id?:ValueTypes["order_by"],
	restaurant_order_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"]
};
	/** aggregate max on columns */
["restaurant_order_max_fields"]: AliasType<{
	actual_food_ready_time?:true,
	cancellation_time?:true,
	chat_id?:true,
	customer_app_type?:true,
	customer_id?:true,
	delivery_cost?:true,
	delivery_id?:true,
	estimated_food_ready_time?:true,
	firebase_id?:true,
	id?:true,
	notes?:true,
	order_time?:true,
	order_type?:true,
	payment_type?:true,
	refund_amount?:true,
	restaurant_id?:true,
	review_id?:true,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:true,
	stripe_payment_id?:true,
	tax?:true,
	to_location_address?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "restaurant_order" */
["restaurant_order_max_order_by"]: {
	actual_food_ready_time?:ValueTypes["order_by"],
	cancellation_time?:ValueTypes["order_by"],
	chat_id?:ValueTypes["order_by"],
	customer_app_type?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	delivery_id?:ValueTypes["order_by"],
	estimated_food_ready_time?:ValueTypes["order_by"],
	firebase_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	notes?:ValueTypes["order_by"],
	order_time?:ValueTypes["order_by"],
	order_type?:ValueTypes["order_by"],
	payment_type?:ValueTypes["order_by"],
	refund_amount?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"],
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	tax?:ValueTypes["order_by"],
	to_location_address?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["restaurant_order_min_fields"]: AliasType<{
	actual_food_ready_time?:true,
	cancellation_time?:true,
	chat_id?:true,
	customer_app_type?:true,
	customer_id?:true,
	delivery_cost?:true,
	delivery_id?:true,
	estimated_food_ready_time?:true,
	firebase_id?:true,
	id?:true,
	notes?:true,
	order_time?:true,
	order_type?:true,
	payment_type?:true,
	refund_amount?:true,
	restaurant_id?:true,
	review_id?:true,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:true,
	stripe_payment_id?:true,
	tax?:true,
	to_location_address?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "restaurant_order" */
["restaurant_order_min_order_by"]: {
	actual_food_ready_time?:ValueTypes["order_by"],
	cancellation_time?:ValueTypes["order_by"],
	chat_id?:ValueTypes["order_by"],
	customer_app_type?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	delivery_id?:ValueTypes["order_by"],
	estimated_food_ready_time?:ValueTypes["order_by"],
	firebase_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	notes?:ValueTypes["order_by"],
	order_time?:ValueTypes["order_by"],
	order_type?:ValueTypes["order_by"],
	payment_type?:ValueTypes["order_by"],
	refund_amount?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"],
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	tax?:ValueTypes["order_by"],
	to_location_address?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "restaurant_order" */
["restaurant_order_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant_order"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "restaurant_order" */
["restaurant_order_obj_rel_insert_input"]: {
	data:ValueTypes["restaurant_order_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["restaurant_order_on_conflict"]
};
	/** on_conflict condition type for table "restaurant_order" */
["restaurant_order_on_conflict"]: {
	constraint:ValueTypes["restaurant_order_constraint"],
	update_columns:ValueTypes["restaurant_order_update_column"][],
	where?:ValueTypes["restaurant_order_bool_exp"]
};
	/** Ordering options when selecting data from "restaurant_order". */
["restaurant_order_order_by"]: {
	actual_food_ready_time?:ValueTypes["order_by"],
	cancellation_time?:ValueTypes["order_by"],
	chat?:ValueTypes["chat_order_by"],
	chat_id?:ValueTypes["order_by"],
	customer?:ValueTypes["customer_order_by"],
	customer_app_type?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	delivery?:ValueTypes["delivery_order_order_by"],
	delivery_cost?:ValueTypes["order_by"],
	delivery_id?:ValueTypes["order_by"],
	estimated_food_ready_time?:ValueTypes["order_by"],
	firebase_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	items_aggregate?:ValueTypes["restaurant_order_item_aggregate_order_by"],
	items_cost?:ValueTypes["order_by"],
	notes?:ValueTypes["order_by"],
	order_time?:ValueTypes["order_by"],
	order_type?:ValueTypes["order_by"],
	payment_type?:ValueTypes["order_by"],
	refund_amount?:ValueTypes["order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	restaurant_id?:ValueTypes["order_by"],
	review?:ValueTypes["review_order_by"],
	review_id?:ValueTypes["order_by"],
	status?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	tax?:ValueTypes["order_by"],
	to_location_address?:ValueTypes["order_by"],
	to_location_gps?:ValueTypes["order_by"],
	total_cost?:ValueTypes["order_by"]
};
	/** primary key columns input for table: restaurant_order */
["restaurant_order_pk_columns_input"]: {
	id:number
};
	/** columns and relationships of "restaurant_order_public" */
["restaurant_order_public"]: AliasType<{
	actual_food_ready_time?:true,
	customer_id?:true,
	estimated_food_ready_time?:true,
	order_time?:true,
	restaurant_id?:true,
restaurant_operators?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_operator_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_operator_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_operator_bool_exp"]},ValueTypes["restaurant_operator"]],
restaurant_operators_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_operator_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_operator_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_operator_bool_exp"]},ValueTypes["restaurant_operator_aggregate"]],
	review_id?:true,
	status?:true,
		__typename?: true
}>;
	/** aggregated selection of "restaurant_order_public" */
["restaurant_order_public_aggregate"]: AliasType<{
	aggregate?:ValueTypes["restaurant_order_public_aggregate_fields"],
	nodes?:ValueTypes["restaurant_order_public"],
		__typename?: true
}>;
	/** aggregate fields of "restaurant_order_public" */
["restaurant_order_public_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["restaurant_order_public_avg_fields"],
count?: [{	columns?:ValueTypes["restaurant_order_public_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["restaurant_order_public_max_fields"],
	min?:ValueTypes["restaurant_order_public_min_fields"],
	stddev?:ValueTypes["restaurant_order_public_stddev_fields"],
	stddev_pop?:ValueTypes["restaurant_order_public_stddev_pop_fields"],
	stddev_samp?:ValueTypes["restaurant_order_public_stddev_samp_fields"],
	sum?:ValueTypes["restaurant_order_public_sum_fields"],
	var_pop?:ValueTypes["restaurant_order_public_var_pop_fields"],
	var_samp?:ValueTypes["restaurant_order_public_var_samp_fields"],
	variance?:ValueTypes["restaurant_order_public_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["restaurant_order_public_avg_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "restaurant_order_public". All fields are combined with a logical 'AND'. */
["restaurant_order_public_bool_exp"]: {
	_and?:ValueTypes["restaurant_order_public_bool_exp"][],
	_not?:ValueTypes["restaurant_order_public_bool_exp"],
	_or?:ValueTypes["restaurant_order_public_bool_exp"][],
	actual_food_ready_time?:ValueTypes["timestamptz_comparison_exp"],
	customer_id?:ValueTypes["Int_comparison_exp"],
	estimated_food_ready_time?:ValueTypes["timestamptz_comparison_exp"],
	order_time?:ValueTypes["timestamptz_comparison_exp"],
	restaurant_id?:ValueTypes["Int_comparison_exp"],
	restaurant_operators?:ValueTypes["restaurant_operator_bool_exp"],
	review_id?:ValueTypes["Int_comparison_exp"],
	status?:ValueTypes["String_comparison_exp"]
};
	/** input type for incrementing numeric columns in table "restaurant_order_public" */
["restaurant_order_public_inc_input"]: {
	customer_id?:number,
	restaurant_id?:number,
	review_id?:number
};
	/** input type for inserting data into table "restaurant_order_public" */
["restaurant_order_public_insert_input"]: {
	actual_food_ready_time?:ValueTypes["timestamptz"],
	customer_id?:number,
	estimated_food_ready_time?:ValueTypes["timestamptz"],
	order_time?:ValueTypes["timestamptz"],
	restaurant_id?:number,
	restaurant_operators?:ValueTypes["restaurant_operator_arr_rel_insert_input"],
	review_id?:number,
	status?:string
};
	/** aggregate max on columns */
["restaurant_order_public_max_fields"]: AliasType<{
	actual_food_ready_time?:true,
	customer_id?:true,
	estimated_food_ready_time?:true,
	order_time?:true,
	restaurant_id?:true,
	review_id?:true,
	status?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["restaurant_order_public_min_fields"]: AliasType<{
	actual_food_ready_time?:true,
	customer_id?:true,
	estimated_food_ready_time?:true,
	order_time?:true,
	restaurant_id?:true,
	review_id?:true,
	status?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "restaurant_order_public" */
["restaurant_order_public_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["restaurant_order_public"],
		__typename?: true
}>;
	/** Ordering options when selecting data from "restaurant_order_public". */
["restaurant_order_public_order_by"]: {
	actual_food_ready_time?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	estimated_food_ready_time?:ValueTypes["order_by"],
	order_time?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	restaurant_operators_aggregate?:ValueTypes["restaurant_operator_aggregate_order_by"],
	review_id?:ValueTypes["order_by"],
	status?:ValueTypes["order_by"]
};
	/** select columns of table "restaurant_order_public" */
["restaurant_order_public_select_column"]:restaurant_order_public_select_column;
	/** input type for updating data in table "restaurant_order_public" */
["restaurant_order_public_set_input"]: {
	actual_food_ready_time?:ValueTypes["timestamptz"],
	customer_id?:number,
	estimated_food_ready_time?:ValueTypes["timestamptz"],
	order_time?:ValueTypes["timestamptz"],
	restaurant_id?:number,
	review_id?:number,
	status?:string
};
	/** aggregate stddev on columns */
["restaurant_order_public_stddev_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["restaurant_order_public_stddev_pop_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["restaurant_order_public_stddev_samp_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "restaurant_order_public" */
["restaurant_order_public_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_order_public_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_order_public_stream_cursor_value_input"]: {
	actual_food_ready_time?:ValueTypes["timestamptz"],
	customer_id?:number,
	estimated_food_ready_time?:ValueTypes["timestamptz"],
	order_time?:ValueTypes["timestamptz"],
	restaurant_id?:number,
	review_id?:number,
	status?:string
};
	/** aggregate sum on columns */
["restaurant_order_public_sum_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
	review_id?:true,
		__typename?: true
}>;
	["restaurant_order_public_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_order_public_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_order_public_set_input"],
	where:ValueTypes["restaurant_order_public_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_order_public_var_pop_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["restaurant_order_public_var_samp_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["restaurant_order_public_variance_fields"]: AliasType<{
	customer_id?:true,
	restaurant_id?:true,
	review_id?:true,
		__typename?: true
}>;
	/** select columns of table "restaurant_order" */
["restaurant_order_select_column"]:restaurant_order_select_column;
	/** input type for updating data in table "restaurant_order" */
["restaurant_order_set_input"]: {
	actual_food_ready_time?:ValueTypes["timestamptz"],
	cancellation_time?:ValueTypes["timestamptz"],
	chat_id?:number,
	customer_app_type?:string,
	customer_id?:number,
	delivery_cost?:ValueTypes["money"],
	delivery_id?:number,
	estimated_food_ready_time?:ValueTypes["timestamptz"],
	firebase_id?:string,
	id?:number,
	notes?:string,
	order_time?:ValueTypes["timestamptz"],
	order_type?:string,
	payment_type?:string,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
	stripe_payment_id?:number,
	tax?:ValueTypes["float8"],
	to_location_address?:string,
	to_location_gps?:ValueTypes["geography"]
};
	/** aggregate stddev on columns */
["restaurant_order_stddev_fields"]: AliasType<{
	chat_id?:true,
	customer_id?:true,
	delivery_cost?:true,
	delivery_id?:true,
	id?:true,
	refund_amount?:true,
	restaurant_id?:true,
	review_id?:true,
	stripe_payment_id?:true,
	tax?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "restaurant_order" */
["restaurant_order_stddev_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	delivery_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	refund_amount?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	tax?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["restaurant_order_stddev_pop_fields"]: AliasType<{
	chat_id?:true,
	customer_id?:true,
	delivery_cost?:true,
	delivery_id?:true,
	id?:true,
	refund_amount?:true,
	restaurant_id?:true,
	review_id?:true,
	stripe_payment_id?:true,
	tax?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "restaurant_order" */
["restaurant_order_stddev_pop_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	delivery_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	refund_amount?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	tax?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["restaurant_order_stddev_samp_fields"]: AliasType<{
	chat_id?:true,
	customer_id?:true,
	delivery_cost?:true,
	delivery_id?:true,
	id?:true,
	refund_amount?:true,
	restaurant_id?:true,
	review_id?:true,
	stripe_payment_id?:true,
	tax?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "restaurant_order" */
["restaurant_order_stddev_samp_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	delivery_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	refund_amount?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	tax?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "restaurant_order" */
["restaurant_order_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_order_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_order_stream_cursor_value_input"]: {
	actual_food_ready_time?:ValueTypes["timestamptz"],
	cancellation_time?:ValueTypes["timestamptz"],
	chat_id?:number,
	customer_app_type?:string,
	customer_id?:number,
	delivery_cost?:ValueTypes["money"],
	delivery_id?:number,
	estimated_food_ready_time?:ValueTypes["timestamptz"],
	firebase_id?:string,
	id?:number,
	notes?:string,
	order_time?:ValueTypes["timestamptz"],
	order_type?:string,
	payment_type?:string,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
	stripe_payment_id?:number,
	tax?:ValueTypes["float8"],
	to_location_address?:string,
	to_location_gps?:ValueTypes["geography"]
};
	/** aggregate sum on columns */
["restaurant_order_sum_fields"]: AliasType<{
	chat_id?:true,
	customer_id?:true,
	delivery_cost?:true,
	delivery_id?:true,
	id?:true,
	refund_amount?:true,
	restaurant_id?:true,
	review_id?:true,
	stripe_payment_id?:true,
	tax?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "restaurant_order" */
["restaurant_order_sum_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	delivery_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	refund_amount?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	tax?:ValueTypes["order_by"]
};
	/** update columns of table "restaurant_order" */
["restaurant_order_update_column"]:restaurant_order_update_column;
	["restaurant_order_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_order_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_order_set_input"],
	where:ValueTypes["restaurant_order_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_order_var_pop_fields"]: AliasType<{
	chat_id?:true,
	customer_id?:true,
	delivery_cost?:true,
	delivery_id?:true,
	id?:true,
	refund_amount?:true,
	restaurant_id?:true,
	review_id?:true,
	stripe_payment_id?:true,
	tax?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "restaurant_order" */
["restaurant_order_var_pop_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	delivery_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	refund_amount?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	tax?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["restaurant_order_var_samp_fields"]: AliasType<{
	chat_id?:true,
	customer_id?:true,
	delivery_cost?:true,
	delivery_id?:true,
	id?:true,
	refund_amount?:true,
	restaurant_id?:true,
	review_id?:true,
	stripe_payment_id?:true,
	tax?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "restaurant_order" */
["restaurant_order_var_samp_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	delivery_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	refund_amount?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	tax?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["restaurant_order_variance_fields"]: AliasType<{
	chat_id?:true,
	customer_id?:true,
	delivery_cost?:true,
	delivery_id?:true,
	id?:true,
	refund_amount?:true,
	restaurant_id?:true,
	review_id?:true,
	stripe_payment_id?:true,
	tax?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "restaurant_order" */
["restaurant_order_variance_order_by"]: {
	chat_id?:ValueTypes["order_by"],
	customer_id?:ValueTypes["order_by"],
	delivery_cost?:ValueTypes["order_by"],
	delivery_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	refund_amount?:ValueTypes["order_by"],
	restaurant_id?:ValueTypes["order_by"],
	review_id?:ValueTypes["order_by"],
	stripe_payment_id?:ValueTypes["order_by"],
	tax?:ValueTypes["order_by"]
};
	/** primary key columns input for table: restaurant */
["restaurant_pk_columns_input"]: {
	id:number
};
	/** select columns of table "restaurant" */
["restaurant_select_column"]:restaurant_select_column;
	/** input type for updating data in table "restaurant" */
["restaurant_set_input"]: {
	approved?:boolean,
	description_id?:number,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	location_gps?:ValueTypes["geography"],
	location_text?:string,
	name?:string,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
	payment_info_id?:number,
	schedule_id?:number,
	self_delivery?:boolean,
	service_provider_type?:string
};
	/** aggregate stddev on columns */
["restaurant_stddev_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	payment_info_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["restaurant_stddev_pop_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	payment_info_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["restaurant_stddev_samp_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	payment_info_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "restaurant" */
["restaurant_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["restaurant_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["restaurant_stream_cursor_value_input"]: {
	approved?:boolean,
	description_id?:number,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	location_gps?:ValueTypes["geography"],
	location_text?:string,
	name?:string,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
	payment_info_id?:number,
	schedule_id?:number,
	self_delivery?:boolean,
	service_provider_type?:string
};
	/** aggregate sum on columns */
["restaurant_sum_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	payment_info_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** update columns of table "restaurant" */
["restaurant_update_column"]:restaurant_update_column;
	["restaurant_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["restaurant_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["restaurant_set_input"],
	where:ValueTypes["restaurant_bool_exp"]
};
	/** aggregate var_pop on columns */
["restaurant_var_pop_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	payment_info_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["restaurant_var_samp_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	payment_info_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["restaurant_variance_fields"]: AliasType<{
	description_id?:true,
	id?:true,
	payment_info_id?:true,
	schedule_id?:true,
		__typename?: true
}>;
	/** columns and relationships of "review" */
["review"]: AliasType<{
	from_entity_id?:true,
	from_entity_type?:true,
	id?:true,
	note?:true,
	rating?:true,
	to_entity_id?:true,
	to_entity_type?:true,
		__typename?: true
}>;
	/** aggregated selection of "review" */
["review_aggregate"]: AliasType<{
	aggregate?:ValueTypes["review_aggregate_fields"],
	nodes?:ValueTypes["review"],
		__typename?: true
}>;
	/** aggregate fields of "review" */
["review_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["review_avg_fields"],
count?: [{	columns?:ValueTypes["review_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["review_max_fields"],
	min?:ValueTypes["review_min_fields"],
	stddev?:ValueTypes["review_stddev_fields"],
	stddev_pop?:ValueTypes["review_stddev_pop_fields"],
	stddev_samp?:ValueTypes["review_stddev_samp_fields"],
	sum?:ValueTypes["review_sum_fields"],
	var_pop?:ValueTypes["review_var_pop_fields"],
	var_samp?:ValueTypes["review_var_samp_fields"],
	variance?:ValueTypes["review_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["review_avg_fields"]: AliasType<{
	from_entity_id?:true,
	id?:true,
	rating?:true,
	to_entity_id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "review". All fields are combined with a logical 'AND'. */
["review_bool_exp"]: {
	_and?:ValueTypes["review_bool_exp"][],
	_not?:ValueTypes["review_bool_exp"],
	_or?:ValueTypes["review_bool_exp"][],
	from_entity_id?:ValueTypes["Int_comparison_exp"],
	from_entity_type?:ValueTypes["String_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	note?:ValueTypes["String_comparison_exp"],
	rating?:ValueTypes["Int_comparison_exp"],
	to_entity_id?:ValueTypes["Int_comparison_exp"],
	to_entity_type?:ValueTypes["String_comparison_exp"]
};
	/** unique or primary key constraints on table "review" */
["review_constraint"]:review_constraint;
	/** input type for incrementing numeric columns in table "review" */
["review_inc_input"]: {
	from_entity_id?:number,
	id?:number,
	rating?:number,
	to_entity_id?:number
};
	/** input type for inserting data into table "review" */
["review_insert_input"]: {
	from_entity_id?:number,
	from_entity_type?:string,
	id?:number,
	note?:string,
	rating?:number,
	to_entity_id?:number,
	to_entity_type?:string
};
	/** aggregate max on columns */
["review_max_fields"]: AliasType<{
	from_entity_id?:true,
	from_entity_type?:true,
	id?:true,
	note?:true,
	rating?:true,
	to_entity_id?:true,
	to_entity_type?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["review_min_fields"]: AliasType<{
	from_entity_id?:true,
	from_entity_type?:true,
	id?:true,
	note?:true,
	rating?:true,
	to_entity_id?:true,
	to_entity_type?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "review" */
["review_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["review"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "review" */
["review_obj_rel_insert_input"]: {
	data:ValueTypes["review_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["review_on_conflict"]
};
	/** on_conflict condition type for table "review" */
["review_on_conflict"]: {
	constraint:ValueTypes["review_constraint"],
	update_columns:ValueTypes["review_update_column"][],
	where?:ValueTypes["review_bool_exp"]
};
	/** Ordering options when selecting data from "review". */
["review_order_by"]: {
	from_entity_id?:ValueTypes["order_by"],
	from_entity_type?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	note?:ValueTypes["order_by"],
	rating?:ValueTypes["order_by"],
	to_entity_id?:ValueTypes["order_by"],
	to_entity_type?:ValueTypes["order_by"]
};
	/** primary key columns input for table: review */
["review_pk_columns_input"]: {
	id:number
};
	/** select columns of table "review" */
["review_select_column"]:review_select_column;
	/** input type for updating data in table "review" */
["review_set_input"]: {
	from_entity_id?:number,
	from_entity_type?:string,
	id?:number,
	note?:string,
	rating?:number,
	to_entity_id?:number,
	to_entity_type?:string
};
	/** aggregate stddev on columns */
["review_stddev_fields"]: AliasType<{
	from_entity_id?:true,
	id?:true,
	rating?:true,
	to_entity_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["review_stddev_pop_fields"]: AliasType<{
	from_entity_id?:true,
	id?:true,
	rating?:true,
	to_entity_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["review_stddev_samp_fields"]: AliasType<{
	from_entity_id?:true,
	id?:true,
	rating?:true,
	to_entity_id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "review" */
["review_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["review_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["review_stream_cursor_value_input"]: {
	from_entity_id?:number,
	from_entity_type?:string,
	id?:number,
	note?:string,
	rating?:number,
	to_entity_id?:number,
	to_entity_type?:string
};
	/** aggregate sum on columns */
["review_sum_fields"]: AliasType<{
	from_entity_id?:true,
	id?:true,
	rating?:true,
	to_entity_id?:true,
		__typename?: true
}>;
	/** update columns of table "review" */
["review_update_column"]:review_update_column;
	["review_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["review_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["review_set_input"],
	where:ValueTypes["review_bool_exp"]
};
	/** aggregate var_pop on columns */
["review_var_pop_fields"]: AliasType<{
	from_entity_id?:true,
	id?:true,
	rating?:true,
	to_entity_id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["review_var_samp_fields"]: AliasType<{
	from_entity_id?:true,
	id?:true,
	rating?:true,
	to_entity_id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["review_variance_fields"]: AliasType<{
	from_entity_id?:true,
	id?:true,
	rating?:true,
	to_entity_id?:true,
		__typename?: true
}>;
	/** Customer's saved locations */
["saved_location"]: AliasType<{
	customer_id?:true,
	default?:true,
	id?:true,
	location_gps?:true,
	location_text?:true,
	name?:true,
		__typename?: true
}>;
	/** aggregated selection of "saved_location" */
["saved_location_aggregate"]: AliasType<{
	aggregate?:ValueTypes["saved_location_aggregate_fields"],
	nodes?:ValueTypes["saved_location"],
		__typename?: true
}>;
	/** aggregate fields of "saved_location" */
["saved_location_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["saved_location_avg_fields"],
count?: [{	columns?:ValueTypes["saved_location_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["saved_location_max_fields"],
	min?:ValueTypes["saved_location_min_fields"],
	stddev?:ValueTypes["saved_location_stddev_fields"],
	stddev_pop?:ValueTypes["saved_location_stddev_pop_fields"],
	stddev_samp?:ValueTypes["saved_location_stddev_samp_fields"],
	sum?:ValueTypes["saved_location_sum_fields"],
	var_pop?:ValueTypes["saved_location_var_pop_fields"],
	var_samp?:ValueTypes["saved_location_var_samp_fields"],
	variance?:ValueTypes["saved_location_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "saved_location" */
["saved_location_aggregate_order_by"]: {
	avg?:ValueTypes["saved_location_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["saved_location_max_order_by"],
	min?:ValueTypes["saved_location_min_order_by"],
	stddev?:ValueTypes["saved_location_stddev_order_by"],
	stddev_pop?:ValueTypes["saved_location_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["saved_location_stddev_samp_order_by"],
	sum?:ValueTypes["saved_location_sum_order_by"],
	var_pop?:ValueTypes["saved_location_var_pop_order_by"],
	var_samp?:ValueTypes["saved_location_var_samp_order_by"],
	variance?:ValueTypes["saved_location_variance_order_by"]
};
	/** input type for inserting array relation for remote table "saved_location" */
["saved_location_arr_rel_insert_input"]: {
	data:ValueTypes["saved_location_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["saved_location_on_conflict"]
};
	/** aggregate avg on columns */
["saved_location_avg_fields"]: AliasType<{
	customer_id?:true,
	id?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "saved_location" */
["saved_location_avg_order_by"]: {
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "saved_location". All fields are combined with a logical 'AND'. */
["saved_location_bool_exp"]: {
	_and?:ValueTypes["saved_location_bool_exp"][],
	_not?:ValueTypes["saved_location_bool_exp"],
	_or?:ValueTypes["saved_location_bool_exp"][],
	customer_id?:ValueTypes["Int_comparison_exp"],
	default?:ValueTypes["Boolean_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	location_gps?:ValueTypes["geography_comparison_exp"],
	location_text?:ValueTypes["String_comparison_exp"],
	name?:ValueTypes["String_comparison_exp"]
};
	/** unique or primary key constraints on table "saved_location" */
["saved_location_constraint"]:saved_location_constraint;
	/** input type for incrementing numeric columns in table "saved_location" */
["saved_location_inc_input"]: {
	customer_id?:number,
	id?:number
};
	/** input type for inserting data into table "saved_location" */
["saved_location_insert_input"]: {
	customer_id?:number,
	default?:boolean,
	id?:number,
	location_gps?:ValueTypes["geography"],
	location_text?:string,
	name?:string
};
	/** aggregate max on columns */
["saved_location_max_fields"]: AliasType<{
	customer_id?:true,
	id?:true,
	location_text?:true,
	name?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "saved_location" */
["saved_location_max_order_by"]: {
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	location_text?:ValueTypes["order_by"],
	name?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["saved_location_min_fields"]: AliasType<{
	customer_id?:true,
	id?:true,
	location_text?:true,
	name?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "saved_location" */
["saved_location_min_order_by"]: {
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	location_text?:ValueTypes["order_by"],
	name?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "saved_location" */
["saved_location_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["saved_location"],
		__typename?: true
}>;
	/** on_conflict condition type for table "saved_location" */
["saved_location_on_conflict"]: {
	constraint:ValueTypes["saved_location_constraint"],
	update_columns:ValueTypes["saved_location_update_column"][],
	where?:ValueTypes["saved_location_bool_exp"]
};
	/** Ordering options when selecting data from "saved_location". */
["saved_location_order_by"]: {
	customer_id?:ValueTypes["order_by"],
	default?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	location_gps?:ValueTypes["order_by"],
	location_text?:ValueTypes["order_by"],
	name?:ValueTypes["order_by"]
};
	/** primary key columns input for table: saved_location */
["saved_location_pk_columns_input"]: {
	id:number
};
	/** select columns of table "saved_location" */
["saved_location_select_column"]:saved_location_select_column;
	/** input type for updating data in table "saved_location" */
["saved_location_set_input"]: {
	customer_id?:number,
	default?:boolean,
	id?:number,
	location_gps?:ValueTypes["geography"],
	location_text?:string,
	name?:string
};
	/** aggregate stddev on columns */
["saved_location_stddev_fields"]: AliasType<{
	customer_id?:true,
	id?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "saved_location" */
["saved_location_stddev_order_by"]: {
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["saved_location_stddev_pop_fields"]: AliasType<{
	customer_id?:true,
	id?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "saved_location" */
["saved_location_stddev_pop_order_by"]: {
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["saved_location_stddev_samp_fields"]: AliasType<{
	customer_id?:true,
	id?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "saved_location" */
["saved_location_stddev_samp_order_by"]: {
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "saved_location" */
["saved_location_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["saved_location_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["saved_location_stream_cursor_value_input"]: {
	customer_id?:number,
	default?:boolean,
	id?:number,
	location_gps?:ValueTypes["geography"],
	location_text?:string,
	name?:string
};
	/** aggregate sum on columns */
["saved_location_sum_fields"]: AliasType<{
	customer_id?:true,
	id?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "saved_location" */
["saved_location_sum_order_by"]: {
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"]
};
	/** update columns of table "saved_location" */
["saved_location_update_column"]:saved_location_update_column;
	["saved_location_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["saved_location_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["saved_location_set_input"],
	where:ValueTypes["saved_location_bool_exp"]
};
	/** aggregate var_pop on columns */
["saved_location_var_pop_fields"]: AliasType<{
	customer_id?:true,
	id?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "saved_location" */
["saved_location_var_pop_order_by"]: {
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["saved_location_var_samp_fields"]: AliasType<{
	customer_id?:true,
	id?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "saved_location" */
["saved_location_var_samp_order_by"]: {
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["saved_location_variance_fields"]: AliasType<{
	customer_id?:true,
	id?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "saved_location" */
["saved_location_variance_order_by"]: {
	customer_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"]
};
	/** columns and relationships of "service_provider_payment_info" */
["service_provider_payment_info"]: AliasType<{
	bank_transfer?:true,
	card?:true,
	cash?:true,
	id?:true,
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	service_provider_type?:true,
	/** An object relationship */
	stripe_info?:ValueTypes["stripe_info"],
	stripe_info_id?:true,
		__typename?: true
}>;
	/** aggregated selection of "service_provider_payment_info" */
["service_provider_payment_info_aggregate"]: AliasType<{
	aggregate?:ValueTypes["service_provider_payment_info_aggregate_fields"],
	nodes?:ValueTypes["service_provider_payment_info"],
		__typename?: true
}>;
	/** aggregate fields of "service_provider_payment_info" */
["service_provider_payment_info_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["service_provider_payment_info_avg_fields"],
count?: [{	columns?:ValueTypes["service_provider_payment_info_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["service_provider_payment_info_max_fields"],
	min?:ValueTypes["service_provider_payment_info_min_fields"],
	stddev?:ValueTypes["service_provider_payment_info_stddev_fields"],
	stddev_pop?:ValueTypes["service_provider_payment_info_stddev_pop_fields"],
	stddev_samp?:ValueTypes["service_provider_payment_info_stddev_samp_fields"],
	sum?:ValueTypes["service_provider_payment_info_sum_fields"],
	var_pop?:ValueTypes["service_provider_payment_info_var_pop_fields"],
	var_samp?:ValueTypes["service_provider_payment_info_var_samp_fields"],
	variance?:ValueTypes["service_provider_payment_info_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["service_provider_payment_info_avg_fields"]: AliasType<{
	id?:true,
	stripe_info_id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table
"service_provider_payment_info". All fields are combined with a logical 'AND'. */
["service_provider_payment_info_bool_exp"]: {
	_and?:ValueTypes["service_provider_payment_info_bool_exp"][],
	_not?:ValueTypes["service_provider_payment_info_bool_exp"],
	_or?:ValueTypes["service_provider_payment_info_bool_exp"][],
	bank_transfer?:ValueTypes["Boolean_comparison_exp"],
	card?:ValueTypes["Boolean_comparison_exp"],
	cash?:ValueTypes["Boolean_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	service_provider_type?:ValueTypes["String_comparison_exp"],
	stripe_info?:ValueTypes["stripe_info_bool_exp"],
	stripe_info_id?:ValueTypes["Int_comparison_exp"]
};
	/** unique or primary key constraints on table "service_provider_payment_info" */
["service_provider_payment_info_constraint"]:service_provider_payment_info_constraint;
	/** input type for incrementing numeric columns in table "service_provider_payment_info" */
["service_provider_payment_info_inc_input"]: {
	id?:number,
	stripe_info_id?:number
};
	/** input type for inserting data into table "service_provider_payment_info" */
["service_provider_payment_info_insert_input"]: {
	bank_transfer?:boolean,
	card?:boolean,
	cash?:boolean,
	id?:number,
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	service_provider_type?:string,
	stripe_info?:ValueTypes["stripe_info_obj_rel_insert_input"],
	stripe_info_id?:number
};
	/** aggregate max on columns */
["service_provider_payment_info_max_fields"]: AliasType<{
	id?:true,
	service_provider_type?:true,
	stripe_info_id?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["service_provider_payment_info_min_fields"]: AliasType<{
	id?:true,
	service_provider_type?:true,
	stripe_info_id?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "service_provider_payment_info" */
["service_provider_payment_info_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["service_provider_payment_info"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "service_provider_payment_info" */
["service_provider_payment_info_obj_rel_insert_input"]: {
	data:ValueTypes["service_provider_payment_info_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["service_provider_payment_info_on_conflict"]
};
	/** on_conflict condition type for table "service_provider_payment_info" */
["service_provider_payment_info_on_conflict"]: {
	constraint:ValueTypes["service_provider_payment_info_constraint"],
	update_columns:ValueTypes["service_provider_payment_info_update_column"][],
	where?:ValueTypes["service_provider_payment_info_bool_exp"]
};
	/** Ordering options when selecting data from "service_provider_payment_info". */
["service_provider_payment_info_order_by"]: {
	bank_transfer?:ValueTypes["order_by"],
	card?:ValueTypes["order_by"],
	cash?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	service_provider_type?:ValueTypes["order_by"],
	stripe_info?:ValueTypes["stripe_info_order_by"],
	stripe_info_id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: service_provider_payment_info */
["service_provider_payment_info_pk_columns_input"]: {
	id:number
};
	/** select columns of table "service_provider_payment_info" */
["service_provider_payment_info_select_column"]:service_provider_payment_info_select_column;
	/** input type for updating data in table "service_provider_payment_info" */
["service_provider_payment_info_set_input"]: {
	bank_transfer?:boolean,
	card?:boolean,
	cash?:boolean,
	id?:number,
	service_provider_type?:string,
	stripe_info_id?:number
};
	/** aggregate stddev on columns */
["service_provider_payment_info_stddev_fields"]: AliasType<{
	id?:true,
	stripe_info_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["service_provider_payment_info_stddev_pop_fields"]: AliasType<{
	id?:true,
	stripe_info_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["service_provider_payment_info_stddev_samp_fields"]: AliasType<{
	id?:true,
	stripe_info_id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "service_provider_payment_info" */
["service_provider_payment_info_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["service_provider_payment_info_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["service_provider_payment_info_stream_cursor_value_input"]: {
	bank_transfer?:boolean,
	card?:boolean,
	cash?:boolean,
	id?:number,
	service_provider_type?:string,
	stripe_info_id?:number
};
	/** aggregate sum on columns */
["service_provider_payment_info_sum_fields"]: AliasType<{
	id?:true,
	stripe_info_id?:true,
		__typename?: true
}>;
	/** update columns of table "service_provider_payment_info" */
["service_provider_payment_info_update_column"]:service_provider_payment_info_update_column;
	["service_provider_payment_info_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["service_provider_payment_info_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["service_provider_payment_info_set_input"],
	where:ValueTypes["service_provider_payment_info_bool_exp"]
};
	/** aggregate var_pop on columns */
["service_provider_payment_info_var_pop_fields"]: AliasType<{
	id?:true,
	stripe_info_id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["service_provider_payment_info_var_samp_fields"]: AliasType<{
	id?:true,
	stripe_info_id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["service_provider_payment_info_variance_fields"]: AliasType<{
	id?:true,
	stripe_info_id?:true,
		__typename?: true
}>;
	["st_d_within_geography_input"]: {
	distance:number,
	from:ValueTypes["geography"],
	use_spheroid?:boolean
};
	["st_d_within_input"]: {
	distance:number,
	from:ValueTypes["geometry"]
};
	/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
["String_comparison_exp"]: {
	_eq?:string,
	_gt?:string,
	_gte?:string,
	/** does the column match the given case-insensitive pattern */
	_ilike?:string,
	_in?:string[],
	/** does the column match the given POSIX regular expression, case insensitive */
	_iregex?:string,
	_is_null?:boolean,
	/** does the column match the given pattern */
	_like?:string,
	_lt?:string,
	_lte?:string,
	_neq?:string,
	/** does the column NOT match the given case-insensitive pattern */
	_nilike?:string,
	_nin?:string[],
	/** does the column NOT match the given POSIX regular expression, case insensitive */
	_niregex?:string,
	/** does the column NOT match the given pattern */
	_nlike?:string,
	/** does the column NOT match the given POSIX regular expression, case sensitive */
	_nregex?:string,
	/** does the column NOT match the given SQL regular expression */
	_nsimilar?:string,
	/** does the column match the given POSIX regular expression, case sensitive */
	_regex?:string,
	/** does the column match the given SQL regular expression */
	_similar?:string
};
	/** columns and relationships of "stripe_info" */
["stripe_info"]: AliasType<{
	charges_enabled?:true,
	details_submitted?:true,
	id?:true,
	pass_fees_to_customer?:true,
	payouts_enabled?:true,
requirements?: [{	/** JSON select path */
	path?:string},true],
	/** An object relationship */
	service_provider_payment_info?:ValueTypes["service_provider_payment_info"],
	stripe_id?:true,
	stripe_status?:true,
		__typename?: true
}>;
	/** aggregated selection of "stripe_info" */
["stripe_info_aggregate"]: AliasType<{
	aggregate?:ValueTypes["stripe_info_aggregate_fields"],
	nodes?:ValueTypes["stripe_info"],
		__typename?: true
}>;
	/** aggregate fields of "stripe_info" */
["stripe_info_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["stripe_info_avg_fields"],
count?: [{	columns?:ValueTypes["stripe_info_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["stripe_info_max_fields"],
	min?:ValueTypes["stripe_info_min_fields"],
	stddev?:ValueTypes["stripe_info_stddev_fields"],
	stddev_pop?:ValueTypes["stripe_info_stddev_pop_fields"],
	stddev_samp?:ValueTypes["stripe_info_stddev_samp_fields"],
	sum?:ValueTypes["stripe_info_sum_fields"],
	var_pop?:ValueTypes["stripe_info_var_pop_fields"],
	var_samp?:ValueTypes["stripe_info_var_samp_fields"],
	variance?:ValueTypes["stripe_info_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["stripe_info_avg_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "stripe_info". All fields are combined with a logical 'AND'. */
["stripe_info_bool_exp"]: {
	_and?:ValueTypes["stripe_info_bool_exp"][],
	_not?:ValueTypes["stripe_info_bool_exp"],
	_or?:ValueTypes["stripe_info_bool_exp"][],
	charges_enabled?:ValueTypes["Boolean_comparison_exp"],
	details_submitted?:ValueTypes["Boolean_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	pass_fees_to_customer?:ValueTypes["Boolean_comparison_exp"],
	payouts_enabled?:ValueTypes["Boolean_comparison_exp"],
	requirements?:ValueTypes["json_comparison_exp"],
	service_provider_payment_info?:ValueTypes["service_provider_payment_info_bool_exp"],
	stripe_id?:ValueTypes["String_comparison_exp"],
	stripe_status?:ValueTypes["String_comparison_exp"]
};
	/** unique or primary key constraints on table "stripe_info" */
["stripe_info_constraint"]:stripe_info_constraint;
	/** input type for incrementing numeric columns in table "stripe_info" */
["stripe_info_inc_input"]: {
	id?:number
};
	/** input type for inserting data into table "stripe_info" */
["stripe_info_insert_input"]: {
	charges_enabled?:boolean,
	details_submitted?:boolean,
	id?:number,
	pass_fees_to_customer?:boolean,
	payouts_enabled?:boolean,
	requirements?:ValueTypes["json"],
	service_provider_payment_info?:ValueTypes["service_provider_payment_info_obj_rel_insert_input"],
	stripe_id?:string,
	stripe_status?:string
};
	/** aggregate max on columns */
["stripe_info_max_fields"]: AliasType<{
	id?:true,
	stripe_id?:true,
	stripe_status?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["stripe_info_min_fields"]: AliasType<{
	id?:true,
	stripe_id?:true,
	stripe_status?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "stripe_info" */
["stripe_info_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["stripe_info"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "stripe_info" */
["stripe_info_obj_rel_insert_input"]: {
	data:ValueTypes["stripe_info_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["stripe_info_on_conflict"]
};
	/** on_conflict condition type for table "stripe_info" */
["stripe_info_on_conflict"]: {
	constraint:ValueTypes["stripe_info_constraint"],
	update_columns:ValueTypes["stripe_info_update_column"][],
	where?:ValueTypes["stripe_info_bool_exp"]
};
	/** Ordering options when selecting data from "stripe_info". */
["stripe_info_order_by"]: {
	charges_enabled?:ValueTypes["order_by"],
	details_submitted?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	pass_fees_to_customer?:ValueTypes["order_by"],
	payouts_enabled?:ValueTypes["order_by"],
	requirements?:ValueTypes["order_by"],
	service_provider_payment_info?:ValueTypes["service_provider_payment_info_order_by"],
	stripe_id?:ValueTypes["order_by"],
	stripe_status?:ValueTypes["order_by"]
};
	/** primary key columns input for table: stripe_info */
["stripe_info_pk_columns_input"]: {
	id:number
};
	/** select columns of table "stripe_info" */
["stripe_info_select_column"]:stripe_info_select_column;
	/** input type for updating data in table "stripe_info" */
["stripe_info_set_input"]: {
	charges_enabled?:boolean,
	details_submitted?:boolean,
	id?:number,
	pass_fees_to_customer?:boolean,
	payouts_enabled?:boolean,
	requirements?:ValueTypes["json"],
	stripe_id?:string,
	stripe_status?:string
};
	/** aggregate stddev on columns */
["stripe_info_stddev_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["stripe_info_stddev_pop_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["stripe_info_stddev_samp_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "stripe_info" */
["stripe_info_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["stripe_info_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["stripe_info_stream_cursor_value_input"]: {
	charges_enabled?:boolean,
	details_submitted?:boolean,
	id?:number,
	pass_fees_to_customer?:boolean,
	payouts_enabled?:boolean,
	requirements?:ValueTypes["json"],
	stripe_id?:string,
	stripe_status?:string
};
	/** aggregate sum on columns */
["stripe_info_sum_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** update columns of table "stripe_info" */
["stripe_info_update_column"]:stripe_info_update_column;
	["stripe_info_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["stripe_info_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["stripe_info_set_input"],
	where:ValueTypes["stripe_info_bool_exp"]
};
	/** aggregate var_pop on columns */
["stripe_info_var_pop_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["stripe_info_var_samp_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["stripe_info_variance_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	["subscription_root"]: AliasType<{
chat?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["chat_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["chat_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["chat_bool_exp"]},ValueTypes["chat"]],
chat_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["chat_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["chat_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["chat_bool_exp"]},ValueTypes["chat_aggregate"]],
chat_by_pk?: [{	id:number},ValueTypes["chat"]],
chat_participant?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["chat_participant_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["chat_participant_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["chat_participant_bool_exp"]},ValueTypes["chat_participant"]],
chat_participant_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["chat_participant_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["chat_participant_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["chat_participant_bool_exp"]},ValueTypes["chat_participant_aggregate"]],
chat_participant_by_pk?: [{	id:number},ValueTypes["chat_participant"]],
chat_participant_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["chat_participant_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["chat_participant_bool_exp"]},ValueTypes["chat_participant"]],
chat_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["chat_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["chat_bool_exp"]},ValueTypes["chat"]],
customer?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["customer_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["customer_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["customer_bool_exp"]},ValueTypes["customer"]],
customer_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["customer_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["customer_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["customer_bool_exp"]},ValueTypes["customer_aggregate"]],
customer_by_pk?: [{	user_id:number},ValueTypes["customer"]],
customer_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["customer_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["customer_bool_exp"]},ValueTypes["customer"]],
deliverer?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["deliverer_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["deliverer_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["deliverer_bool_exp"]},ValueTypes["deliverer"]],
deliverer_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["deliverer_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["deliverer_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["deliverer_bool_exp"]},ValueTypes["deliverer_aggregate"]],
deliverer_by_pk?: [{	id:number},ValueTypes["deliverer"]],
deliverer_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["deliverer_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["deliverer_bool_exp"]},ValueTypes["deliverer"]],
delivery_order?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["delivery_order_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["delivery_order_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["delivery_order_bool_exp"]},ValueTypes["delivery_order"]],
delivery_order_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["delivery_order_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["delivery_order_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["delivery_order_bool_exp"]},ValueTypes["delivery_order_aggregate"]],
delivery_order_by_pk?: [{	id:number},ValueTypes["delivery_order"]],
delivery_order_public?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["delivery_order_public_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["delivery_order_public_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["delivery_order_public_bool_exp"]},ValueTypes["delivery_order_public"]],
delivery_order_public_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["delivery_order_public_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["delivery_order_public_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["delivery_order_public_bool_exp"]},ValueTypes["delivery_order_public_aggregate"]],
delivery_order_public_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["delivery_order_public_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["delivery_order_public_bool_exp"]},ValueTypes["delivery_order_public"]],
delivery_order_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["delivery_order_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["delivery_order_bool_exp"]},ValueTypes["delivery_order"]],
mez_admin?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["mez_admin_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["mez_admin_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["mez_admin_bool_exp"]},ValueTypes["mez_admin"]],
mez_admin_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["mez_admin_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["mez_admin_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["mez_admin_bool_exp"]},ValueTypes["mez_admin_aggregate"]],
mez_admin_by_pk?: [{	user_id:number},ValueTypes["mez_admin"]],
mez_admin_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["mez_admin_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["mez_admin_bool_exp"]},ValueTypes["mez_admin"]],
notification_info?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["notification_info_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["notification_info_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["notification_info_bool_exp"]},ValueTypes["notification_info"]],
notification_info_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["notification_info_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["notification_info_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["notification_info_bool_exp"]},ValueTypes["notification_info_aggregate"]],
notification_info_by_pk?: [{	id:number},ValueTypes["notification_info"]],
notification_info_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["notification_info_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["notification_info_bool_exp"]},ValueTypes["notification_info"]],
restaurant?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_bool_exp"]},ValueTypes["restaurant"]],
restaurant_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_bool_exp"]},ValueTypes["restaurant_aggregate"]],
restaurant_by_pk?: [{	id:number},ValueTypes["restaurant"]],
restaurant_cart?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_cart_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_cart_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_cart_bool_exp"]},ValueTypes["restaurant_cart"]],
restaurant_cart_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_cart_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_cart_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_cart_bool_exp"]},ValueTypes["restaurant_cart_aggregate"]],
restaurant_cart_by_pk?: [{	customer_id:number},ValueTypes["restaurant_cart"]],
restaurant_cart_item?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_cart_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_cart_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_cart_item_bool_exp"]},ValueTypes["restaurant_cart_item"]],
restaurant_cart_item_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_cart_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_cart_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_cart_item_bool_exp"]},ValueTypes["restaurant_cart_item_aggregate"]],
restaurant_cart_item_by_pk?: [{	id:number},ValueTypes["restaurant_cart_item"]],
restaurant_cart_item_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_cart_item_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_cart_item_bool_exp"]},ValueTypes["restaurant_cart_item"]],
restaurant_cart_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_cart_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_cart_bool_exp"]},ValueTypes["restaurant_cart"]],
restaurant_category?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_category_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_category_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_category_bool_exp"]},ValueTypes["restaurant_category"]],
restaurant_category_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_category_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_category_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_category_bool_exp"]},ValueTypes["restaurant_category_aggregate"]],
restaurant_category_by_pk?: [{	id:number},ValueTypes["restaurant_category"]],
restaurant_category_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_category_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_category_bool_exp"]},ValueTypes["restaurant_category"]],
restaurant_choice?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_choice_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_choice_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_choice_bool_exp"]},ValueTypes["restaurant_choice"]],
restaurant_choice_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_choice_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_choice_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_choice_bool_exp"]},ValueTypes["restaurant_choice_aggregate"]],
restaurant_choice_by_pk?: [{	id:number},ValueTypes["restaurant_choice"]],
restaurant_choice_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_choice_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_choice_bool_exp"]},ValueTypes["restaurant_choice"]],
restaurant_item?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_bool_exp"]},ValueTypes["restaurant_item"]],
restaurant_item_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_bool_exp"]},ValueTypes["restaurant_item_aggregate"]],
restaurant_item_by_pk?: [{	id:number},ValueTypes["restaurant_item"]],
restaurant_item_option_map?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_option_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_option_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_option_map_bool_exp"]},ValueTypes["restaurant_item_option_map"]],
restaurant_item_option_map_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_item_option_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_item_option_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_option_map_bool_exp"]},ValueTypes["restaurant_item_option_map_aggregate"]],
restaurant_item_option_map_by_pk?: [{	id:number},ValueTypes["restaurant_item_option_map"]],
restaurant_item_option_map_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_item_option_map_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_option_map_bool_exp"]},ValueTypes["restaurant_item_option_map"]],
restaurant_item_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_item_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_item_bool_exp"]},ValueTypes["restaurant_item"]],
restaurant_operator?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_operator_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_operator_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_operator_bool_exp"]},ValueTypes["restaurant_operator"]],
restaurant_operator_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_operator_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_operator_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_operator_bool_exp"]},ValueTypes["restaurant_operator_aggregate"]],
restaurant_operator_by_pk?: [{	id:number},ValueTypes["restaurant_operator"]],
restaurant_operator_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_operator_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_operator_bool_exp"]},ValueTypes["restaurant_operator"]],
restaurant_option?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_bool_exp"]},ValueTypes["restaurant_option"]],
restaurant_option_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_bool_exp"]},ValueTypes["restaurant_option_aggregate"]],
restaurant_option_by_pk?: [{	id:number},ValueTypes["restaurant_option"]],
restaurant_option_choice_map?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_choice_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_choice_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_choice_map_bool_exp"]},ValueTypes["restaurant_option_choice_map"]],
restaurant_option_choice_map_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_option_choice_map_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_option_choice_map_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_choice_map_bool_exp"]},ValueTypes["restaurant_option_choice_map_aggregate"]],
restaurant_option_choice_map_by_pk?: [{	id:number},ValueTypes["restaurant_option_choice_map"]],
restaurant_option_choice_map_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_option_choice_map_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_choice_map_bool_exp"]},ValueTypes["restaurant_option_choice_map"]],
restaurant_option_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_option_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_option_bool_exp"]},ValueTypes["restaurant_option"]],
restaurant_order?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_bool_exp"]},ValueTypes["restaurant_order"]],
restaurant_order_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_bool_exp"]},ValueTypes["restaurant_order_aggregate"]],
restaurant_order_by_pk?: [{	id:number},ValueTypes["restaurant_order"]],
restaurant_order_item?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_item_bool_exp"]},ValueTypes["restaurant_order_item"]],
restaurant_order_item_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_item_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_item_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_item_bool_exp"]},ValueTypes["restaurant_order_item_aggregate"]],
restaurant_order_item_by_pk?: [{	id:number},ValueTypes["restaurant_order_item"]],
restaurant_order_item_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_order_item_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_item_bool_exp"]},ValueTypes["restaurant_order_item"]],
restaurant_order_public?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_public_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_public_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_public_bool_exp"]},ValueTypes["restaurant_order_public"]],
restaurant_order_public_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["restaurant_order_public_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["restaurant_order_public_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_public_bool_exp"]},ValueTypes["restaurant_order_public_aggregate"]],
restaurant_order_public_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_order_public_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_public_bool_exp"]},ValueTypes["restaurant_order_public"]],
restaurant_order_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_order_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_order_bool_exp"]},ValueTypes["restaurant_order"]],
restaurant_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["restaurant_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["restaurant_bool_exp"]},ValueTypes["restaurant"]],
review?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["review_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["review_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["review_bool_exp"]},ValueTypes["review"]],
review_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["review_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["review_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["review_bool_exp"]},ValueTypes["review_aggregate"]],
review_by_pk?: [{	id:number},ValueTypes["review"]],
review_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["review_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["review_bool_exp"]},ValueTypes["review"]],
saved_location?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["saved_location_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["saved_location_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["saved_location_bool_exp"]},ValueTypes["saved_location"]],
saved_location_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["saved_location_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["saved_location_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["saved_location_bool_exp"]},ValueTypes["saved_location_aggregate"]],
saved_location_by_pk?: [{	id:number},ValueTypes["saved_location"]],
saved_location_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["saved_location_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["saved_location_bool_exp"]},ValueTypes["saved_location"]],
service_provider_payment_info?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["service_provider_payment_info_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["service_provider_payment_info_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["service_provider_payment_info_bool_exp"]},ValueTypes["service_provider_payment_info"]],
service_provider_payment_info_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["service_provider_payment_info_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["service_provider_payment_info_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["service_provider_payment_info_bool_exp"]},ValueTypes["service_provider_payment_info_aggregate"]],
service_provider_payment_info_by_pk?: [{	id:number},ValueTypes["service_provider_payment_info"]],
service_provider_payment_info_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["service_provider_payment_info_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["service_provider_payment_info_bool_exp"]},ValueTypes["service_provider_payment_info"]],
stripe_info?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["stripe_info_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["stripe_info_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["stripe_info_bool_exp"]},ValueTypes["stripe_info"]],
stripe_info_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["stripe_info_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["stripe_info_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["stripe_info_bool_exp"]},ValueTypes["stripe_info_aggregate"]],
stripe_info_by_pk?: [{	id:number},ValueTypes["stripe_info"]],
stripe_info_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["stripe_info_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["stripe_info_bool_exp"]},ValueTypes["stripe_info"]],
topology_app_type?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["topology_app_type_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["topology_app_type_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["topology_app_type_bool_exp"]},ValueTypes["topology_app_type"]],
topology_app_type_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["topology_app_type_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["topology_app_type_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["topology_app_type_bool_exp"]},ValueTypes["topology_app_type_aggregate"]],
topology_app_type_by_pk?: [{	/** customer, delivery, restaurant, admin */
	id:string},ValueTypes["topology_app_type"]],
topology_app_type_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["topology_app_type_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["topology_app_type_bool_exp"]},ValueTypes["topology_app_type"]],
topology_language?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["topology_language_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["topology_language_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["topology_language_bool_exp"]},ValueTypes["topology_language"]],
topology_language_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["topology_language_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["topology_language_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["topology_language_bool_exp"]},ValueTypes["topology_language_aggregate"]],
topology_language_by_pk?: [{	id:string},ValueTypes["topology_language"]],
topology_language_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["topology_language_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["topology_language_bool_exp"]},ValueTypes["topology_language"]],
translation?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["translation_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["translation_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["translation_bool_exp"]},ValueTypes["translation"]],
translation_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["translation_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["translation_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["translation_bool_exp"]},ValueTypes["translation_aggregate"]],
translation_by_pk?: [{	id:number},ValueTypes["translation"]],
translation_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["translation_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["translation_bool_exp"]},ValueTypes["translation"]],
translation_value?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["translation_value_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["translation_value_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["translation_value_bool_exp"]},ValueTypes["translation_value"]],
translation_value_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["translation_value_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["translation_value_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["translation_value_bool_exp"]},ValueTypes["translation_value_aggregate"]],
translation_value_by_pk?: [{	language_id:string,	translation_id:number},ValueTypes["translation_value"]],
translation_value_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["translation_value_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["translation_value_bool_exp"]},ValueTypes["translation_value"]],
user?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["user_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["user_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["user_bool_exp"]},ValueTypes["user"]],
user_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["user_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["user_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["user_bool_exp"]},ValueTypes["user_aggregate"]],
user_by_pk?: [{	id:number},ValueTypes["user"]],
user_stream?: [{	/** maximum number of rows returned in a single batch */
	batch_size:number,	/** cursor to stream the results returned by the query */
	cursor?:ValueTypes["user_stream_cursor_input"][],	/** filter the rows returned */
	where?:ValueTypes["user_bool_exp"]},ValueTypes["user"]],
		__typename?: true
}>;
	["timestamptz"]:unknown;
	/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
["timestamptz_comparison_exp"]: {
	_eq?:ValueTypes["timestamptz"],
	_gt?:ValueTypes["timestamptz"],
	_gte?:ValueTypes["timestamptz"],
	_in?:ValueTypes["timestamptz"][],
	_is_null?:boolean,
	_lt?:ValueTypes["timestamptz"],
	_lte?:ValueTypes["timestamptz"],
	_neq?:ValueTypes["timestamptz"],
	_nin?:ValueTypes["timestamptz"][]
};
	/** columns and relationships of "topology.app_type" */
["topology_app_type"]: AliasType<{
	/** customer, delivery, restaurant, admin */
	id?:true,
		__typename?: true
}>;
	/** aggregated selection of "topology.app_type" */
["topology_app_type_aggregate"]: AliasType<{
	aggregate?:ValueTypes["topology_app_type_aggregate_fields"],
	nodes?:ValueTypes["topology_app_type"],
		__typename?: true
}>;
	/** aggregate fields of "topology.app_type" */
["topology_app_type_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["topology_app_type_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["topology_app_type_max_fields"],
	min?:ValueTypes["topology_app_type_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "topology.app_type". All fields are combined with a logical 'AND'. */
["topology_app_type_bool_exp"]: {
	_and?:ValueTypes["topology_app_type_bool_exp"][],
	_not?:ValueTypes["topology_app_type_bool_exp"],
	_or?:ValueTypes["topology_app_type_bool_exp"][],
	id?:ValueTypes["String_comparison_exp"]
};
	/** unique or primary key constraints on table "topology.app_type" */
["topology_app_type_constraint"]:topology_app_type_constraint;
	/** input type for inserting data into table "topology.app_type" */
["topology_app_type_insert_input"]: {
	/** customer, delivery, restaurant, admin */
	id?:string
};
	/** aggregate max on columns */
["topology_app_type_max_fields"]: AliasType<{
	/** customer, delivery, restaurant, admin */
	id?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["topology_app_type_min_fields"]: AliasType<{
	/** customer, delivery, restaurant, admin */
	id?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "topology.app_type" */
["topology_app_type_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["topology_app_type"],
		__typename?: true
}>;
	/** on_conflict condition type for table "topology.app_type" */
["topology_app_type_on_conflict"]: {
	constraint:ValueTypes["topology_app_type_constraint"],
	update_columns:ValueTypes["topology_app_type_update_column"][],
	where?:ValueTypes["topology_app_type_bool_exp"]
};
	/** Ordering options when selecting data from "topology.app_type". */
["topology_app_type_order_by"]: {
	id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: topology_app_type */
["topology_app_type_pk_columns_input"]: {
	/** customer, delivery, restaurant, admin */
	id:string
};
	/** select columns of table "topology.app_type" */
["topology_app_type_select_column"]:topology_app_type_select_column;
	/** input type for updating data in table "topology.app_type" */
["topology_app_type_set_input"]: {
	/** customer, delivery, restaurant, admin */
	id?:string
};
	/** Streaming cursor of the table "topology_app_type" */
["topology_app_type_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["topology_app_type_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["topology_app_type_stream_cursor_value_input"]: {
	/** customer, delivery, restaurant, admin */
	id?:string
};
	/** update columns of table "topology.app_type" */
["topology_app_type_update_column"]:topology_app_type_update_column;
	["topology_app_type_updates"]: {
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["topology_app_type_set_input"],
	where:ValueTypes["topology_app_type_bool_exp"]
};
	/** columns and relationships of "topology.language" */
["topology_language"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregated selection of "topology.language" */
["topology_language_aggregate"]: AliasType<{
	aggregate?:ValueTypes["topology_language_aggregate_fields"],
	nodes?:ValueTypes["topology_language"],
		__typename?: true
}>;
	/** aggregate fields of "topology.language" */
["topology_language_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["topology_language_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["topology_language_max_fields"],
	min?:ValueTypes["topology_language_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "topology.language". All fields are combined with a logical 'AND'. */
["topology_language_bool_exp"]: {
	_and?:ValueTypes["topology_language_bool_exp"][],
	_not?:ValueTypes["topology_language_bool_exp"],
	_or?:ValueTypes["topology_language_bool_exp"][],
	id?:ValueTypes["String_comparison_exp"]
};
	/** unique or primary key constraints on table "topology.language" */
["topology_language_constraint"]:topology_language_constraint;
	/** input type for inserting data into table "topology.language" */
["topology_language_insert_input"]: {
	id?:string
};
	/** aggregate max on columns */
["topology_language_max_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["topology_language_min_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "topology.language" */
["topology_language_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["topology_language"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "topology.language" */
["topology_language_obj_rel_insert_input"]: {
	data:ValueTypes["topology_language_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["topology_language_on_conflict"]
};
	/** on_conflict condition type for table "topology.language" */
["topology_language_on_conflict"]: {
	constraint:ValueTypes["topology_language_constraint"],
	update_columns:ValueTypes["topology_language_update_column"][],
	where?:ValueTypes["topology_language_bool_exp"]
};
	/** Ordering options when selecting data from "topology.language". */
["topology_language_order_by"]: {
	id?:ValueTypes["order_by"]
};
	/** primary key columns input for table: topology_language */
["topology_language_pk_columns_input"]: {
	id:string
};
	/** select columns of table "topology.language" */
["topology_language_select_column"]:topology_language_select_column;
	/** input type for updating data in table "topology.language" */
["topology_language_set_input"]: {
	id?:string
};
	/** Streaming cursor of the table "topology_language" */
["topology_language_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["topology_language_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["topology_language_stream_cursor_value_input"]: {
	id?:string
};
	/** update columns of table "topology.language" */
["topology_language_update_column"]:topology_language_update_column;
	["topology_language_updates"]: {
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["topology_language_set_input"],
	where:ValueTypes["topology_language_bool_exp"]
};
	/** columns and relationships of "translation" */
["translation"]: AliasType<{
	id?:true,
	/** An object relationship */
	restaurant?:ValueTypes["restaurant"],
	service_provider_id?:true,
	service_provider_type?:true,
translations?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["translation_value_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["translation_value_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["translation_value_bool_exp"]},ValueTypes["translation_value"]],
translations_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["translation_value_select_column"][],	/** limit the number of rows returned */
	limit?:number,	/** skip the first n rows. Use only with order_by */
	offset?:number,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["translation_value_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["translation_value_bool_exp"]},ValueTypes["translation_value_aggregate"]],
		__typename?: true
}>;
	/** aggregated selection of "translation" */
["translation_aggregate"]: AliasType<{
	aggregate?:ValueTypes["translation_aggregate_fields"],
	nodes?:ValueTypes["translation"],
		__typename?: true
}>;
	/** aggregate fields of "translation" */
["translation_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["translation_avg_fields"],
count?: [{	columns?:ValueTypes["translation_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["translation_max_fields"],
	min?:ValueTypes["translation_min_fields"],
	stddev?:ValueTypes["translation_stddev_fields"],
	stddev_pop?:ValueTypes["translation_stddev_pop_fields"],
	stddev_samp?:ValueTypes["translation_stddev_samp_fields"],
	sum?:ValueTypes["translation_sum_fields"],
	var_pop?:ValueTypes["translation_var_pop_fields"],
	var_samp?:ValueTypes["translation_var_samp_fields"],
	variance?:ValueTypes["translation_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["translation_avg_fields"]: AliasType<{
	id?:true,
	service_provider_id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "translation". All fields are combined with a logical 'AND'. */
["translation_bool_exp"]: {
	_and?:ValueTypes["translation_bool_exp"][],
	_not?:ValueTypes["translation_bool_exp"],
	_or?:ValueTypes["translation_bool_exp"][],
	id?:ValueTypes["Int_comparison_exp"],
	restaurant?:ValueTypes["restaurant_bool_exp"],
	service_provider_id?:ValueTypes["Int_comparison_exp"],
	service_provider_type?:ValueTypes["String_comparison_exp"],
	translations?:ValueTypes["translation_value_bool_exp"]
};
	/** unique or primary key constraints on table "translation" */
["translation_constraint"]:translation_constraint;
	/** input type for incrementing numeric columns in table "translation" */
["translation_inc_input"]: {
	id?:number,
	service_provider_id?:number
};
	/** input type for inserting data into table "translation" */
["translation_insert_input"]: {
	id?:number,
	restaurant?:ValueTypes["restaurant_obj_rel_insert_input"],
	service_provider_id?:number,
	service_provider_type?:string,
	translations?:ValueTypes["translation_value_arr_rel_insert_input"]
};
	/** aggregate max on columns */
["translation_max_fields"]: AliasType<{
	id?:true,
	service_provider_id?:true,
	service_provider_type?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["translation_min_fields"]: AliasType<{
	id?:true,
	service_provider_id?:true,
	service_provider_type?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "translation" */
["translation_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["translation"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "translation" */
["translation_obj_rel_insert_input"]: {
	data:ValueTypes["translation_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["translation_on_conflict"]
};
	/** on_conflict condition type for table "translation" */
["translation_on_conflict"]: {
	constraint:ValueTypes["translation_constraint"],
	update_columns:ValueTypes["translation_update_column"][],
	where?:ValueTypes["translation_bool_exp"]
};
	/** Ordering options when selecting data from "translation". */
["translation_order_by"]: {
	id?:ValueTypes["order_by"],
	restaurant?:ValueTypes["restaurant_order_by"],
	service_provider_id?:ValueTypes["order_by"],
	service_provider_type?:ValueTypes["order_by"],
	translations_aggregate?:ValueTypes["translation_value_aggregate_order_by"]
};
	/** primary key columns input for table: translation */
["translation_pk_columns_input"]: {
	id:number
};
	/** select columns of table "translation" */
["translation_select_column"]:translation_select_column;
	/** input type for updating data in table "translation" */
["translation_set_input"]: {
	id?:number,
	service_provider_id?:number,
	service_provider_type?:string
};
	/** aggregate stddev on columns */
["translation_stddev_fields"]: AliasType<{
	id?:true,
	service_provider_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["translation_stddev_pop_fields"]: AliasType<{
	id?:true,
	service_provider_id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["translation_stddev_samp_fields"]: AliasType<{
	id?:true,
	service_provider_id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "translation" */
["translation_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["translation_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["translation_stream_cursor_value_input"]: {
	id?:number,
	service_provider_id?:number,
	service_provider_type?:string
};
	/** aggregate sum on columns */
["translation_sum_fields"]: AliasType<{
	id?:true,
	service_provider_id?:true,
		__typename?: true
}>;
	/** update columns of table "translation" */
["translation_update_column"]:translation_update_column;
	["translation_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["translation_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["translation_set_input"],
	where:ValueTypes["translation_bool_exp"]
};
	/** columns and relationships of "translation_value" */
["translation_value"]: AliasType<{
	/** An object relationship */
	language?:ValueTypes["topology_language"],
	language_id?:true,
	/** An object relationship */
	translation_group?:ValueTypes["translation"],
	translation_id?:true,
	value?:true,
		__typename?: true
}>;
	/** aggregated selection of "translation_value" */
["translation_value_aggregate"]: AliasType<{
	aggregate?:ValueTypes["translation_value_aggregate_fields"],
	nodes?:ValueTypes["translation_value"],
		__typename?: true
}>;
	/** aggregate fields of "translation_value" */
["translation_value_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["translation_value_avg_fields"],
count?: [{	columns?:ValueTypes["translation_value_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["translation_value_max_fields"],
	min?:ValueTypes["translation_value_min_fields"],
	stddev?:ValueTypes["translation_value_stddev_fields"],
	stddev_pop?:ValueTypes["translation_value_stddev_pop_fields"],
	stddev_samp?:ValueTypes["translation_value_stddev_samp_fields"],
	sum?:ValueTypes["translation_value_sum_fields"],
	var_pop?:ValueTypes["translation_value_var_pop_fields"],
	var_samp?:ValueTypes["translation_value_var_samp_fields"],
	variance?:ValueTypes["translation_value_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "translation_value" */
["translation_value_aggregate_order_by"]: {
	avg?:ValueTypes["translation_value_avg_order_by"],
	count?:ValueTypes["order_by"],
	max?:ValueTypes["translation_value_max_order_by"],
	min?:ValueTypes["translation_value_min_order_by"],
	stddev?:ValueTypes["translation_value_stddev_order_by"],
	stddev_pop?:ValueTypes["translation_value_stddev_pop_order_by"],
	stddev_samp?:ValueTypes["translation_value_stddev_samp_order_by"],
	sum?:ValueTypes["translation_value_sum_order_by"],
	var_pop?:ValueTypes["translation_value_var_pop_order_by"],
	var_samp?:ValueTypes["translation_value_var_samp_order_by"],
	variance?:ValueTypes["translation_value_variance_order_by"]
};
	/** input type for inserting array relation for remote table "translation_value" */
["translation_value_arr_rel_insert_input"]: {
	data:ValueTypes["translation_value_insert_input"][],
	/** upsert condition */
	on_conflict?:ValueTypes["translation_value_on_conflict"]
};
	/** aggregate avg on columns */
["translation_value_avg_fields"]: AliasType<{
	translation_id?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "translation_value" */
["translation_value_avg_order_by"]: {
	translation_id?:ValueTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "translation_value". All fields are combined with a logical 'AND'. */
["translation_value_bool_exp"]: {
	_and?:ValueTypes["translation_value_bool_exp"][],
	_not?:ValueTypes["translation_value_bool_exp"],
	_or?:ValueTypes["translation_value_bool_exp"][],
	language?:ValueTypes["topology_language_bool_exp"],
	language_id?:ValueTypes["String_comparison_exp"],
	translation_group?:ValueTypes["translation_bool_exp"],
	translation_id?:ValueTypes["Int_comparison_exp"],
	value?:ValueTypes["String_comparison_exp"]
};
	/** unique or primary key constraints on table "translation_value" */
["translation_value_constraint"]:translation_value_constraint;
	/** input type for incrementing numeric columns in table "translation_value" */
["translation_value_inc_input"]: {
	translation_id?:number
};
	/** input type for inserting data into table "translation_value" */
["translation_value_insert_input"]: {
	language?:ValueTypes["topology_language_obj_rel_insert_input"],
	language_id?:string,
	translation_group?:ValueTypes["translation_obj_rel_insert_input"],
	translation_id?:number,
	value?:string
};
	/** aggregate max on columns */
["translation_value_max_fields"]: AliasType<{
	language_id?:true,
	translation_id?:true,
	value?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "translation_value" */
["translation_value_max_order_by"]: {
	language_id?:ValueTypes["order_by"],
	translation_id?:ValueTypes["order_by"],
	value?:ValueTypes["order_by"]
};
	/** aggregate min on columns */
["translation_value_min_fields"]: AliasType<{
	language_id?:true,
	translation_id?:true,
	value?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "translation_value" */
["translation_value_min_order_by"]: {
	language_id?:ValueTypes["order_by"],
	translation_id?:ValueTypes["order_by"],
	value?:ValueTypes["order_by"]
};
	/** response of any mutation on the table "translation_value" */
["translation_value_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["translation_value"],
		__typename?: true
}>;
	/** on_conflict condition type for table "translation_value" */
["translation_value_on_conflict"]: {
	constraint:ValueTypes["translation_value_constraint"],
	update_columns:ValueTypes["translation_value_update_column"][],
	where?:ValueTypes["translation_value_bool_exp"]
};
	/** Ordering options when selecting data from "translation_value". */
["translation_value_order_by"]: {
	language?:ValueTypes["topology_language_order_by"],
	language_id?:ValueTypes["order_by"],
	translation_group?:ValueTypes["translation_order_by"],
	translation_id?:ValueTypes["order_by"],
	value?:ValueTypes["order_by"]
};
	/** primary key columns input for table: translation_value */
["translation_value_pk_columns_input"]: {
	language_id:string,
	translation_id:number
};
	/** select columns of table "translation_value" */
["translation_value_select_column"]:translation_value_select_column;
	/** input type for updating data in table "translation_value" */
["translation_value_set_input"]: {
	language_id?:string,
	translation_id?:number,
	value?:string
};
	/** aggregate stddev on columns */
["translation_value_stddev_fields"]: AliasType<{
	translation_id?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "translation_value" */
["translation_value_stddev_order_by"]: {
	translation_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["translation_value_stddev_pop_fields"]: AliasType<{
	translation_id?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "translation_value" */
["translation_value_stddev_pop_order_by"]: {
	translation_id?:ValueTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["translation_value_stddev_samp_fields"]: AliasType<{
	translation_id?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "translation_value" */
["translation_value_stddev_samp_order_by"]: {
	translation_id?:ValueTypes["order_by"]
};
	/** Streaming cursor of the table "translation_value" */
["translation_value_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["translation_value_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["translation_value_stream_cursor_value_input"]: {
	language_id?:string,
	translation_id?:number,
	value?:string
};
	/** aggregate sum on columns */
["translation_value_sum_fields"]: AliasType<{
	translation_id?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "translation_value" */
["translation_value_sum_order_by"]: {
	translation_id?:ValueTypes["order_by"]
};
	/** update columns of table "translation_value" */
["translation_value_update_column"]:translation_value_update_column;
	["translation_value_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["translation_value_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["translation_value_set_input"],
	where:ValueTypes["translation_value_bool_exp"]
};
	/** aggregate var_pop on columns */
["translation_value_var_pop_fields"]: AliasType<{
	translation_id?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "translation_value" */
["translation_value_var_pop_order_by"]: {
	translation_id?:ValueTypes["order_by"]
};
	/** aggregate var_samp on columns */
["translation_value_var_samp_fields"]: AliasType<{
	translation_id?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "translation_value" */
["translation_value_var_samp_order_by"]: {
	translation_id?:ValueTypes["order_by"]
};
	/** aggregate variance on columns */
["translation_value_variance_fields"]: AliasType<{
	translation_id?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "translation_value" */
["translation_value_variance_order_by"]: {
	translation_id?:ValueTypes["order_by"]
};
	/** aggregate var_pop on columns */
["translation_var_pop_fields"]: AliasType<{
	id?:true,
	service_provider_id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["translation_var_samp_fields"]: AliasType<{
	id?:true,
	service_provider_id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["translation_variance_fields"]: AliasType<{
	id?:true,
	service_provider_id?:true,
		__typename?: true
}>;
	/** columns and relationships of "user" */
["user"]: AliasType<{
	deleted?:true,
	email?:true,
	firebase_id?:true,
	id?:true,
	image?:true,
	language_id?:true,
	name?:true,
	phone?:true,
		__typename?: true
}>;
	/** aggregated selection of "user" */
["user_aggregate"]: AliasType<{
	aggregate?:ValueTypes["user_aggregate_fields"],
	nodes?:ValueTypes["user"],
		__typename?: true
}>;
	/** aggregate fields of "user" */
["user_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["user_avg_fields"],
count?: [{	columns?:ValueTypes["user_select_column"][],	distinct?:boolean},true],
	max?:ValueTypes["user_max_fields"],
	min?:ValueTypes["user_min_fields"],
	stddev?:ValueTypes["user_stddev_fields"],
	stddev_pop?:ValueTypes["user_stddev_pop_fields"],
	stddev_samp?:ValueTypes["user_stddev_samp_fields"],
	sum?:ValueTypes["user_sum_fields"],
	var_pop?:ValueTypes["user_var_pop_fields"],
	var_samp?:ValueTypes["user_var_samp_fields"],
	variance?:ValueTypes["user_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["user_avg_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "user". All fields are combined with a logical 'AND'. */
["user_bool_exp"]: {
	_and?:ValueTypes["user_bool_exp"][],
	_not?:ValueTypes["user_bool_exp"],
	_or?:ValueTypes["user_bool_exp"][],
	deleted?:ValueTypes["Boolean_comparison_exp"],
	email?:ValueTypes["String_comparison_exp"],
	firebase_id?:ValueTypes["String_comparison_exp"],
	id?:ValueTypes["Int_comparison_exp"],
	image?:ValueTypes["String_comparison_exp"],
	language_id?:ValueTypes["String_comparison_exp"],
	name?:ValueTypes["String_comparison_exp"],
	phone?:ValueTypes["String_comparison_exp"]
};
	/** unique or primary key constraints on table "user" */
["user_constraint"]:user_constraint;
	/** input type for incrementing numeric columns in table "user" */
["user_inc_input"]: {
	id?:number
};
	/** input type for inserting data into table "user" */
["user_insert_input"]: {
	deleted?:boolean,
	email?:string,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	name?:string,
	phone?:string
};
	/** aggregate max on columns */
["user_max_fields"]: AliasType<{
	email?:true,
	firebase_id?:true,
	id?:true,
	image?:true,
	language_id?:true,
	name?:true,
	phone?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["user_min_fields"]: AliasType<{
	email?:true,
	firebase_id?:true,
	id?:true,
	image?:true,
	language_id?:true,
	name?:true,
	phone?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "user" */
["user_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["user"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "user" */
["user_obj_rel_insert_input"]: {
	data:ValueTypes["user_insert_input"],
	/** upsert condition */
	on_conflict?:ValueTypes["user_on_conflict"]
};
	/** on_conflict condition type for table "user" */
["user_on_conflict"]: {
	constraint:ValueTypes["user_constraint"],
	update_columns:ValueTypes["user_update_column"][],
	where?:ValueTypes["user_bool_exp"]
};
	/** Ordering options when selecting data from "user". */
["user_order_by"]: {
	deleted?:ValueTypes["order_by"],
	email?:ValueTypes["order_by"],
	firebase_id?:ValueTypes["order_by"],
	id?:ValueTypes["order_by"],
	image?:ValueTypes["order_by"],
	language_id?:ValueTypes["order_by"],
	name?:ValueTypes["order_by"],
	phone?:ValueTypes["order_by"]
};
	/** primary key columns input for table: user */
["user_pk_columns_input"]: {
	id:number
};
	/** select columns of table "user" */
["user_select_column"]:user_select_column;
	/** input type for updating data in table "user" */
["user_set_input"]: {
	deleted?:boolean,
	email?:string,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	name?:string,
	phone?:string
};
	/** aggregate stddev on columns */
["user_stddev_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["user_stddev_pop_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["user_stddev_samp_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** Streaming cursor of the table "user" */
["user_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:ValueTypes["user_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:ValueTypes["cursor_ordering"]
};
	/** Initial value of the column from where the streaming should start */
["user_stream_cursor_value_input"]: {
	deleted?:boolean,
	email?:string,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	name?:string,
	phone?:string
};
	/** aggregate sum on columns */
["user_sum_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** update columns of table "user" */
["user_update_column"]:user_update_column;
	["user_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["user_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["user_set_input"],
	where:ValueTypes["user_bool_exp"]
};
	/** aggregate var_pop on columns */
["user_var_pop_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["user_var_samp_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["user_variance_fields"]: AliasType<{
	id?:true,
		__typename?: true
}>
  }

export type PartialObjects = {
    /** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
["Boolean_comparison_exp"]: {
	_eq?:boolean,
	_gt?:boolean,
	_gte?:boolean,
	_in?:boolean[],
	_is_null?:boolean,
	_lt?:boolean,
	_lte?:boolean,
	_neq?:boolean,
	_nin?:boolean[]
},
	/** columns and relationships of "chat" */
["chat"]: {
		__typename?: "chat";
			chat_info?:PartialObjects["jsonb"],
			/** An array relationship */
	chat_participants?:PartialObjects["chat_participant"][],
			/** An aggregate relationship */
	chat_participants_aggregate?:PartialObjects["chat_participant_aggregate"],
			creation_time?:PartialObjects["timestamptz"],
			id?:number,
			messages?:PartialObjects["jsonb"]
	},
	/** aggregated selection of "chat" */
["chat_aggregate"]: {
		__typename?: "chat_aggregate";
			aggregate?:PartialObjects["chat_aggregate_fields"],
			nodes?:PartialObjects["chat"][]
	},
	/** aggregate fields of "chat" */
["chat_aggregate_fields"]: {
		__typename?: "chat_aggregate_fields";
			avg?:PartialObjects["chat_avg_fields"],
			count?:number,
			max?:PartialObjects["chat_max_fields"],
			min?:PartialObjects["chat_min_fields"],
			stddev?:PartialObjects["chat_stddev_fields"],
			stddev_pop?:PartialObjects["chat_stddev_pop_fields"],
			stddev_samp?:PartialObjects["chat_stddev_samp_fields"],
			sum?:PartialObjects["chat_sum_fields"],
			var_pop?:PartialObjects["chat_var_pop_fields"],
			var_samp?:PartialObjects["chat_var_samp_fields"],
			variance?:PartialObjects["chat_variance_fields"]
	},
	/** append existing jsonb value of filtered columns with new jsonb value */
["chat_append_input"]: {
	chat_info?:PartialObjects["jsonb"],
	messages?:PartialObjects["jsonb"]
},
	/** aggregate avg on columns */
["chat_avg_fields"]: {
		__typename?: "chat_avg_fields";
			id?:number
	},
	/** Boolean expression to filter rows from the table "chat". All fields are combined with a logical 'AND'. */
["chat_bool_exp"]: {
	_and?:PartialObjects["chat_bool_exp"][],
	_not?:PartialObjects["chat_bool_exp"],
	_or?:PartialObjects["chat_bool_exp"][],
	chat_info?:PartialObjects["jsonb_comparison_exp"],
	chat_participants?:PartialObjects["chat_participant_bool_exp"],
	creation_time?:PartialObjects["timestamptz_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	messages?:PartialObjects["jsonb_comparison_exp"]
},
	/** unique or primary key constraints on table "chat" */
["chat_constraint"]:chat_constraint,
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["chat_delete_at_path_input"]: {
	chat_info?:string[],
	messages?:string[]
},
	/** delete the array element with specified index (negative integers count from the
end). throws an error if top level container is not an array */
["chat_delete_elem_input"]: {
	chat_info?:number,
	messages?:number
},
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["chat_delete_key_input"]: {
	chat_info?:string,
	messages?:string
},
	/** input type for incrementing numeric columns in table "chat" */
["chat_inc_input"]: {
	id?:number
},
	/** input type for inserting data into table "chat" */
["chat_insert_input"]: {
	chat_info?:PartialObjects["jsonb"],
	chat_participants?:PartialObjects["chat_participant_arr_rel_insert_input"],
	creation_time?:PartialObjects["timestamptz"],
	id?:number,
	messages?:PartialObjects["jsonb"]
},
	/** aggregate max on columns */
["chat_max_fields"]: {
		__typename?: "chat_max_fields";
			creation_time?:PartialObjects["timestamptz"],
			id?:number
	},
	/** aggregate min on columns */
["chat_min_fields"]: {
		__typename?: "chat_min_fields";
			creation_time?:PartialObjects["timestamptz"],
			id?:number
	},
	/** response of any mutation on the table "chat" */
["chat_mutation_response"]: {
		__typename?: "chat_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["chat"][]
	},
	/** input type for inserting object relation for remote table "chat" */
["chat_obj_rel_insert_input"]: {
	data:PartialObjects["chat_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["chat_on_conflict"]
},
	/** on_conflict condition type for table "chat" */
["chat_on_conflict"]: {
	constraint:PartialObjects["chat_constraint"],
	update_columns:PartialObjects["chat_update_column"][],
	where?:PartialObjects["chat_bool_exp"]
},
	/** Ordering options when selecting data from "chat". */
["chat_order_by"]: {
	chat_info?:PartialObjects["order_by"],
	chat_participants_aggregate?:PartialObjects["chat_participant_aggregate_order_by"],
	creation_time?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	messages?:PartialObjects["order_by"]
},
	/** columns and relationships of "chat_participant" */
["chat_participant"]: {
		__typename?: "chat_participant";
			app_type_id?:string,
			/** An object relationship */
	chat?:PartialObjects["chat"],
			chat_id?:number,
			id?:number,
			/** An object relationship */
	notification_info?:PartialObjects["notification_info"],
			participant_id?:number,
			/** An object relationship */
	user?:PartialObjects["user"]
	},
	/** aggregated selection of "chat_participant" */
["chat_participant_aggregate"]: {
		__typename?: "chat_participant_aggregate";
			aggregate?:PartialObjects["chat_participant_aggregate_fields"],
			nodes?:PartialObjects["chat_participant"][]
	},
	/** aggregate fields of "chat_participant" */
["chat_participant_aggregate_fields"]: {
		__typename?: "chat_participant_aggregate_fields";
			avg?:PartialObjects["chat_participant_avg_fields"],
			count?:number,
			max?:PartialObjects["chat_participant_max_fields"],
			min?:PartialObjects["chat_participant_min_fields"],
			stddev?:PartialObjects["chat_participant_stddev_fields"],
			stddev_pop?:PartialObjects["chat_participant_stddev_pop_fields"],
			stddev_samp?:PartialObjects["chat_participant_stddev_samp_fields"],
			sum?:PartialObjects["chat_participant_sum_fields"],
			var_pop?:PartialObjects["chat_participant_var_pop_fields"],
			var_samp?:PartialObjects["chat_participant_var_samp_fields"],
			variance?:PartialObjects["chat_participant_variance_fields"]
	},
	/** order by aggregate values of table "chat_participant" */
["chat_participant_aggregate_order_by"]: {
	avg?:PartialObjects["chat_participant_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["chat_participant_max_order_by"],
	min?:PartialObjects["chat_participant_min_order_by"],
	stddev?:PartialObjects["chat_participant_stddev_order_by"],
	stddev_pop?:PartialObjects["chat_participant_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["chat_participant_stddev_samp_order_by"],
	sum?:PartialObjects["chat_participant_sum_order_by"],
	var_pop?:PartialObjects["chat_participant_var_pop_order_by"],
	var_samp?:PartialObjects["chat_participant_var_samp_order_by"],
	variance?:PartialObjects["chat_participant_variance_order_by"]
},
	/** input type for inserting array relation for remote table "chat_participant" */
["chat_participant_arr_rel_insert_input"]: {
	data:PartialObjects["chat_participant_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["chat_participant_on_conflict"]
},
	/** aggregate avg on columns */
["chat_participant_avg_fields"]: {
		__typename?: "chat_participant_avg_fields";
			chat_id?:number,
			id?:number,
			participant_id?:number
	},
	/** order by avg() on columns of table "chat_participant" */
["chat_participant_avg_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	participant_id?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "chat_participant". All fields are combined with a logical 'AND'. */
["chat_participant_bool_exp"]: {
	_and?:PartialObjects["chat_participant_bool_exp"][],
	_not?:PartialObjects["chat_participant_bool_exp"],
	_or?:PartialObjects["chat_participant_bool_exp"][],
	app_type_id?:PartialObjects["String_comparison_exp"],
	chat?:PartialObjects["chat_bool_exp"],
	chat_id?:PartialObjects["Int_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	notification_info?:PartialObjects["notification_info_bool_exp"],
	participant_id?:PartialObjects["Int_comparison_exp"],
	user?:PartialObjects["user_bool_exp"]
},
	/** unique or primary key constraints on table "chat_participant" */
["chat_participant_constraint"]:chat_participant_constraint,
	/** input type for incrementing numeric columns in table "chat_participant" */
["chat_participant_inc_input"]: {
	chat_id?:number,
	id?:number,
	participant_id?:number
},
	/** input type for inserting data into table "chat_participant" */
["chat_participant_insert_input"]: {
	app_type_id?:string,
	chat?:PartialObjects["chat_obj_rel_insert_input"],
	chat_id?:number,
	id?:number,
	notification_info?:PartialObjects["notification_info_obj_rel_insert_input"],
	participant_id?:number,
	user?:PartialObjects["user_obj_rel_insert_input"]
},
	/** aggregate max on columns */
["chat_participant_max_fields"]: {
		__typename?: "chat_participant_max_fields";
			app_type_id?:string,
			chat_id?:number,
			id?:number,
			participant_id?:number
	},
	/** order by max() on columns of table "chat_participant" */
["chat_participant_max_order_by"]: {
	app_type_id?:PartialObjects["order_by"],
	chat_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	participant_id?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["chat_participant_min_fields"]: {
		__typename?: "chat_participant_min_fields";
			app_type_id?:string,
			chat_id?:number,
			id?:number,
			participant_id?:number
	},
	/** order by min() on columns of table "chat_participant" */
["chat_participant_min_order_by"]: {
	app_type_id?:PartialObjects["order_by"],
	chat_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	participant_id?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "chat_participant" */
["chat_participant_mutation_response"]: {
		__typename?: "chat_participant_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["chat_participant"][]
	},
	/** on_conflict condition type for table "chat_participant" */
["chat_participant_on_conflict"]: {
	constraint:PartialObjects["chat_participant_constraint"],
	update_columns:PartialObjects["chat_participant_update_column"][],
	where?:PartialObjects["chat_participant_bool_exp"]
},
	/** Ordering options when selecting data from "chat_participant". */
["chat_participant_order_by"]: {
	app_type_id?:PartialObjects["order_by"],
	chat?:PartialObjects["chat_order_by"],
	chat_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	notification_info?:PartialObjects["notification_info_order_by"],
	participant_id?:PartialObjects["order_by"],
	user?:PartialObjects["user_order_by"]
},
	/** primary key columns input for table: chat_participant */
["chat_participant_pk_columns_input"]: {
	id:number
},
	/** select columns of table "chat_participant" */
["chat_participant_select_column"]:chat_participant_select_column,
	/** input type for updating data in table "chat_participant" */
["chat_participant_set_input"]: {
	app_type_id?:string,
	chat_id?:number,
	id?:number,
	participant_id?:number
},
	/** aggregate stddev on columns */
["chat_participant_stddev_fields"]: {
		__typename?: "chat_participant_stddev_fields";
			chat_id?:number,
			id?:number,
			participant_id?:number
	},
	/** order by stddev() on columns of table "chat_participant" */
["chat_participant_stddev_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	participant_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["chat_participant_stddev_pop_fields"]: {
		__typename?: "chat_participant_stddev_pop_fields";
			chat_id?:number,
			id?:number,
			participant_id?:number
	},
	/** order by stddev_pop() on columns of table "chat_participant" */
["chat_participant_stddev_pop_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	participant_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["chat_participant_stddev_samp_fields"]: {
		__typename?: "chat_participant_stddev_samp_fields";
			chat_id?:number,
			id?:number,
			participant_id?:number
	},
	/** order by stddev_samp() on columns of table "chat_participant" */
["chat_participant_stddev_samp_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	participant_id?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "chat_participant" */
["chat_participant_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["chat_participant_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["chat_participant_stream_cursor_value_input"]: {
	app_type_id?:string,
	chat_id?:number,
	id?:number,
	participant_id?:number
},
	/** aggregate sum on columns */
["chat_participant_sum_fields"]: {
		__typename?: "chat_participant_sum_fields";
			chat_id?:number,
			id?:number,
			participant_id?:number
	},
	/** order by sum() on columns of table "chat_participant" */
["chat_participant_sum_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	participant_id?:PartialObjects["order_by"]
},
	/** update columns of table "chat_participant" */
["chat_participant_update_column"]:chat_participant_update_column,
	["chat_participant_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["chat_participant_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["chat_participant_set_input"],
	where:PartialObjects["chat_participant_bool_exp"]
},
	/** aggregate var_pop on columns */
["chat_participant_var_pop_fields"]: {
		__typename?: "chat_participant_var_pop_fields";
			chat_id?:number,
			id?:number,
			participant_id?:number
	},
	/** order by var_pop() on columns of table "chat_participant" */
["chat_participant_var_pop_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	participant_id?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["chat_participant_var_samp_fields"]: {
		__typename?: "chat_participant_var_samp_fields";
			chat_id?:number,
			id?:number,
			participant_id?:number
	},
	/** order by var_samp() on columns of table "chat_participant" */
["chat_participant_var_samp_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	participant_id?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["chat_participant_variance_fields"]: {
		__typename?: "chat_participant_variance_fields";
			chat_id?:number,
			id?:number,
			participant_id?:number
	},
	/** order by variance() on columns of table "chat_participant" */
["chat_participant_variance_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	participant_id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: chat */
["chat_pk_columns_input"]: {
	id:number
},
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["chat_prepend_input"]: {
	chat_info?:PartialObjects["jsonb"],
	messages?:PartialObjects["jsonb"]
},
	/** select columns of table "chat" */
["chat_select_column"]:chat_select_column,
	/** input type for updating data in table "chat" */
["chat_set_input"]: {
	chat_info?:PartialObjects["jsonb"],
	creation_time?:PartialObjects["timestamptz"],
	id?:number,
	messages?:PartialObjects["jsonb"]
},
	/** aggregate stddev on columns */
["chat_stddev_fields"]: {
		__typename?: "chat_stddev_fields";
			id?:number
	},
	/** aggregate stddev_pop on columns */
["chat_stddev_pop_fields"]: {
		__typename?: "chat_stddev_pop_fields";
			id?:number
	},
	/** aggregate stddev_samp on columns */
["chat_stddev_samp_fields"]: {
		__typename?: "chat_stddev_samp_fields";
			id?:number
	},
	/** Streaming cursor of the table "chat" */
["chat_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["chat_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["chat_stream_cursor_value_input"]: {
	chat_info?:PartialObjects["jsonb"],
	creation_time?:PartialObjects["timestamptz"],
	id?:number,
	messages?:PartialObjects["jsonb"]
},
	/** aggregate sum on columns */
["chat_sum_fields"]: {
		__typename?: "chat_sum_fields";
			id?:number
	},
	/** update columns of table "chat" */
["chat_update_column"]:chat_update_column,
	["chat_updates"]: {
	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:PartialObjects["chat_append_input"],
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:PartialObjects["chat_delete_at_path_input"],
	/** delete the array element with specified index (negative integers count from
the end). throws an error if top level container is not an array */
	_delete_elem?:PartialObjects["chat_delete_elem_input"],
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:PartialObjects["chat_delete_key_input"],
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["chat_inc_input"],
	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:PartialObjects["chat_prepend_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["chat_set_input"],
	where:PartialObjects["chat_bool_exp"]
},
	/** aggregate var_pop on columns */
["chat_var_pop_fields"]: {
		__typename?: "chat_var_pop_fields";
			id?:number
	},
	/** aggregate var_samp on columns */
["chat_var_samp_fields"]: {
		__typename?: "chat_var_samp_fields";
			id?:number
	},
	/** aggregate variance on columns */
["chat_variance_fields"]: {
		__typename?: "chat_variance_fields";
			id?:number
	},
	/** ordering argument of a cursor */
["cursor_ordering"]:cursor_ordering,
	/** columns and relationships of "customer" */
["customer"]: {
		__typename?: "customer";
			app_version?:string,
			/** An object relationship */
	cart?:PartialObjects["restaurant_cart"],
			/** An array relationship */
	deliveries?:PartialObjects["delivery_order"][],
			/** An aggregate relationship */
	deliveries_aggregate?:PartialObjects["delivery_order_aggregate"],
			/** A computed field, executes function "customer_notification_token" */
	notification_token?:string,
			/** An array relationship */
	saved_locations?:PartialObjects["saved_location"][],
			/** An aggregate relationship */
	saved_locations_aggregate?:PartialObjects["saved_location_aggregate"],
			/** An object relationship */
	user?:PartialObjects["user"],
			user_id?:number
	},
	/** aggregated selection of "customer" */
["customer_aggregate"]: {
		__typename?: "customer_aggregate";
			aggregate?:PartialObjects["customer_aggregate_fields"],
			nodes?:PartialObjects["customer"][]
	},
	/** aggregate fields of "customer" */
["customer_aggregate_fields"]: {
		__typename?: "customer_aggregate_fields";
			avg?:PartialObjects["customer_avg_fields"],
			count?:number,
			max?:PartialObjects["customer_max_fields"],
			min?:PartialObjects["customer_min_fields"],
			stddev?:PartialObjects["customer_stddev_fields"],
			stddev_pop?:PartialObjects["customer_stddev_pop_fields"],
			stddev_samp?:PartialObjects["customer_stddev_samp_fields"],
			sum?:PartialObjects["customer_sum_fields"],
			var_pop?:PartialObjects["customer_var_pop_fields"],
			var_samp?:PartialObjects["customer_var_samp_fields"],
			variance?:PartialObjects["customer_variance_fields"]
	},
	/** aggregate avg on columns */
["customer_avg_fields"]: {
		__typename?: "customer_avg_fields";
			user_id?:number
	},
	/** Boolean expression to filter rows from the table "customer". All fields are combined with a logical 'AND'. */
["customer_bool_exp"]: {
	_and?:PartialObjects["customer_bool_exp"][],
	_not?:PartialObjects["customer_bool_exp"],
	_or?:PartialObjects["customer_bool_exp"][],
	app_version?:PartialObjects["String_comparison_exp"],
	cart?:PartialObjects["restaurant_cart_bool_exp"],
	deliveries?:PartialObjects["delivery_order_bool_exp"],
	notification_token?:PartialObjects["String_comparison_exp"],
	saved_locations?:PartialObjects["saved_location_bool_exp"],
	user?:PartialObjects["user_bool_exp"],
	user_id?:PartialObjects["Int_comparison_exp"]
},
	/** unique or primary key constraints on table "customer" */
["customer_constraint"]:customer_constraint,
	/** input type for incrementing numeric columns in table "customer" */
["customer_inc_input"]: {
	user_id?:number
},
	/** input type for inserting data into table "customer" */
["customer_insert_input"]: {
	app_version?:string,
	cart?:PartialObjects["restaurant_cart_obj_rel_insert_input"],
	deliveries?:PartialObjects["delivery_order_arr_rel_insert_input"],
	saved_locations?:PartialObjects["saved_location_arr_rel_insert_input"],
	user?:PartialObjects["user_obj_rel_insert_input"],
	user_id?:number
},
	/** aggregate max on columns */
["customer_max_fields"]: {
		__typename?: "customer_max_fields";
			app_version?:string,
			user_id?:number
	},
	/** aggregate min on columns */
["customer_min_fields"]: {
		__typename?: "customer_min_fields";
			app_version?:string,
			user_id?:number
	},
	/** response of any mutation on the table "customer" */
["customer_mutation_response"]: {
		__typename?: "customer_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["customer"][]
	},
	/** input type for inserting object relation for remote table "customer" */
["customer_obj_rel_insert_input"]: {
	data:PartialObjects["customer_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["customer_on_conflict"]
},
	/** on_conflict condition type for table "customer" */
["customer_on_conflict"]: {
	constraint:PartialObjects["customer_constraint"],
	update_columns:PartialObjects["customer_update_column"][],
	where?:PartialObjects["customer_bool_exp"]
},
	/** Ordering options when selecting data from "customer". */
["customer_order_by"]: {
	app_version?:PartialObjects["order_by"],
	cart?:PartialObjects["restaurant_cart_order_by"],
	deliveries_aggregate?:PartialObjects["delivery_order_aggregate_order_by"],
	notification_token?:PartialObjects["order_by"],
	saved_locations_aggregate?:PartialObjects["saved_location_aggregate_order_by"],
	user?:PartialObjects["user_order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: customer */
["customer_pk_columns_input"]: {
	user_id:number
},
	/** select columns of table "customer" */
["customer_select_column"]:customer_select_column,
	/** input type for updating data in table "customer" */
["customer_set_input"]: {
	app_version?:string,
	user_id?:number
},
	/** aggregate stddev on columns */
["customer_stddev_fields"]: {
		__typename?: "customer_stddev_fields";
			user_id?:number
	},
	/** aggregate stddev_pop on columns */
["customer_stddev_pop_fields"]: {
		__typename?: "customer_stddev_pop_fields";
			user_id?:number
	},
	/** aggregate stddev_samp on columns */
["customer_stddev_samp_fields"]: {
		__typename?: "customer_stddev_samp_fields";
			user_id?:number
	},
	/** Streaming cursor of the table "customer" */
["customer_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["customer_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["customer_stream_cursor_value_input"]: {
	app_version?:string,
	user_id?:number
},
	/** aggregate sum on columns */
["customer_sum_fields"]: {
		__typename?: "customer_sum_fields";
			user_id?:number
	},
	/** update columns of table "customer" */
["customer_update_column"]:customer_update_column,
	["customer_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["customer_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["customer_set_input"],
	where:PartialObjects["customer_bool_exp"]
},
	/** aggregate var_pop on columns */
["customer_var_pop_fields"]: {
		__typename?: "customer_var_pop_fields";
			user_id?:number
	},
	/** aggregate var_samp on columns */
["customer_var_samp_fields"]: {
		__typename?: "customer_var_samp_fields";
			user_id?:number
	},
	/** aggregate variance on columns */
["customer_variance_fields"]: {
		__typename?: "customer_variance_fields";
			user_id?:number
	},
	/** columns and relationships of "deliverer" */
["deliverer"]: {
		__typename?: "deliverer";
			app_version?:string,
			current_location?:PartialObjects["geography"],
			delivery_company_id?:number,
			delivery_company_type?:string,
			id?:number,
			notification_info_id?:number,
			/** A computed field, executes function "driver_notification_token" */
	notification_token?:string,
			online?:boolean,
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			/** awaiting_approval, authorized, banned */
	status?:string,
			/** An object relationship */
	user?:PartialObjects["user"],
			user_id?:number
	},
	/** aggregated selection of "deliverer" */
["deliverer_aggregate"]: {
		__typename?: "deliverer_aggregate";
			aggregate?:PartialObjects["deliverer_aggregate_fields"],
			nodes?:PartialObjects["deliverer"][]
	},
	/** aggregate fields of "deliverer" */
["deliverer_aggregate_fields"]: {
		__typename?: "deliverer_aggregate_fields";
			avg?:PartialObjects["deliverer_avg_fields"],
			count?:number,
			max?:PartialObjects["deliverer_max_fields"],
			min?:PartialObjects["deliverer_min_fields"],
			stddev?:PartialObjects["deliverer_stddev_fields"],
			stddev_pop?:PartialObjects["deliverer_stddev_pop_fields"],
			stddev_samp?:PartialObjects["deliverer_stddev_samp_fields"],
			sum?:PartialObjects["deliverer_sum_fields"],
			var_pop?:PartialObjects["deliverer_var_pop_fields"],
			var_samp?:PartialObjects["deliverer_var_samp_fields"],
			variance?:PartialObjects["deliverer_variance_fields"]
	},
	/** aggregate avg on columns */
["deliverer_avg_fields"]: {
		__typename?: "deliverer_avg_fields";
			delivery_company_id?:number,
			id?:number,
			notification_info_id?:number,
			user_id?:number
	},
	/** Boolean expression to filter rows from the table "deliverer". All fields are combined with a logical 'AND'. */
["deliverer_bool_exp"]: {
	_and?:PartialObjects["deliverer_bool_exp"][],
	_not?:PartialObjects["deliverer_bool_exp"],
	_or?:PartialObjects["deliverer_bool_exp"][],
	app_version?:PartialObjects["String_comparison_exp"],
	current_location?:PartialObjects["geography_comparison_exp"],
	delivery_company_id?:PartialObjects["Int_comparison_exp"],
	delivery_company_type?:PartialObjects["String_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	notification_info_id?:PartialObjects["Int_comparison_exp"],
	notification_token?:PartialObjects["String_comparison_exp"],
	online?:PartialObjects["Boolean_comparison_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	status?:PartialObjects["String_comparison_exp"],
	user?:PartialObjects["user_bool_exp"],
	user_id?:PartialObjects["Int_comparison_exp"]
},
	/** unique or primary key constraints on table "deliverer" */
["deliverer_constraint"]:deliverer_constraint,
	/** input type for incrementing numeric columns in table "deliverer" */
["deliverer_inc_input"]: {
	delivery_company_id?:number,
	id?:number,
	notification_info_id?:number,
	user_id?:number
},
	/** input type for inserting data into table "deliverer" */
["deliverer_insert_input"]: {
	app_version?:string,
	current_location?:PartialObjects["geography"],
	delivery_company_id?:number,
	delivery_company_type?:string,
	id?:number,
	notification_info_id?:number,
	online?:boolean,
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	/** awaiting_approval, authorized, banned */
	status?:string,
	user?:PartialObjects["user_obj_rel_insert_input"],
	user_id?:number
},
	/** aggregate max on columns */
["deliverer_max_fields"]: {
		__typename?: "deliverer_max_fields";
			app_version?:string,
			delivery_company_id?:number,
			delivery_company_type?:string,
			id?:number,
			notification_info_id?:number,
			/** awaiting_approval, authorized, banned */
	status?:string,
			user_id?:number
	},
	/** aggregate min on columns */
["deliverer_min_fields"]: {
		__typename?: "deliverer_min_fields";
			app_version?:string,
			delivery_company_id?:number,
			delivery_company_type?:string,
			id?:number,
			notification_info_id?:number,
			/** awaiting_approval, authorized, banned */
	status?:string,
			user_id?:number
	},
	/** response of any mutation on the table "deliverer" */
["deliverer_mutation_response"]: {
		__typename?: "deliverer_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["deliverer"][]
	},
	/** input type for inserting object relation for remote table "deliverer" */
["deliverer_obj_rel_insert_input"]: {
	data:PartialObjects["deliverer_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["deliverer_on_conflict"]
},
	/** on_conflict condition type for table "deliverer" */
["deliverer_on_conflict"]: {
	constraint:PartialObjects["deliverer_constraint"],
	update_columns:PartialObjects["deliverer_update_column"][],
	where?:PartialObjects["deliverer_bool_exp"]
},
	/** Ordering options when selecting data from "deliverer". */
["deliverer_order_by"]: {
	app_version?:PartialObjects["order_by"],
	current_location?:PartialObjects["order_by"],
	delivery_company_id?:PartialObjects["order_by"],
	delivery_company_type?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	notification_info_id?:PartialObjects["order_by"],
	notification_token?:PartialObjects["order_by"],
	online?:PartialObjects["order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	status?:PartialObjects["order_by"],
	user?:PartialObjects["user_order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: deliverer */
["deliverer_pk_columns_input"]: {
	id:number
},
	/** select columns of table "deliverer" */
["deliverer_select_column"]:deliverer_select_column,
	/** input type for updating data in table "deliverer" */
["deliverer_set_input"]: {
	app_version?:string,
	current_location?:PartialObjects["geography"],
	delivery_company_id?:number,
	delivery_company_type?:string,
	id?:number,
	notification_info_id?:number,
	online?:boolean,
	/** awaiting_approval, authorized, banned */
	status?:string,
	user_id?:number
},
	/** aggregate stddev on columns */
["deliverer_stddev_fields"]: {
		__typename?: "deliverer_stddev_fields";
			delivery_company_id?:number,
			id?:number,
			notification_info_id?:number,
			user_id?:number
	},
	/** aggregate stddev_pop on columns */
["deliverer_stddev_pop_fields"]: {
		__typename?: "deliverer_stddev_pop_fields";
			delivery_company_id?:number,
			id?:number,
			notification_info_id?:number,
			user_id?:number
	},
	/** aggregate stddev_samp on columns */
["deliverer_stddev_samp_fields"]: {
		__typename?: "deliverer_stddev_samp_fields";
			delivery_company_id?:number,
			id?:number,
			notification_info_id?:number,
			user_id?:number
	},
	/** Streaming cursor of the table "deliverer" */
["deliverer_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["deliverer_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["deliverer_stream_cursor_value_input"]: {
	app_version?:string,
	current_location?:PartialObjects["geography"],
	delivery_company_id?:number,
	delivery_company_type?:string,
	id?:number,
	notification_info_id?:number,
	online?:boolean,
	/** awaiting_approval, authorized, banned */
	status?:string,
	user_id?:number
},
	/** aggregate sum on columns */
["deliverer_sum_fields"]: {
		__typename?: "deliverer_sum_fields";
			delivery_company_id?:number,
			id?:number,
			notification_info_id?:number,
			user_id?:number
	},
	/** update columns of table "deliverer" */
["deliverer_update_column"]:deliverer_update_column,
	["deliverer_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["deliverer_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["deliverer_set_input"],
	where:PartialObjects["deliverer_bool_exp"]
},
	/** aggregate var_pop on columns */
["deliverer_var_pop_fields"]: {
		__typename?: "deliverer_var_pop_fields";
			delivery_company_id?:number,
			id?:number,
			notification_info_id?:number,
			user_id?:number
	},
	/** aggregate var_samp on columns */
["deliverer_var_samp_fields"]: {
		__typename?: "deliverer_var_samp_fields";
			delivery_company_id?:number,
			id?:number,
			notification_info_id?:number,
			user_id?:number
	},
	/** aggregate variance on columns */
["deliverer_variance_fields"]: {
		__typename?: "deliverer_variance_fields";
			delivery_company_id?:number,
			id?:number,
			notification_info_id?:number,
			user_id?:number
	},
	/** columns and relationships of "delivery_order" */
["delivery_order"]: {
		__typename?: "delivery_order";
			actual_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
			actual_arrival_at_pickup_time?:PartialObjects["timestamptz"],
			actual_delivered_time?:PartialObjects["timestamptz"],
			actual_package_ready_time?:PartialObjects["timestamptz"],
			cancellation_time?:PartialObjects["timestamptz"],
			/** An object relationship */
	chat_with_customer?:PartialObjects["chat"],
			chat_with_customer_id?:number,
			/** An object relationship */
	chat_with_service_provider?:PartialObjects["chat"],
			chat_with_service_provider_id?:number,
			current_gps?:PartialObjects["geography"],
			customer_id?:number,
			/** An object relationship */
	customer_review_by_driver?:PartialObjects["review"],
			customer_review_by_driver_id?:number,
			/** An object relationship */
	deliverer?:PartialObjects["deliverer"],
			/** restaurant, delivery */
	deliverer_app_type_id?:string,
			deliverer_id?:number,
			delivery_cost?:PartialObjects["money"],
			/** An object relationship */
	driver_review_by_customer?:PartialObjects["review"],
			driver_review_by_customer_id?:number,
			/** An object relationship */
	driver_review_by_service_provider?:PartialObjects["review"],
			driver_review_by_service_provider_id?:number,
			dropoff_address?:string,
			dropoff_gps?:PartialObjects["geography"],
			estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
			estimated_arrival_at_pickup_time?:PartialObjects["timestamptz"],
			estimated_package_ready_time?:PartialObjects["timestamptz"],
			id?:number,
			/** A computed field, executes function "delivery_notification_token" */
	notification_token?:string,
			order_time?:PartialObjects["timestamptz"],
			package_cost?:PartialObjects["money"],
			payment_type?:string,
			pickup_address?:string,
			pickup_gps?:PartialObjects["geography"],
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			service_provider_id?:number,
			/** An object relationship */
	service_provider_review_by_driver?:PartialObjects["review"],
			service_provider_review_by_driver_id?:number,
			service_provider_type?:string,
			/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
			stripe_payment_id?:number,
			/** in meters */
	trip_distance?:number,
			/** in seconds */
	trip_duration?:number,
			trip_polyline?:string
	},
	/** aggregated selection of "delivery_order" */
["delivery_order_aggregate"]: {
		__typename?: "delivery_order_aggregate";
			aggregate?:PartialObjects["delivery_order_aggregate_fields"],
			nodes?:PartialObjects["delivery_order"][]
	},
	/** aggregate fields of "delivery_order" */
["delivery_order_aggregate_fields"]: {
		__typename?: "delivery_order_aggregate_fields";
			avg?:PartialObjects["delivery_order_avg_fields"],
			count?:number,
			max?:PartialObjects["delivery_order_max_fields"],
			min?:PartialObjects["delivery_order_min_fields"],
			stddev?:PartialObjects["delivery_order_stddev_fields"],
			stddev_pop?:PartialObjects["delivery_order_stddev_pop_fields"],
			stddev_samp?:PartialObjects["delivery_order_stddev_samp_fields"],
			sum?:PartialObjects["delivery_order_sum_fields"],
			var_pop?:PartialObjects["delivery_order_var_pop_fields"],
			var_samp?:PartialObjects["delivery_order_var_samp_fields"],
			variance?:PartialObjects["delivery_order_variance_fields"]
	},
	/** order by aggregate values of table "delivery_order" */
["delivery_order_aggregate_order_by"]: {
	avg?:PartialObjects["delivery_order_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["delivery_order_max_order_by"],
	min?:PartialObjects["delivery_order_min_order_by"],
	stddev?:PartialObjects["delivery_order_stddev_order_by"],
	stddev_pop?:PartialObjects["delivery_order_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["delivery_order_stddev_samp_order_by"],
	sum?:PartialObjects["delivery_order_sum_order_by"],
	var_pop?:PartialObjects["delivery_order_var_pop_order_by"],
	var_samp?:PartialObjects["delivery_order_var_samp_order_by"],
	variance?:PartialObjects["delivery_order_variance_order_by"]
},
	/** input type for inserting array relation for remote table "delivery_order" */
["delivery_order_arr_rel_insert_input"]: {
	data:PartialObjects["delivery_order_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["delivery_order_on_conflict"]
},
	/** aggregate avg on columns */
["delivery_order_avg_fields"]: {
		__typename?: "delivery_order_avg_fields";
			chat_with_customer_id?:number,
			chat_with_service_provider_id?:number,
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			delivery_cost?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			id?:number,
			package_cost?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			stripe_payment_id?:number,
			/** in meters */
	trip_distance?:number,
			/** in seconds */
	trip_duration?:number
	},
	/** order by avg() on columns of table "delivery_order" */
["delivery_order_avg_order_by"]: {
	chat_with_customer_id?:PartialObjects["order_by"],
	chat_with_service_provider_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	customer_review_by_driver_id?:PartialObjects["order_by"],
	deliverer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	driver_review_by_customer_id?:PartialObjects["order_by"],
	driver_review_by_service_provider_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	package_cost?:PartialObjects["order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_review_by_driver_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	/** in meters */
	trip_distance?:PartialObjects["order_by"],
	/** in seconds */
	trip_duration?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "delivery_order". All fields are combined with a logical 'AND'. */
["delivery_order_bool_exp"]: {
	_and?:PartialObjects["delivery_order_bool_exp"][],
	_not?:PartialObjects["delivery_order_bool_exp"],
	_or?:PartialObjects["delivery_order_bool_exp"][],
	actual_arrival_at_dropoff_time?:PartialObjects["timestamptz_comparison_exp"],
	actual_arrival_at_pickup_time?:PartialObjects["timestamptz_comparison_exp"],
	actual_delivered_time?:PartialObjects["timestamptz_comparison_exp"],
	actual_package_ready_time?:PartialObjects["timestamptz_comparison_exp"],
	cancellation_time?:PartialObjects["timestamptz_comparison_exp"],
	chat_with_customer?:PartialObjects["chat_bool_exp"],
	chat_with_customer_id?:PartialObjects["Int_comparison_exp"],
	chat_with_service_provider?:PartialObjects["chat_bool_exp"],
	chat_with_service_provider_id?:PartialObjects["Int_comparison_exp"],
	current_gps?:PartialObjects["geography_comparison_exp"],
	customer_id?:PartialObjects["Int_comparison_exp"],
	customer_review_by_driver?:PartialObjects["review_bool_exp"],
	customer_review_by_driver_id?:PartialObjects["Int_comparison_exp"],
	deliverer?:PartialObjects["deliverer_bool_exp"],
	deliverer_app_type_id?:PartialObjects["String_comparison_exp"],
	deliverer_id?:PartialObjects["Int_comparison_exp"],
	delivery_cost?:PartialObjects["money_comparison_exp"],
	driver_review_by_customer?:PartialObjects["review_bool_exp"],
	driver_review_by_customer_id?:PartialObjects["Int_comparison_exp"],
	driver_review_by_service_provider?:PartialObjects["review_bool_exp"],
	driver_review_by_service_provider_id?:PartialObjects["Int_comparison_exp"],
	dropoff_address?:PartialObjects["String_comparison_exp"],
	dropoff_gps?:PartialObjects["geography_comparison_exp"],
	estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz_comparison_exp"],
	estimated_arrival_at_pickup_time?:PartialObjects["timestamptz_comparison_exp"],
	estimated_package_ready_time?:PartialObjects["timestamptz_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	notification_token?:PartialObjects["String_comparison_exp"],
	order_time?:PartialObjects["timestamptz_comparison_exp"],
	package_cost?:PartialObjects["money_comparison_exp"],
	payment_type?:PartialObjects["String_comparison_exp"],
	pickup_address?:PartialObjects["String_comparison_exp"],
	pickup_gps?:PartialObjects["geography_comparison_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	service_provider_id?:PartialObjects["Int_comparison_exp"],
	service_provider_review_by_driver?:PartialObjects["review_bool_exp"],
	service_provider_review_by_driver_id?:PartialObjects["Int_comparison_exp"],
	service_provider_type?:PartialObjects["String_comparison_exp"],
	status?:PartialObjects["String_comparison_exp"],
	stripe_payment_id?:PartialObjects["Int_comparison_exp"],
	trip_distance?:PartialObjects["Int_comparison_exp"],
	trip_duration?:PartialObjects["Int_comparison_exp"],
	trip_polyline?:PartialObjects["String_comparison_exp"]
},
	/** unique or primary key constraints on table "delivery_order" */
["delivery_order_constraint"]:delivery_order_constraint,
	/** input type for incrementing numeric columns in table "delivery_order" */
["delivery_order_inc_input"]: {
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	delivery_cost?:PartialObjects["money"],
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	id?:number,
	package_cost?:PartialObjects["money"],
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number
},
	/** input type for inserting data into table "delivery_order" */
["delivery_order_insert_input"]: {
	actual_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
	actual_arrival_at_pickup_time?:PartialObjects["timestamptz"],
	actual_delivered_time?:PartialObjects["timestamptz"],
	actual_package_ready_time?:PartialObjects["timestamptz"],
	cancellation_time?:PartialObjects["timestamptz"],
	chat_with_customer?:PartialObjects["chat_obj_rel_insert_input"],
	chat_with_customer_id?:number,
	chat_with_service_provider?:PartialObjects["chat_obj_rel_insert_input"],
	chat_with_service_provider_id?:number,
	current_gps?:PartialObjects["geography"],
	customer_id?:number,
	customer_review_by_driver?:PartialObjects["review_obj_rel_insert_input"],
	customer_review_by_driver_id?:number,
	deliverer?:PartialObjects["deliverer_obj_rel_insert_input"],
	/** restaurant, delivery */
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	delivery_cost?:PartialObjects["money"],
	driver_review_by_customer?:PartialObjects["review_obj_rel_insert_input"],
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider?:PartialObjects["review_obj_rel_insert_input"],
	driver_review_by_service_provider_id?:number,
	dropoff_address?:string,
	dropoff_gps?:PartialObjects["geography"],
	estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
	estimated_arrival_at_pickup_time?:PartialObjects["timestamptz"],
	estimated_package_ready_time?:PartialObjects["timestamptz"],
	id?:number,
	order_time?:PartialObjects["timestamptz"],
	package_cost?:PartialObjects["money"],
	payment_type?:string,
	pickup_address?:string,
	pickup_gps?:PartialObjects["geography"],
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	service_provider_id?:number,
	service_provider_review_by_driver?:PartialObjects["review_obj_rel_insert_input"],
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number,
	trip_polyline?:string
},
	/** aggregate max on columns */
["delivery_order_max_fields"]: {
		__typename?: "delivery_order_max_fields";
			actual_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
			actual_arrival_at_pickup_time?:PartialObjects["timestamptz"],
			actual_delivered_time?:PartialObjects["timestamptz"],
			actual_package_ready_time?:PartialObjects["timestamptz"],
			cancellation_time?:PartialObjects["timestamptz"],
			chat_with_customer_id?:number,
			chat_with_service_provider_id?:number,
			customer_id?:number,
			customer_review_by_driver_id?:number,
			/** restaurant, delivery */
	deliverer_app_type_id?:string,
			deliverer_id?:number,
			delivery_cost?:PartialObjects["money"],
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			dropoff_address?:string,
			estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
			estimated_arrival_at_pickup_time?:PartialObjects["timestamptz"],
			estimated_package_ready_time?:PartialObjects["timestamptz"],
			id?:number,
			order_time?:PartialObjects["timestamptz"],
			package_cost?:PartialObjects["money"],
			payment_type?:string,
			pickup_address?:string,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			service_provider_type?:string,
			/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
			stripe_payment_id?:number,
			/** in meters */
	trip_distance?:number,
			/** in seconds */
	trip_duration?:number,
			trip_polyline?:string
	},
	/** order by max() on columns of table "delivery_order" */
["delivery_order_max_order_by"]: {
	actual_arrival_at_dropoff_time?:PartialObjects["order_by"],
	actual_arrival_at_pickup_time?:PartialObjects["order_by"],
	actual_delivered_time?:PartialObjects["order_by"],
	actual_package_ready_time?:PartialObjects["order_by"],
	cancellation_time?:PartialObjects["order_by"],
	chat_with_customer_id?:PartialObjects["order_by"],
	chat_with_service_provider_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	customer_review_by_driver_id?:PartialObjects["order_by"],
	/** restaurant, delivery */
	deliverer_app_type_id?:PartialObjects["order_by"],
	deliverer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	driver_review_by_customer_id?:PartialObjects["order_by"],
	driver_review_by_service_provider_id?:PartialObjects["order_by"],
	dropoff_address?:PartialObjects["order_by"],
	estimated_arrival_at_dropoff_time?:PartialObjects["order_by"],
	estimated_arrival_at_pickup_time?:PartialObjects["order_by"],
	estimated_package_ready_time?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	order_time?:PartialObjects["order_by"],
	package_cost?:PartialObjects["order_by"],
	payment_type?:PartialObjects["order_by"],
	pickup_address?:PartialObjects["order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_review_by_driver_id?:PartialObjects["order_by"],
	service_provider_type?:PartialObjects["order_by"],
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	/** in meters */
	trip_distance?:PartialObjects["order_by"],
	/** in seconds */
	trip_duration?:PartialObjects["order_by"],
	trip_polyline?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["delivery_order_min_fields"]: {
		__typename?: "delivery_order_min_fields";
			actual_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
			actual_arrival_at_pickup_time?:PartialObjects["timestamptz"],
			actual_delivered_time?:PartialObjects["timestamptz"],
			actual_package_ready_time?:PartialObjects["timestamptz"],
			cancellation_time?:PartialObjects["timestamptz"],
			chat_with_customer_id?:number,
			chat_with_service_provider_id?:number,
			customer_id?:number,
			customer_review_by_driver_id?:number,
			/** restaurant, delivery */
	deliverer_app_type_id?:string,
			deliverer_id?:number,
			delivery_cost?:PartialObjects["money"],
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			dropoff_address?:string,
			estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
			estimated_arrival_at_pickup_time?:PartialObjects["timestamptz"],
			estimated_package_ready_time?:PartialObjects["timestamptz"],
			id?:number,
			order_time?:PartialObjects["timestamptz"],
			package_cost?:PartialObjects["money"],
			payment_type?:string,
			pickup_address?:string,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			service_provider_type?:string,
			/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
			stripe_payment_id?:number,
			/** in meters */
	trip_distance?:number,
			/** in seconds */
	trip_duration?:number,
			trip_polyline?:string
	},
	/** order by min() on columns of table "delivery_order" */
["delivery_order_min_order_by"]: {
	actual_arrival_at_dropoff_time?:PartialObjects["order_by"],
	actual_arrival_at_pickup_time?:PartialObjects["order_by"],
	actual_delivered_time?:PartialObjects["order_by"],
	actual_package_ready_time?:PartialObjects["order_by"],
	cancellation_time?:PartialObjects["order_by"],
	chat_with_customer_id?:PartialObjects["order_by"],
	chat_with_service_provider_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	customer_review_by_driver_id?:PartialObjects["order_by"],
	/** restaurant, delivery */
	deliverer_app_type_id?:PartialObjects["order_by"],
	deliverer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	driver_review_by_customer_id?:PartialObjects["order_by"],
	driver_review_by_service_provider_id?:PartialObjects["order_by"],
	dropoff_address?:PartialObjects["order_by"],
	estimated_arrival_at_dropoff_time?:PartialObjects["order_by"],
	estimated_arrival_at_pickup_time?:PartialObjects["order_by"],
	estimated_package_ready_time?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	order_time?:PartialObjects["order_by"],
	package_cost?:PartialObjects["order_by"],
	payment_type?:PartialObjects["order_by"],
	pickup_address?:PartialObjects["order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_review_by_driver_id?:PartialObjects["order_by"],
	service_provider_type?:PartialObjects["order_by"],
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	/** in meters */
	trip_distance?:PartialObjects["order_by"],
	/** in seconds */
	trip_duration?:PartialObjects["order_by"],
	trip_polyline?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "delivery_order" */
["delivery_order_mutation_response"]: {
		__typename?: "delivery_order_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["delivery_order"][]
	},
	/** input type for inserting object relation for remote table "delivery_order" */
["delivery_order_obj_rel_insert_input"]: {
	data:PartialObjects["delivery_order_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["delivery_order_on_conflict"]
},
	/** on_conflict condition type for table "delivery_order" */
["delivery_order_on_conflict"]: {
	constraint:PartialObjects["delivery_order_constraint"],
	update_columns:PartialObjects["delivery_order_update_column"][],
	where?:PartialObjects["delivery_order_bool_exp"]
},
	/** Ordering options when selecting data from "delivery_order". */
["delivery_order_order_by"]: {
	actual_arrival_at_dropoff_time?:PartialObjects["order_by"],
	actual_arrival_at_pickup_time?:PartialObjects["order_by"],
	actual_delivered_time?:PartialObjects["order_by"],
	actual_package_ready_time?:PartialObjects["order_by"],
	cancellation_time?:PartialObjects["order_by"],
	chat_with_customer?:PartialObjects["chat_order_by"],
	chat_with_customer_id?:PartialObjects["order_by"],
	chat_with_service_provider?:PartialObjects["chat_order_by"],
	chat_with_service_provider_id?:PartialObjects["order_by"],
	current_gps?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	customer_review_by_driver?:PartialObjects["review_order_by"],
	customer_review_by_driver_id?:PartialObjects["order_by"],
	deliverer?:PartialObjects["deliverer_order_by"],
	deliverer_app_type_id?:PartialObjects["order_by"],
	deliverer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	driver_review_by_customer?:PartialObjects["review_order_by"],
	driver_review_by_customer_id?:PartialObjects["order_by"],
	driver_review_by_service_provider?:PartialObjects["review_order_by"],
	driver_review_by_service_provider_id?:PartialObjects["order_by"],
	dropoff_address?:PartialObjects["order_by"],
	dropoff_gps?:PartialObjects["order_by"],
	estimated_arrival_at_dropoff_time?:PartialObjects["order_by"],
	estimated_arrival_at_pickup_time?:PartialObjects["order_by"],
	estimated_package_ready_time?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	notification_token?:PartialObjects["order_by"],
	order_time?:PartialObjects["order_by"],
	package_cost?:PartialObjects["order_by"],
	payment_type?:PartialObjects["order_by"],
	pickup_address?:PartialObjects["order_by"],
	pickup_gps?:PartialObjects["order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_review_by_driver?:PartialObjects["review_order_by"],
	service_provider_review_by_driver_id?:PartialObjects["order_by"],
	service_provider_type?:PartialObjects["order_by"],
	status?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	trip_distance?:PartialObjects["order_by"],
	trip_duration?:PartialObjects["order_by"],
	trip_polyline?:PartialObjects["order_by"]
},
	/** primary key columns input for table: delivery_order */
["delivery_order_pk_columns_input"]: {
	id:number
},
	/** columns and relationships of "delivery_order_public" */
["delivery_order_public"]: {
		__typename?: "delivery_order_public";
			actual_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
			actual_arrival_at_pickup_time?:PartialObjects["timestamptz"],
			actual_delivered_time?:PartialObjects["timestamptz"],
			actual_package_ready_time?:PartialObjects["timestamptz"],
			customer_id?:number,
			customer_review_by_driver_id?:number,
			/** An object relationship */
	deliverer?:PartialObjects["deliverer"],
			deliverer_app_type_id?:string,
			deliverer_id?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
			estimated_arrival_at_pickup_time?:PartialObjects["timestamptz"],
			estimated_package_ready_time?:PartialObjects["timestamptz"],
			order_time?:PartialObjects["timestamptz"],
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			service_provider_type?:string,
			status?:string,
			trip_distance?:number,
			trip_duration?:number
	},
	/** aggregated selection of "delivery_order_public" */
["delivery_order_public_aggregate"]: {
		__typename?: "delivery_order_public_aggregate";
			aggregate?:PartialObjects["delivery_order_public_aggregate_fields"],
			nodes?:PartialObjects["delivery_order_public"][]
	},
	/** aggregate fields of "delivery_order_public" */
["delivery_order_public_aggregate_fields"]: {
		__typename?: "delivery_order_public_aggregate_fields";
			avg?:PartialObjects["delivery_order_public_avg_fields"],
			count?:number,
			max?:PartialObjects["delivery_order_public_max_fields"],
			min?:PartialObjects["delivery_order_public_min_fields"],
			stddev?:PartialObjects["delivery_order_public_stddev_fields"],
			stddev_pop?:PartialObjects["delivery_order_public_stddev_pop_fields"],
			stddev_samp?:PartialObjects["delivery_order_public_stddev_samp_fields"],
			sum?:PartialObjects["delivery_order_public_sum_fields"],
			var_pop?:PartialObjects["delivery_order_public_var_pop_fields"],
			var_samp?:PartialObjects["delivery_order_public_var_samp_fields"],
			variance?:PartialObjects["delivery_order_public_variance_fields"]
	},
	/** aggregate avg on columns */
["delivery_order_public_avg_fields"]: {
		__typename?: "delivery_order_public_avg_fields";
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			trip_distance?:number,
			trip_duration?:number
	},
	/** Boolean expression to filter rows from the table "delivery_order_public". All fields are combined with a logical 'AND'. */
["delivery_order_public_bool_exp"]: {
	_and?:PartialObjects["delivery_order_public_bool_exp"][],
	_not?:PartialObjects["delivery_order_public_bool_exp"],
	_or?:PartialObjects["delivery_order_public_bool_exp"][],
	actual_arrival_at_dropoff_time?:PartialObjects["timestamptz_comparison_exp"],
	actual_arrival_at_pickup_time?:PartialObjects["timestamptz_comparison_exp"],
	actual_delivered_time?:PartialObjects["timestamptz_comparison_exp"],
	actual_package_ready_time?:PartialObjects["timestamptz_comparison_exp"],
	customer_id?:PartialObjects["Int_comparison_exp"],
	customer_review_by_driver_id?:PartialObjects["Int_comparison_exp"],
	deliverer?:PartialObjects["deliverer_bool_exp"],
	deliverer_app_type_id?:PartialObjects["String_comparison_exp"],
	deliverer_id?:PartialObjects["Int_comparison_exp"],
	driver_review_by_customer_id?:PartialObjects["Int_comparison_exp"],
	driver_review_by_service_provider_id?:PartialObjects["Int_comparison_exp"],
	estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz_comparison_exp"],
	estimated_arrival_at_pickup_time?:PartialObjects["timestamptz_comparison_exp"],
	estimated_package_ready_time?:PartialObjects["timestamptz_comparison_exp"],
	order_time?:PartialObjects["timestamptz_comparison_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	service_provider_id?:PartialObjects["Int_comparison_exp"],
	service_provider_review_by_driver_id?:PartialObjects["Int_comparison_exp"],
	service_provider_type?:PartialObjects["String_comparison_exp"],
	status?:PartialObjects["String_comparison_exp"],
	trip_distance?:PartialObjects["Int_comparison_exp"],
	trip_duration?:PartialObjects["Int_comparison_exp"]
},
	/** input type for incrementing numeric columns in table "delivery_order_public" */
["delivery_order_public_inc_input"]: {
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	trip_distance?:number,
	trip_duration?:number
},
	/** input type for inserting data into table "delivery_order_public" */
["delivery_order_public_insert_input"]: {
	actual_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
	actual_arrival_at_pickup_time?:PartialObjects["timestamptz"],
	actual_delivered_time?:PartialObjects["timestamptz"],
	actual_package_ready_time?:PartialObjects["timestamptz"],
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer?:PartialObjects["deliverer_obj_rel_insert_input"],
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
	estimated_arrival_at_pickup_time?:PartialObjects["timestamptz"],
	estimated_package_ready_time?:PartialObjects["timestamptz"],
	order_time?:PartialObjects["timestamptz"],
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	status?:string,
	trip_distance?:number,
	trip_duration?:number
},
	/** aggregate max on columns */
["delivery_order_public_max_fields"]: {
		__typename?: "delivery_order_public_max_fields";
			actual_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
			actual_arrival_at_pickup_time?:PartialObjects["timestamptz"],
			actual_delivered_time?:PartialObjects["timestamptz"],
			actual_package_ready_time?:PartialObjects["timestamptz"],
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_app_type_id?:string,
			deliverer_id?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
			estimated_arrival_at_pickup_time?:PartialObjects["timestamptz"],
			estimated_package_ready_time?:PartialObjects["timestamptz"],
			order_time?:PartialObjects["timestamptz"],
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			service_provider_type?:string,
			status?:string,
			trip_distance?:number,
			trip_duration?:number
	},
	/** aggregate min on columns */
["delivery_order_public_min_fields"]: {
		__typename?: "delivery_order_public_min_fields";
			actual_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
			actual_arrival_at_pickup_time?:PartialObjects["timestamptz"],
			actual_delivered_time?:PartialObjects["timestamptz"],
			actual_package_ready_time?:PartialObjects["timestamptz"],
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_app_type_id?:string,
			deliverer_id?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
			estimated_arrival_at_pickup_time?:PartialObjects["timestamptz"],
			estimated_package_ready_time?:PartialObjects["timestamptz"],
			order_time?:PartialObjects["timestamptz"],
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			service_provider_type?:string,
			status?:string,
			trip_distance?:number,
			trip_duration?:number
	},
	/** response of any mutation on the table "delivery_order_public" */
["delivery_order_public_mutation_response"]: {
		__typename?: "delivery_order_public_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["delivery_order_public"][]
	},
	/** Ordering options when selecting data from "delivery_order_public". */
["delivery_order_public_order_by"]: {
	actual_arrival_at_dropoff_time?:PartialObjects["order_by"],
	actual_arrival_at_pickup_time?:PartialObjects["order_by"],
	actual_delivered_time?:PartialObjects["order_by"],
	actual_package_ready_time?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	customer_review_by_driver_id?:PartialObjects["order_by"],
	deliverer?:PartialObjects["deliverer_order_by"],
	deliverer_app_type_id?:PartialObjects["order_by"],
	deliverer_id?:PartialObjects["order_by"],
	driver_review_by_customer_id?:PartialObjects["order_by"],
	driver_review_by_service_provider_id?:PartialObjects["order_by"],
	estimated_arrival_at_dropoff_time?:PartialObjects["order_by"],
	estimated_arrival_at_pickup_time?:PartialObjects["order_by"],
	estimated_package_ready_time?:PartialObjects["order_by"],
	order_time?:PartialObjects["order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_review_by_driver_id?:PartialObjects["order_by"],
	service_provider_type?:PartialObjects["order_by"],
	status?:PartialObjects["order_by"],
	trip_distance?:PartialObjects["order_by"],
	trip_duration?:PartialObjects["order_by"]
},
	/** select columns of table "delivery_order_public" */
["delivery_order_public_select_column"]:delivery_order_public_select_column,
	/** input type for updating data in table "delivery_order_public" */
["delivery_order_public_set_input"]: {
	actual_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
	actual_arrival_at_pickup_time?:PartialObjects["timestamptz"],
	actual_delivered_time?:PartialObjects["timestamptz"],
	actual_package_ready_time?:PartialObjects["timestamptz"],
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
	estimated_arrival_at_pickup_time?:PartialObjects["timestamptz"],
	estimated_package_ready_time?:PartialObjects["timestamptz"],
	order_time?:PartialObjects["timestamptz"],
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	status?:string,
	trip_distance?:number,
	trip_duration?:number
},
	/** aggregate stddev on columns */
["delivery_order_public_stddev_fields"]: {
		__typename?: "delivery_order_public_stddev_fields";
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			trip_distance?:number,
			trip_duration?:number
	},
	/** aggregate stddev_pop on columns */
["delivery_order_public_stddev_pop_fields"]: {
		__typename?: "delivery_order_public_stddev_pop_fields";
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			trip_distance?:number,
			trip_duration?:number
	},
	/** aggregate stddev_samp on columns */
["delivery_order_public_stddev_samp_fields"]: {
		__typename?: "delivery_order_public_stddev_samp_fields";
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			trip_distance?:number,
			trip_duration?:number
	},
	/** Streaming cursor of the table "delivery_order_public" */
["delivery_order_public_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["delivery_order_public_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["delivery_order_public_stream_cursor_value_input"]: {
	actual_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
	actual_arrival_at_pickup_time?:PartialObjects["timestamptz"],
	actual_delivered_time?:PartialObjects["timestamptz"],
	actual_package_ready_time?:PartialObjects["timestamptz"],
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
	estimated_arrival_at_pickup_time?:PartialObjects["timestamptz"],
	estimated_package_ready_time?:PartialObjects["timestamptz"],
	order_time?:PartialObjects["timestamptz"],
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	status?:string,
	trip_distance?:number,
	trip_duration?:number
},
	/** aggregate sum on columns */
["delivery_order_public_sum_fields"]: {
		__typename?: "delivery_order_public_sum_fields";
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			trip_distance?:number,
			trip_duration?:number
	},
	["delivery_order_public_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["delivery_order_public_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["delivery_order_public_set_input"],
	where:PartialObjects["delivery_order_public_bool_exp"]
},
	/** aggregate var_pop on columns */
["delivery_order_public_var_pop_fields"]: {
		__typename?: "delivery_order_public_var_pop_fields";
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			trip_distance?:number,
			trip_duration?:number
	},
	/** aggregate var_samp on columns */
["delivery_order_public_var_samp_fields"]: {
		__typename?: "delivery_order_public_var_samp_fields";
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			trip_distance?:number,
			trip_duration?:number
	},
	/** aggregate variance on columns */
["delivery_order_public_variance_fields"]: {
		__typename?: "delivery_order_public_variance_fields";
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			trip_distance?:number,
			trip_duration?:number
	},
	/** select columns of table "delivery_order" */
["delivery_order_select_column"]:delivery_order_select_column,
	/** input type for updating data in table "delivery_order" */
["delivery_order_set_input"]: {
	actual_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
	actual_arrival_at_pickup_time?:PartialObjects["timestamptz"],
	actual_delivered_time?:PartialObjects["timestamptz"],
	actual_package_ready_time?:PartialObjects["timestamptz"],
	cancellation_time?:PartialObjects["timestamptz"],
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	current_gps?:PartialObjects["geography"],
	customer_id?:number,
	customer_review_by_driver_id?:number,
	/** restaurant, delivery */
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	delivery_cost?:PartialObjects["money"],
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	dropoff_address?:string,
	dropoff_gps?:PartialObjects["geography"],
	estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
	estimated_arrival_at_pickup_time?:PartialObjects["timestamptz"],
	estimated_package_ready_time?:PartialObjects["timestamptz"],
	id?:number,
	order_time?:PartialObjects["timestamptz"],
	package_cost?:PartialObjects["money"],
	payment_type?:string,
	pickup_address?:string,
	pickup_gps?:PartialObjects["geography"],
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number,
	trip_polyline?:string
},
	/** aggregate stddev on columns */
["delivery_order_stddev_fields"]: {
		__typename?: "delivery_order_stddev_fields";
			chat_with_customer_id?:number,
			chat_with_service_provider_id?:number,
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			delivery_cost?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			id?:number,
			package_cost?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			stripe_payment_id?:number,
			/** in meters */
	trip_distance?:number,
			/** in seconds */
	trip_duration?:number
	},
	/** order by stddev() on columns of table "delivery_order" */
["delivery_order_stddev_order_by"]: {
	chat_with_customer_id?:PartialObjects["order_by"],
	chat_with_service_provider_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	customer_review_by_driver_id?:PartialObjects["order_by"],
	deliverer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	driver_review_by_customer_id?:PartialObjects["order_by"],
	driver_review_by_service_provider_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	package_cost?:PartialObjects["order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_review_by_driver_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	/** in meters */
	trip_distance?:PartialObjects["order_by"],
	/** in seconds */
	trip_duration?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["delivery_order_stddev_pop_fields"]: {
		__typename?: "delivery_order_stddev_pop_fields";
			chat_with_customer_id?:number,
			chat_with_service_provider_id?:number,
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			delivery_cost?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			id?:number,
			package_cost?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			stripe_payment_id?:number,
			/** in meters */
	trip_distance?:number,
			/** in seconds */
	trip_duration?:number
	},
	/** order by stddev_pop() on columns of table "delivery_order" */
["delivery_order_stddev_pop_order_by"]: {
	chat_with_customer_id?:PartialObjects["order_by"],
	chat_with_service_provider_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	customer_review_by_driver_id?:PartialObjects["order_by"],
	deliverer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	driver_review_by_customer_id?:PartialObjects["order_by"],
	driver_review_by_service_provider_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	package_cost?:PartialObjects["order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_review_by_driver_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	/** in meters */
	trip_distance?:PartialObjects["order_by"],
	/** in seconds */
	trip_duration?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["delivery_order_stddev_samp_fields"]: {
		__typename?: "delivery_order_stddev_samp_fields";
			chat_with_customer_id?:number,
			chat_with_service_provider_id?:number,
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			delivery_cost?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			id?:number,
			package_cost?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			stripe_payment_id?:number,
			/** in meters */
	trip_distance?:number,
			/** in seconds */
	trip_duration?:number
	},
	/** order by stddev_samp() on columns of table "delivery_order" */
["delivery_order_stddev_samp_order_by"]: {
	chat_with_customer_id?:PartialObjects["order_by"],
	chat_with_service_provider_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	customer_review_by_driver_id?:PartialObjects["order_by"],
	deliverer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	driver_review_by_customer_id?:PartialObjects["order_by"],
	driver_review_by_service_provider_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	package_cost?:PartialObjects["order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_review_by_driver_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	/** in meters */
	trip_distance?:PartialObjects["order_by"],
	/** in seconds */
	trip_duration?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "delivery_order" */
["delivery_order_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["delivery_order_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["delivery_order_stream_cursor_value_input"]: {
	actual_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
	actual_arrival_at_pickup_time?:PartialObjects["timestamptz"],
	actual_delivered_time?:PartialObjects["timestamptz"],
	actual_package_ready_time?:PartialObjects["timestamptz"],
	cancellation_time?:PartialObjects["timestamptz"],
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	current_gps?:PartialObjects["geography"],
	customer_id?:number,
	customer_review_by_driver_id?:number,
	/** restaurant, delivery */
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	delivery_cost?:PartialObjects["money"],
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	dropoff_address?:string,
	dropoff_gps?:PartialObjects["geography"],
	estimated_arrival_at_dropoff_time?:PartialObjects["timestamptz"],
	estimated_arrival_at_pickup_time?:PartialObjects["timestamptz"],
	estimated_package_ready_time?:PartialObjects["timestamptz"],
	id?:number,
	order_time?:PartialObjects["timestamptz"],
	package_cost?:PartialObjects["money"],
	payment_type?:string,
	pickup_address?:string,
	pickup_gps?:PartialObjects["geography"],
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number,
	trip_polyline?:string
},
	/** aggregate sum on columns */
["delivery_order_sum_fields"]: {
		__typename?: "delivery_order_sum_fields";
			chat_with_customer_id?:number,
			chat_with_service_provider_id?:number,
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			delivery_cost?:PartialObjects["money"],
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			id?:number,
			package_cost?:PartialObjects["money"],
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			stripe_payment_id?:number,
			/** in meters */
	trip_distance?:number,
			/** in seconds */
	trip_duration?:number
	},
	/** order by sum() on columns of table "delivery_order" */
["delivery_order_sum_order_by"]: {
	chat_with_customer_id?:PartialObjects["order_by"],
	chat_with_service_provider_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	customer_review_by_driver_id?:PartialObjects["order_by"],
	deliverer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	driver_review_by_customer_id?:PartialObjects["order_by"],
	driver_review_by_service_provider_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	package_cost?:PartialObjects["order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_review_by_driver_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	/** in meters */
	trip_distance?:PartialObjects["order_by"],
	/** in seconds */
	trip_duration?:PartialObjects["order_by"]
},
	/** update columns of table "delivery_order" */
["delivery_order_update_column"]:delivery_order_update_column,
	["delivery_order_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["delivery_order_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["delivery_order_set_input"],
	where:PartialObjects["delivery_order_bool_exp"]
},
	/** aggregate var_pop on columns */
["delivery_order_var_pop_fields"]: {
		__typename?: "delivery_order_var_pop_fields";
			chat_with_customer_id?:number,
			chat_with_service_provider_id?:number,
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			delivery_cost?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			id?:number,
			package_cost?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			stripe_payment_id?:number,
			/** in meters */
	trip_distance?:number,
			/** in seconds */
	trip_duration?:number
	},
	/** order by var_pop() on columns of table "delivery_order" */
["delivery_order_var_pop_order_by"]: {
	chat_with_customer_id?:PartialObjects["order_by"],
	chat_with_service_provider_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	customer_review_by_driver_id?:PartialObjects["order_by"],
	deliverer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	driver_review_by_customer_id?:PartialObjects["order_by"],
	driver_review_by_service_provider_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	package_cost?:PartialObjects["order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_review_by_driver_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	/** in meters */
	trip_distance?:PartialObjects["order_by"],
	/** in seconds */
	trip_duration?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["delivery_order_var_samp_fields"]: {
		__typename?: "delivery_order_var_samp_fields";
			chat_with_customer_id?:number,
			chat_with_service_provider_id?:number,
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			delivery_cost?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			id?:number,
			package_cost?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			stripe_payment_id?:number,
			/** in meters */
	trip_distance?:number,
			/** in seconds */
	trip_duration?:number
	},
	/** order by var_samp() on columns of table "delivery_order" */
["delivery_order_var_samp_order_by"]: {
	chat_with_customer_id?:PartialObjects["order_by"],
	chat_with_service_provider_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	customer_review_by_driver_id?:PartialObjects["order_by"],
	deliverer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	driver_review_by_customer_id?:PartialObjects["order_by"],
	driver_review_by_service_provider_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	package_cost?:PartialObjects["order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_review_by_driver_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	/** in meters */
	trip_distance?:PartialObjects["order_by"],
	/** in seconds */
	trip_duration?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["delivery_order_variance_fields"]: {
		__typename?: "delivery_order_variance_fields";
			chat_with_customer_id?:number,
			chat_with_service_provider_id?:number,
			customer_id?:number,
			customer_review_by_driver_id?:number,
			deliverer_id?:number,
			delivery_cost?:number,
			driver_review_by_customer_id?:number,
			driver_review_by_service_provider_id?:number,
			id?:number,
			package_cost?:number,
			service_provider_id?:number,
			service_provider_review_by_driver_id?:number,
			stripe_payment_id?:number,
			/** in meters */
	trip_distance?:number,
			/** in seconds */
	trip_duration?:number
	},
	/** order by variance() on columns of table "delivery_order" */
["delivery_order_variance_order_by"]: {
	chat_with_customer_id?:PartialObjects["order_by"],
	chat_with_service_provider_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	customer_review_by_driver_id?:PartialObjects["order_by"],
	deliverer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	driver_review_by_customer_id?:PartialObjects["order_by"],
	driver_review_by_service_provider_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	package_cost?:PartialObjects["order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_review_by_driver_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	/** in meters */
	trip_distance?:PartialObjects["order_by"],
	/** in seconds */
	trip_duration?:PartialObjects["order_by"]
},
	["float8"]:any,
	/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
["float8_comparison_exp"]: {
	_eq?:PartialObjects["float8"],
	_gt?:PartialObjects["float8"],
	_gte?:PartialObjects["float8"],
	_in?:PartialObjects["float8"][],
	_is_null?:boolean,
	_lt?:PartialObjects["float8"],
	_lte?:PartialObjects["float8"],
	_neq?:PartialObjects["float8"],
	_nin?:PartialObjects["float8"][]
},
	["geography"]:any,
	["geography_cast_exp"]: {
	geometry?:PartialObjects["geometry_comparison_exp"]
},
	/** Boolean expression to compare columns of type "geography". All fields are combined with logical 'AND'. */
["geography_comparison_exp"]: {
	_cast?:PartialObjects["geography_cast_exp"],
	_eq?:PartialObjects["geography"],
	_gt?:PartialObjects["geography"],
	_gte?:PartialObjects["geography"],
	_in?:PartialObjects["geography"][],
	_is_null?:boolean,
	_lt?:PartialObjects["geography"],
	_lte?:PartialObjects["geography"],
	_neq?:PartialObjects["geography"],
	_nin?:PartialObjects["geography"][],
	/** is the column within a given distance from the given geography value */
	_st_d_within?:PartialObjects["st_d_within_geography_input"],
	/** does the column spatially intersect the given geography value */
	_st_intersects?:PartialObjects["geography"]
},
	["geometry"]:any,
	["geometry_cast_exp"]: {
	geography?:PartialObjects["geography_comparison_exp"]
},
	/** Boolean expression to compare columns of type "geometry". All fields are combined with logical 'AND'. */
["geometry_comparison_exp"]: {
	_cast?:PartialObjects["geometry_cast_exp"],
	_eq?:PartialObjects["geometry"],
	_gt?:PartialObjects["geometry"],
	_gte?:PartialObjects["geometry"],
	_in?:PartialObjects["geometry"][],
	_is_null?:boolean,
	_lt?:PartialObjects["geometry"],
	_lte?:PartialObjects["geometry"],
	_neq?:PartialObjects["geometry"],
	_nin?:PartialObjects["geometry"][],
	/** is the column within a given 3D distance from the given geometry value */
	_st_3d_d_within?:PartialObjects["st_d_within_input"],
	/** does the column spatially intersect the given geometry value in 3D */
	_st_3d_intersects?:PartialObjects["geometry"],
	/** does the column contain the given geometry value */
	_st_contains?:PartialObjects["geometry"],
	/** does the column cross the given geometry value */
	_st_crosses?:PartialObjects["geometry"],
	/** is the column within a given distance from the given geometry value */
	_st_d_within?:PartialObjects["st_d_within_input"],
	/** is the column equal to given geometry value (directionality is ignored) */
	_st_equals?:PartialObjects["geometry"],
	/** does the column spatially intersect the given geometry value */
	_st_intersects?:PartialObjects["geometry"],
	/** does the column 'spatially overlap' (intersect but not completely contain) the given geometry value */
	_st_overlaps?:PartialObjects["geometry"],
	/** does the column have atleast one point in common with the given geometry value */
	_st_touches?:PartialObjects["geometry"],
	/** is the column contained in the given geometry value */
	_st_within?:PartialObjects["geometry"]
},
	/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
["Int_comparison_exp"]: {
	_eq?:number,
	_gt?:number,
	_gte?:number,
	_in?:number[],
	_is_null?:boolean,
	_lt?:number,
	_lte?:number,
	_neq?:number,
	_nin?:number[]
},
	["json"]:any,
	/** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
["json_comparison_exp"]: {
	_eq?:PartialObjects["json"],
	_gt?:PartialObjects["json"],
	_gte?:PartialObjects["json"],
	_in?:PartialObjects["json"][],
	_is_null?:boolean,
	_lt?:PartialObjects["json"],
	_lte?:PartialObjects["json"],
	_neq?:PartialObjects["json"],
	_nin?:PartialObjects["json"][]
},
	["jsonb"]:any,
	["jsonb_cast_exp"]: {
	String?:PartialObjects["String_comparison_exp"]
},
	/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
["jsonb_comparison_exp"]: {
	_cast?:PartialObjects["jsonb_cast_exp"],
	/** is the column contained in the given json value */
	_contained_in?:PartialObjects["jsonb"],
	/** does the column contain the given json value at the top level */
	_contains?:PartialObjects["jsonb"],
	_eq?:PartialObjects["jsonb"],
	_gt?:PartialObjects["jsonb"],
	_gte?:PartialObjects["jsonb"],
	/** does the string exist as a top-level key in the column */
	_has_key?:string,
	/** do all of these strings exist as top-level keys in the column */
	_has_keys_all?:string[],
	/** do any of these strings exist as top-level keys in the column */
	_has_keys_any?:string[],
	_in?:PartialObjects["jsonb"][],
	_is_null?:boolean,
	_lt?:PartialObjects["jsonb"],
	_lte?:PartialObjects["jsonb"],
	_neq?:PartialObjects["jsonb"],
	_nin?:PartialObjects["jsonb"][]
},
	/** columns and relationships of "mez_admin" */
["mez_admin"]: {
		__typename?: "mez_admin";
			/** A computed field, executes function "mez_admin_notification_token" */
	notification_token?:string,
			/** An object relationship */
	user?:PartialObjects["user"],
			user_id?:number,
			version?:string
	},
	/** aggregated selection of "mez_admin" */
["mez_admin_aggregate"]: {
		__typename?: "mez_admin_aggregate";
			aggregate?:PartialObjects["mez_admin_aggregate_fields"],
			nodes?:PartialObjects["mez_admin"][]
	},
	/** aggregate fields of "mez_admin" */
["mez_admin_aggregate_fields"]: {
		__typename?: "mez_admin_aggregate_fields";
			avg?:PartialObjects["mez_admin_avg_fields"],
			count?:number,
			max?:PartialObjects["mez_admin_max_fields"],
			min?:PartialObjects["mez_admin_min_fields"],
			stddev?:PartialObjects["mez_admin_stddev_fields"],
			stddev_pop?:PartialObjects["mez_admin_stddev_pop_fields"],
			stddev_samp?:PartialObjects["mez_admin_stddev_samp_fields"],
			sum?:PartialObjects["mez_admin_sum_fields"],
			var_pop?:PartialObjects["mez_admin_var_pop_fields"],
			var_samp?:PartialObjects["mez_admin_var_samp_fields"],
			variance?:PartialObjects["mez_admin_variance_fields"]
	},
	/** aggregate avg on columns */
["mez_admin_avg_fields"]: {
		__typename?: "mez_admin_avg_fields";
			user_id?:number
	},
	/** Boolean expression to filter rows from the table "mez_admin". All fields are combined with a logical 'AND'. */
["mez_admin_bool_exp"]: {
	_and?:PartialObjects["mez_admin_bool_exp"][],
	_not?:PartialObjects["mez_admin_bool_exp"],
	_or?:PartialObjects["mez_admin_bool_exp"][],
	notification_token?:PartialObjects["String_comparison_exp"],
	user?:PartialObjects["user_bool_exp"],
	user_id?:PartialObjects["Int_comparison_exp"],
	version?:PartialObjects["String_comparison_exp"]
},
	/** unique or primary key constraints on table "mez_admin" */
["mez_admin_constraint"]:mez_admin_constraint,
	/** input type for incrementing numeric columns in table "mez_admin" */
["mez_admin_inc_input"]: {
	user_id?:number
},
	/** input type for inserting data into table "mez_admin" */
["mez_admin_insert_input"]: {
	user?:PartialObjects["user_obj_rel_insert_input"],
	user_id?:number,
	version?:string
},
	/** aggregate max on columns */
["mez_admin_max_fields"]: {
		__typename?: "mez_admin_max_fields";
			user_id?:number,
			version?:string
	},
	/** aggregate min on columns */
["mez_admin_min_fields"]: {
		__typename?: "mez_admin_min_fields";
			user_id?:number,
			version?:string
	},
	/** response of any mutation on the table "mez_admin" */
["mez_admin_mutation_response"]: {
		__typename?: "mez_admin_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["mez_admin"][]
	},
	/** on_conflict condition type for table "mez_admin" */
["mez_admin_on_conflict"]: {
	constraint:PartialObjects["mez_admin_constraint"],
	update_columns:PartialObjects["mez_admin_update_column"][],
	where?:PartialObjects["mez_admin_bool_exp"]
},
	/** Ordering options when selecting data from "mez_admin". */
["mez_admin_order_by"]: {
	notification_token?:PartialObjects["order_by"],
	user?:PartialObjects["user_order_by"],
	user_id?:PartialObjects["order_by"],
	version?:PartialObjects["order_by"]
},
	/** primary key columns input for table: mez_admin */
["mez_admin_pk_columns_input"]: {
	user_id:number
},
	/** select columns of table "mez_admin" */
["mez_admin_select_column"]:mez_admin_select_column,
	/** input type for updating data in table "mez_admin" */
["mez_admin_set_input"]: {
	user_id?:number,
	version?:string
},
	/** aggregate stddev on columns */
["mez_admin_stddev_fields"]: {
		__typename?: "mez_admin_stddev_fields";
			user_id?:number
	},
	/** aggregate stddev_pop on columns */
["mez_admin_stddev_pop_fields"]: {
		__typename?: "mez_admin_stddev_pop_fields";
			user_id?:number
	},
	/** aggregate stddev_samp on columns */
["mez_admin_stddev_samp_fields"]: {
		__typename?: "mez_admin_stddev_samp_fields";
			user_id?:number
	},
	/** Streaming cursor of the table "mez_admin" */
["mez_admin_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["mez_admin_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["mez_admin_stream_cursor_value_input"]: {
	user_id?:number,
	version?:string
},
	/** aggregate sum on columns */
["mez_admin_sum_fields"]: {
		__typename?: "mez_admin_sum_fields";
			user_id?:number
	},
	/** update columns of table "mez_admin" */
["mez_admin_update_column"]:mez_admin_update_column,
	["mez_admin_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["mez_admin_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["mez_admin_set_input"],
	where:PartialObjects["mez_admin_bool_exp"]
},
	/** aggregate var_pop on columns */
["mez_admin_var_pop_fields"]: {
		__typename?: "mez_admin_var_pop_fields";
			user_id?:number
	},
	/** aggregate var_samp on columns */
["mez_admin_var_samp_fields"]: {
		__typename?: "mez_admin_var_samp_fields";
			user_id?:number
	},
	/** aggregate variance on columns */
["mez_admin_variance_fields"]: {
		__typename?: "mez_admin_variance_fields";
			user_id?:number
	},
	["money"]:any,
	/** Boolean expression to compare columns of type "money". All fields are combined with logical 'AND'. */
["money_comparison_exp"]: {
	_eq?:PartialObjects["money"],
	_gt?:PartialObjects["money"],
	_gte?:PartialObjects["money"],
	_in?:PartialObjects["money"][],
	_is_null?:boolean,
	_lt?:PartialObjects["money"],
	_lte?:PartialObjects["money"],
	_neq?:PartialObjects["money"],
	_nin?:PartialObjects["money"][]
},
	/** mutation root */
["mutation_root"]: {
		__typename?: "mutation_root";
			/** delete data from the table: "chat" */
	delete_chat?:PartialObjects["chat_mutation_response"],
			/** delete single row from the table: "chat" */
	delete_chat_by_pk?:PartialObjects["chat"],
			/** delete data from the table: "chat_participant" */
	delete_chat_participant?:PartialObjects["chat_participant_mutation_response"],
			/** delete single row from the table: "chat_participant" */
	delete_chat_participant_by_pk?:PartialObjects["chat_participant"],
			/** delete data from the table: "customer" */
	delete_customer?:PartialObjects["customer_mutation_response"],
			/** delete single row from the table: "customer" */
	delete_customer_by_pk?:PartialObjects["customer"],
			/** delete data from the table: "deliverer" */
	delete_deliverer?:PartialObjects["deliverer_mutation_response"],
			/** delete single row from the table: "deliverer" */
	delete_deliverer_by_pk?:PartialObjects["deliverer"],
			/** delete data from the table: "delivery_order" */
	delete_delivery_order?:PartialObjects["delivery_order_mutation_response"],
			/** delete single row from the table: "delivery_order" */
	delete_delivery_order_by_pk?:PartialObjects["delivery_order"],
			/** delete data from the table: "delivery_order_public" */
	delete_delivery_order_public?:PartialObjects["delivery_order_public_mutation_response"],
			/** delete data from the table: "mez_admin" */
	delete_mez_admin?:PartialObjects["mez_admin_mutation_response"],
			/** delete single row from the table: "mez_admin" */
	delete_mez_admin_by_pk?:PartialObjects["mez_admin"],
			/** delete data from the table: "notification_info" */
	delete_notification_info?:PartialObjects["notification_info_mutation_response"],
			/** delete single row from the table: "notification_info" */
	delete_notification_info_by_pk?:PartialObjects["notification_info"],
			/** delete data from the table: "restaurant" */
	delete_restaurant?:PartialObjects["restaurant_mutation_response"],
			/** delete single row from the table: "restaurant" */
	delete_restaurant_by_pk?:PartialObjects["restaurant"],
			/** delete data from the table: "restaurant_cart" */
	delete_restaurant_cart?:PartialObjects["restaurant_cart_mutation_response"],
			/** delete single row from the table: "restaurant_cart" */
	delete_restaurant_cart_by_pk?:PartialObjects["restaurant_cart"],
			/** delete data from the table: "restaurant_cart_item" */
	delete_restaurant_cart_item?:PartialObjects["restaurant_cart_item_mutation_response"],
			/** delete single row from the table: "restaurant_cart_item" */
	delete_restaurant_cart_item_by_pk?:PartialObjects["restaurant_cart_item"],
			/** delete data from the table: "restaurant_category" */
	delete_restaurant_category?:PartialObjects["restaurant_category_mutation_response"],
			/** delete single row from the table: "restaurant_category" */
	delete_restaurant_category_by_pk?:PartialObjects["restaurant_category"],
			/** delete data from the table: "restaurant_choice" */
	delete_restaurant_choice?:PartialObjects["restaurant_choice_mutation_response"],
			/** delete single row from the table: "restaurant_choice" */
	delete_restaurant_choice_by_pk?:PartialObjects["restaurant_choice"],
			/** delete data from the table: "restaurant_item" */
	delete_restaurant_item?:PartialObjects["restaurant_item_mutation_response"],
			/** delete single row from the table: "restaurant_item" */
	delete_restaurant_item_by_pk?:PartialObjects["restaurant_item"],
			/** delete data from the table: "restaurant_item_option_map" */
	delete_restaurant_item_option_map?:PartialObjects["restaurant_item_option_map_mutation_response"],
			/** delete single row from the table: "restaurant_item_option_map" */
	delete_restaurant_item_option_map_by_pk?:PartialObjects["restaurant_item_option_map"],
			/** delete data from the table: "restaurant_operator" */
	delete_restaurant_operator?:PartialObjects["restaurant_operator_mutation_response"],
			/** delete single row from the table: "restaurant_operator" */
	delete_restaurant_operator_by_pk?:PartialObjects["restaurant_operator"],
			/** delete data from the table: "restaurant_option" */
	delete_restaurant_option?:PartialObjects["restaurant_option_mutation_response"],
			/** delete single row from the table: "restaurant_option" */
	delete_restaurant_option_by_pk?:PartialObjects["restaurant_option"],
			/** delete data from the table: "restaurant_option_choice_map" */
	delete_restaurant_option_choice_map?:PartialObjects["restaurant_option_choice_map_mutation_response"],
			/** delete single row from the table: "restaurant_option_choice_map" */
	delete_restaurant_option_choice_map_by_pk?:PartialObjects["restaurant_option_choice_map"],
			/** delete data from the table: "restaurant_order" */
	delete_restaurant_order?:PartialObjects["restaurant_order_mutation_response"],
			/** delete single row from the table: "restaurant_order" */
	delete_restaurant_order_by_pk?:PartialObjects["restaurant_order"],
			/** delete data from the table: "restaurant_order_item" */
	delete_restaurant_order_item?:PartialObjects["restaurant_order_item_mutation_response"],
			/** delete single row from the table: "restaurant_order_item" */
	delete_restaurant_order_item_by_pk?:PartialObjects["restaurant_order_item"],
			/** delete data from the table: "restaurant_order_public" */
	delete_restaurant_order_public?:PartialObjects["restaurant_order_public_mutation_response"],
			/** delete data from the table: "review" */
	delete_review?:PartialObjects["review_mutation_response"],
			/** delete single row from the table: "review" */
	delete_review_by_pk?:PartialObjects["review"],
			/** delete data from the table: "saved_location" */
	delete_saved_location?:PartialObjects["saved_location_mutation_response"],
			/** delete single row from the table: "saved_location" */
	delete_saved_location_by_pk?:PartialObjects["saved_location"],
			/** delete data from the table: "service_provider_payment_info" */
	delete_service_provider_payment_info?:PartialObjects["service_provider_payment_info_mutation_response"],
			/** delete single row from the table: "service_provider_payment_info" */
	delete_service_provider_payment_info_by_pk?:PartialObjects["service_provider_payment_info"],
			/** delete data from the table: "stripe_info" */
	delete_stripe_info?:PartialObjects["stripe_info_mutation_response"],
			/** delete single row from the table: "stripe_info" */
	delete_stripe_info_by_pk?:PartialObjects["stripe_info"],
			/** delete data from the table: "topology.app_type" */
	delete_topology_app_type?:PartialObjects["topology_app_type_mutation_response"],
			/** delete single row from the table: "topology.app_type" */
	delete_topology_app_type_by_pk?:PartialObjects["topology_app_type"],
			/** delete data from the table: "topology.language" */
	delete_topology_language?:PartialObjects["topology_language_mutation_response"],
			/** delete single row from the table: "topology.language" */
	delete_topology_language_by_pk?:PartialObjects["topology_language"],
			/** delete data from the table: "translation" */
	delete_translation?:PartialObjects["translation_mutation_response"],
			/** delete single row from the table: "translation" */
	delete_translation_by_pk?:PartialObjects["translation"],
			/** delete data from the table: "translation_value" */
	delete_translation_value?:PartialObjects["translation_value_mutation_response"],
			/** delete single row from the table: "translation_value" */
	delete_translation_value_by_pk?:PartialObjects["translation_value"],
			/** delete data from the table: "user" */
	delete_user?:PartialObjects["user_mutation_response"],
			/** delete single row from the table: "user" */
	delete_user_by_pk?:PartialObjects["user"],
			/** insert data into the table: "chat" */
	insert_chat?:PartialObjects["chat_mutation_response"],
			/** insert a single row into the table: "chat" */
	insert_chat_one?:PartialObjects["chat"],
			/** insert data into the table: "chat_participant" */
	insert_chat_participant?:PartialObjects["chat_participant_mutation_response"],
			/** insert a single row into the table: "chat_participant" */
	insert_chat_participant_one?:PartialObjects["chat_participant"],
			/** insert data into the table: "customer" */
	insert_customer?:PartialObjects["customer_mutation_response"],
			/** insert a single row into the table: "customer" */
	insert_customer_one?:PartialObjects["customer"],
			/** insert data into the table: "deliverer" */
	insert_deliverer?:PartialObjects["deliverer_mutation_response"],
			/** insert a single row into the table: "deliverer" */
	insert_deliverer_one?:PartialObjects["deliverer"],
			/** insert data into the table: "delivery_order" */
	insert_delivery_order?:PartialObjects["delivery_order_mutation_response"],
			/** insert a single row into the table: "delivery_order" */
	insert_delivery_order_one?:PartialObjects["delivery_order"],
			/** insert data into the table: "delivery_order_public" */
	insert_delivery_order_public?:PartialObjects["delivery_order_public_mutation_response"],
			/** insert a single row into the table: "delivery_order_public" */
	insert_delivery_order_public_one?:PartialObjects["delivery_order_public"],
			/** insert data into the table: "mez_admin" */
	insert_mez_admin?:PartialObjects["mez_admin_mutation_response"],
			/** insert a single row into the table: "mez_admin" */
	insert_mez_admin_one?:PartialObjects["mez_admin"],
			/** insert data into the table: "notification_info" */
	insert_notification_info?:PartialObjects["notification_info_mutation_response"],
			/** insert a single row into the table: "notification_info" */
	insert_notification_info_one?:PartialObjects["notification_info"],
			/** insert data into the table: "restaurant" */
	insert_restaurant?:PartialObjects["restaurant_mutation_response"],
			/** insert data into the table: "restaurant_cart" */
	insert_restaurant_cart?:PartialObjects["restaurant_cart_mutation_response"],
			/** insert data into the table: "restaurant_cart_item" */
	insert_restaurant_cart_item?:PartialObjects["restaurant_cart_item_mutation_response"],
			/** insert a single row into the table: "restaurant_cart_item" */
	insert_restaurant_cart_item_one?:PartialObjects["restaurant_cart_item"],
			/** insert a single row into the table: "restaurant_cart" */
	insert_restaurant_cart_one?:PartialObjects["restaurant_cart"],
			/** insert data into the table: "restaurant_category" */
	insert_restaurant_category?:PartialObjects["restaurant_category_mutation_response"],
			/** insert a single row into the table: "restaurant_category" */
	insert_restaurant_category_one?:PartialObjects["restaurant_category"],
			/** insert data into the table: "restaurant_choice" */
	insert_restaurant_choice?:PartialObjects["restaurant_choice_mutation_response"],
			/** insert a single row into the table: "restaurant_choice" */
	insert_restaurant_choice_one?:PartialObjects["restaurant_choice"],
			/** insert data into the table: "restaurant_item" */
	insert_restaurant_item?:PartialObjects["restaurant_item_mutation_response"],
			/** insert a single row into the table: "restaurant_item" */
	insert_restaurant_item_one?:PartialObjects["restaurant_item"],
			/** insert data into the table: "restaurant_item_option_map" */
	insert_restaurant_item_option_map?:PartialObjects["restaurant_item_option_map_mutation_response"],
			/** insert a single row into the table: "restaurant_item_option_map" */
	insert_restaurant_item_option_map_one?:PartialObjects["restaurant_item_option_map"],
			/** insert a single row into the table: "restaurant" */
	insert_restaurant_one?:PartialObjects["restaurant"],
			/** insert data into the table: "restaurant_operator" */
	insert_restaurant_operator?:PartialObjects["restaurant_operator_mutation_response"],
			/** insert a single row into the table: "restaurant_operator" */
	insert_restaurant_operator_one?:PartialObjects["restaurant_operator"],
			/** insert data into the table: "restaurant_option" */
	insert_restaurant_option?:PartialObjects["restaurant_option_mutation_response"],
			/** insert data into the table: "restaurant_option_choice_map" */
	insert_restaurant_option_choice_map?:PartialObjects["restaurant_option_choice_map_mutation_response"],
			/** insert a single row into the table: "restaurant_option_choice_map" */
	insert_restaurant_option_choice_map_one?:PartialObjects["restaurant_option_choice_map"],
			/** insert a single row into the table: "restaurant_option" */
	insert_restaurant_option_one?:PartialObjects["restaurant_option"],
			/** insert data into the table: "restaurant_order" */
	insert_restaurant_order?:PartialObjects["restaurant_order_mutation_response"],
			/** insert data into the table: "restaurant_order_item" */
	insert_restaurant_order_item?:PartialObjects["restaurant_order_item_mutation_response"],
			/** insert a single row into the table: "restaurant_order_item" */
	insert_restaurant_order_item_one?:PartialObjects["restaurant_order_item"],
			/** insert a single row into the table: "restaurant_order" */
	insert_restaurant_order_one?:PartialObjects["restaurant_order"],
			/** insert data into the table: "restaurant_order_public" */
	insert_restaurant_order_public?:PartialObjects["restaurant_order_public_mutation_response"],
			/** insert a single row into the table: "restaurant_order_public" */
	insert_restaurant_order_public_one?:PartialObjects["restaurant_order_public"],
			/** insert data into the table: "review" */
	insert_review?:PartialObjects["review_mutation_response"],
			/** insert a single row into the table: "review" */
	insert_review_one?:PartialObjects["review"],
			/** insert data into the table: "saved_location" */
	insert_saved_location?:PartialObjects["saved_location_mutation_response"],
			/** insert a single row into the table: "saved_location" */
	insert_saved_location_one?:PartialObjects["saved_location"],
			/** insert data into the table: "service_provider_payment_info" */
	insert_service_provider_payment_info?:PartialObjects["service_provider_payment_info_mutation_response"],
			/** insert a single row into the table: "service_provider_payment_info" */
	insert_service_provider_payment_info_one?:PartialObjects["service_provider_payment_info"],
			/** insert data into the table: "stripe_info" */
	insert_stripe_info?:PartialObjects["stripe_info_mutation_response"],
			/** insert a single row into the table: "stripe_info" */
	insert_stripe_info_one?:PartialObjects["stripe_info"],
			/** insert data into the table: "topology.app_type" */
	insert_topology_app_type?:PartialObjects["topology_app_type_mutation_response"],
			/** insert a single row into the table: "topology.app_type" */
	insert_topology_app_type_one?:PartialObjects["topology_app_type"],
			/** insert data into the table: "topology.language" */
	insert_topology_language?:PartialObjects["topology_language_mutation_response"],
			/** insert a single row into the table: "topology.language" */
	insert_topology_language_one?:PartialObjects["topology_language"],
			/** insert data into the table: "translation" */
	insert_translation?:PartialObjects["translation_mutation_response"],
			/** insert a single row into the table: "translation" */
	insert_translation_one?:PartialObjects["translation"],
			/** insert data into the table: "translation_value" */
	insert_translation_value?:PartialObjects["translation_value_mutation_response"],
			/** insert a single row into the table: "translation_value" */
	insert_translation_value_one?:PartialObjects["translation_value"],
			/** insert data into the table: "user" */
	insert_user?:PartialObjects["user_mutation_response"],
			/** insert a single row into the table: "user" */
	insert_user_one?:PartialObjects["user"],
			/** update data of the table: "chat" */
	update_chat?:PartialObjects["chat_mutation_response"],
			/** update single row of the table: "chat" */
	update_chat_by_pk?:PartialObjects["chat"],
			/** update multiples rows of table: "chat" */
	update_chat_many?:(PartialObjects["chat_mutation_response"] | undefined)[],
			/** update data of the table: "chat_participant" */
	update_chat_participant?:PartialObjects["chat_participant_mutation_response"],
			/** update single row of the table: "chat_participant" */
	update_chat_participant_by_pk?:PartialObjects["chat_participant"],
			/** update multiples rows of table: "chat_participant" */
	update_chat_participant_many?:(PartialObjects["chat_participant_mutation_response"] | undefined)[],
			/** update data of the table: "customer" */
	update_customer?:PartialObjects["customer_mutation_response"],
			/** update single row of the table: "customer" */
	update_customer_by_pk?:PartialObjects["customer"],
			/** update multiples rows of table: "customer" */
	update_customer_many?:(PartialObjects["customer_mutation_response"] | undefined)[],
			/** update data of the table: "deliverer" */
	update_deliverer?:PartialObjects["deliverer_mutation_response"],
			/** update single row of the table: "deliverer" */
	update_deliverer_by_pk?:PartialObjects["deliverer"],
			/** update multiples rows of table: "deliverer" */
	update_deliverer_many?:(PartialObjects["deliverer_mutation_response"] | undefined)[],
			/** update data of the table: "delivery_order" */
	update_delivery_order?:PartialObjects["delivery_order_mutation_response"],
			/** update single row of the table: "delivery_order" */
	update_delivery_order_by_pk?:PartialObjects["delivery_order"],
			/** update multiples rows of table: "delivery_order" */
	update_delivery_order_many?:(PartialObjects["delivery_order_mutation_response"] | undefined)[],
			/** update data of the table: "delivery_order_public" */
	update_delivery_order_public?:PartialObjects["delivery_order_public_mutation_response"],
			/** update multiples rows of table: "delivery_order_public" */
	update_delivery_order_public_many?:(PartialObjects["delivery_order_public_mutation_response"] | undefined)[],
			/** update data of the table: "mez_admin" */
	update_mez_admin?:PartialObjects["mez_admin_mutation_response"],
			/** update single row of the table: "mez_admin" */
	update_mez_admin_by_pk?:PartialObjects["mez_admin"],
			/** update multiples rows of table: "mez_admin" */
	update_mez_admin_many?:(PartialObjects["mez_admin_mutation_response"] | undefined)[],
			/** update data of the table: "notification_info" */
	update_notification_info?:PartialObjects["notification_info_mutation_response"],
			/** update single row of the table: "notification_info" */
	update_notification_info_by_pk?:PartialObjects["notification_info"],
			/** update multiples rows of table: "notification_info" */
	update_notification_info_many?:(PartialObjects["notification_info_mutation_response"] | undefined)[],
			/** update data of the table: "restaurant" */
	update_restaurant?:PartialObjects["restaurant_mutation_response"],
			/** update single row of the table: "restaurant" */
	update_restaurant_by_pk?:PartialObjects["restaurant"],
			/** update data of the table: "restaurant_cart" */
	update_restaurant_cart?:PartialObjects["restaurant_cart_mutation_response"],
			/** update single row of the table: "restaurant_cart" */
	update_restaurant_cart_by_pk?:PartialObjects["restaurant_cart"],
			/** update data of the table: "restaurant_cart_item" */
	update_restaurant_cart_item?:PartialObjects["restaurant_cart_item_mutation_response"],
			/** update single row of the table: "restaurant_cart_item" */
	update_restaurant_cart_item_by_pk?:PartialObjects["restaurant_cart_item"],
			/** update multiples rows of table: "restaurant_cart_item" */
	update_restaurant_cart_item_many?:(PartialObjects["restaurant_cart_item_mutation_response"] | undefined)[],
			/** update multiples rows of table: "restaurant_cart" */
	update_restaurant_cart_many?:(PartialObjects["restaurant_cart_mutation_response"] | undefined)[],
			/** update data of the table: "restaurant_category" */
	update_restaurant_category?:PartialObjects["restaurant_category_mutation_response"],
			/** update single row of the table: "restaurant_category" */
	update_restaurant_category_by_pk?:PartialObjects["restaurant_category"],
			/** update multiples rows of table: "restaurant_category" */
	update_restaurant_category_many?:(PartialObjects["restaurant_category_mutation_response"] | undefined)[],
			/** update data of the table: "restaurant_choice" */
	update_restaurant_choice?:PartialObjects["restaurant_choice_mutation_response"],
			/** update single row of the table: "restaurant_choice" */
	update_restaurant_choice_by_pk?:PartialObjects["restaurant_choice"],
			/** update multiples rows of table: "restaurant_choice" */
	update_restaurant_choice_many?:(PartialObjects["restaurant_choice_mutation_response"] | undefined)[],
			/** update data of the table: "restaurant_item" */
	update_restaurant_item?:PartialObjects["restaurant_item_mutation_response"],
			/** update single row of the table: "restaurant_item" */
	update_restaurant_item_by_pk?:PartialObjects["restaurant_item"],
			/** update multiples rows of table: "restaurant_item" */
	update_restaurant_item_many?:(PartialObjects["restaurant_item_mutation_response"] | undefined)[],
			/** update data of the table: "restaurant_item_option_map" */
	update_restaurant_item_option_map?:PartialObjects["restaurant_item_option_map_mutation_response"],
			/** update single row of the table: "restaurant_item_option_map" */
	update_restaurant_item_option_map_by_pk?:PartialObjects["restaurant_item_option_map"],
			/** update multiples rows of table: "restaurant_item_option_map" */
	update_restaurant_item_option_map_many?:(PartialObjects["restaurant_item_option_map_mutation_response"] | undefined)[],
			/** update multiples rows of table: "restaurant" */
	update_restaurant_many?:(PartialObjects["restaurant_mutation_response"] | undefined)[],
			/** update data of the table: "restaurant_operator" */
	update_restaurant_operator?:PartialObjects["restaurant_operator_mutation_response"],
			/** update single row of the table: "restaurant_operator" */
	update_restaurant_operator_by_pk?:PartialObjects["restaurant_operator"],
			/** update multiples rows of table: "restaurant_operator" */
	update_restaurant_operator_many?:(PartialObjects["restaurant_operator_mutation_response"] | undefined)[],
			/** update data of the table: "restaurant_option" */
	update_restaurant_option?:PartialObjects["restaurant_option_mutation_response"],
			/** update single row of the table: "restaurant_option" */
	update_restaurant_option_by_pk?:PartialObjects["restaurant_option"],
			/** update data of the table: "restaurant_option_choice_map" */
	update_restaurant_option_choice_map?:PartialObjects["restaurant_option_choice_map_mutation_response"],
			/** update single row of the table: "restaurant_option_choice_map" */
	update_restaurant_option_choice_map_by_pk?:PartialObjects["restaurant_option_choice_map"],
			/** update multiples rows of table: "restaurant_option_choice_map" */
	update_restaurant_option_choice_map_many?:(PartialObjects["restaurant_option_choice_map_mutation_response"] | undefined)[],
			/** update multiples rows of table: "restaurant_option" */
	update_restaurant_option_many?:(PartialObjects["restaurant_option_mutation_response"] | undefined)[],
			/** update data of the table: "restaurant_order" */
	update_restaurant_order?:PartialObjects["restaurant_order_mutation_response"],
			/** update single row of the table: "restaurant_order" */
	update_restaurant_order_by_pk?:PartialObjects["restaurant_order"],
			/** update data of the table: "restaurant_order_item" */
	update_restaurant_order_item?:PartialObjects["restaurant_order_item_mutation_response"],
			/** update single row of the table: "restaurant_order_item" */
	update_restaurant_order_item_by_pk?:PartialObjects["restaurant_order_item"],
			/** update multiples rows of table: "restaurant_order_item" */
	update_restaurant_order_item_many?:(PartialObjects["restaurant_order_item_mutation_response"] | undefined)[],
			/** update multiples rows of table: "restaurant_order" */
	update_restaurant_order_many?:(PartialObjects["restaurant_order_mutation_response"] | undefined)[],
			/** update data of the table: "restaurant_order_public" */
	update_restaurant_order_public?:PartialObjects["restaurant_order_public_mutation_response"],
			/** update multiples rows of table: "restaurant_order_public" */
	update_restaurant_order_public_many?:(PartialObjects["restaurant_order_public_mutation_response"] | undefined)[],
			/** update data of the table: "review" */
	update_review?:PartialObjects["review_mutation_response"],
			/** update single row of the table: "review" */
	update_review_by_pk?:PartialObjects["review"],
			/** update multiples rows of table: "review" */
	update_review_many?:(PartialObjects["review_mutation_response"] | undefined)[],
			/** update data of the table: "saved_location" */
	update_saved_location?:PartialObjects["saved_location_mutation_response"],
			/** update single row of the table: "saved_location" */
	update_saved_location_by_pk?:PartialObjects["saved_location"],
			/** update multiples rows of table: "saved_location" */
	update_saved_location_many?:(PartialObjects["saved_location_mutation_response"] | undefined)[],
			/** update data of the table: "service_provider_payment_info" */
	update_service_provider_payment_info?:PartialObjects["service_provider_payment_info_mutation_response"],
			/** update single row of the table: "service_provider_payment_info" */
	update_service_provider_payment_info_by_pk?:PartialObjects["service_provider_payment_info"],
			/** update multiples rows of table: "service_provider_payment_info" */
	update_service_provider_payment_info_many?:(PartialObjects["service_provider_payment_info_mutation_response"] | undefined)[],
			/** update data of the table: "stripe_info" */
	update_stripe_info?:PartialObjects["stripe_info_mutation_response"],
			/** update single row of the table: "stripe_info" */
	update_stripe_info_by_pk?:PartialObjects["stripe_info"],
			/** update multiples rows of table: "stripe_info" */
	update_stripe_info_many?:(PartialObjects["stripe_info_mutation_response"] | undefined)[],
			/** update data of the table: "topology.app_type" */
	update_topology_app_type?:PartialObjects["topology_app_type_mutation_response"],
			/** update single row of the table: "topology.app_type" */
	update_topology_app_type_by_pk?:PartialObjects["topology_app_type"],
			/** update multiples rows of table: "topology.app_type" */
	update_topology_app_type_many?:(PartialObjects["topology_app_type_mutation_response"] | undefined)[],
			/** update data of the table: "topology.language" */
	update_topology_language?:PartialObjects["topology_language_mutation_response"],
			/** update single row of the table: "topology.language" */
	update_topology_language_by_pk?:PartialObjects["topology_language"],
			/** update multiples rows of table: "topology.language" */
	update_topology_language_many?:(PartialObjects["topology_language_mutation_response"] | undefined)[],
			/** update data of the table: "translation" */
	update_translation?:PartialObjects["translation_mutation_response"],
			/** update single row of the table: "translation" */
	update_translation_by_pk?:PartialObjects["translation"],
			/** update multiples rows of table: "translation" */
	update_translation_many?:(PartialObjects["translation_mutation_response"] | undefined)[],
			/** update data of the table: "translation_value" */
	update_translation_value?:PartialObjects["translation_value_mutation_response"],
			/** update single row of the table: "translation_value" */
	update_translation_value_by_pk?:PartialObjects["translation_value"],
			/** update multiples rows of table: "translation_value" */
	update_translation_value_many?:(PartialObjects["translation_value_mutation_response"] | undefined)[],
			/** update data of the table: "user" */
	update_user?:PartialObjects["user_mutation_response"],
			/** update single row of the table: "user" */
	update_user_by_pk?:PartialObjects["user"],
			/** update multiples rows of table: "user" */
	update_user_many?:(PartialObjects["user_mutation_response"] | undefined)[]
	},
	/** columns and relationships of "notification_info" */
["notification_info"]: {
		__typename?: "notification_info";
			app_type_id?:string,
			id?:number,
			token?:string,
			user_id?:number
	},
	/** aggregated selection of "notification_info" */
["notification_info_aggregate"]: {
		__typename?: "notification_info_aggregate";
			aggregate?:PartialObjects["notification_info_aggregate_fields"],
			nodes?:PartialObjects["notification_info"][]
	},
	/** aggregate fields of "notification_info" */
["notification_info_aggregate_fields"]: {
		__typename?: "notification_info_aggregate_fields";
			avg?:PartialObjects["notification_info_avg_fields"],
			count?:number,
			max?:PartialObjects["notification_info_max_fields"],
			min?:PartialObjects["notification_info_min_fields"],
			stddev?:PartialObjects["notification_info_stddev_fields"],
			stddev_pop?:PartialObjects["notification_info_stddev_pop_fields"],
			stddev_samp?:PartialObjects["notification_info_stddev_samp_fields"],
			sum?:PartialObjects["notification_info_sum_fields"],
			var_pop?:PartialObjects["notification_info_var_pop_fields"],
			var_samp?:PartialObjects["notification_info_var_samp_fields"],
			variance?:PartialObjects["notification_info_variance_fields"]
	},
	/** aggregate avg on columns */
["notification_info_avg_fields"]: {
		__typename?: "notification_info_avg_fields";
			id?:number,
			user_id?:number
	},
	/** Boolean expression to filter rows from the table "notification_info". All fields are combined with a logical 'AND'. */
["notification_info_bool_exp"]: {
	_and?:PartialObjects["notification_info_bool_exp"][],
	_not?:PartialObjects["notification_info_bool_exp"],
	_or?:PartialObjects["notification_info_bool_exp"][],
	app_type_id?:PartialObjects["String_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	token?:PartialObjects["String_comparison_exp"],
	user_id?:PartialObjects["Int_comparison_exp"]
},
	/** unique or primary key constraints on table "notification_info" */
["notification_info_constraint"]:notification_info_constraint,
	/** input type for incrementing numeric columns in table "notification_info" */
["notification_info_inc_input"]: {
	id?:number,
	user_id?:number
},
	/** input type for inserting data into table "notification_info" */
["notification_info_insert_input"]: {
	app_type_id?:string,
	id?:number,
	token?:string,
	user_id?:number
},
	/** aggregate max on columns */
["notification_info_max_fields"]: {
		__typename?: "notification_info_max_fields";
			app_type_id?:string,
			id?:number,
			token?:string,
			user_id?:number
	},
	/** aggregate min on columns */
["notification_info_min_fields"]: {
		__typename?: "notification_info_min_fields";
			app_type_id?:string,
			id?:number,
			token?:string,
			user_id?:number
	},
	/** response of any mutation on the table "notification_info" */
["notification_info_mutation_response"]: {
		__typename?: "notification_info_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["notification_info"][]
	},
	/** input type for inserting object relation for remote table "notification_info" */
["notification_info_obj_rel_insert_input"]: {
	data:PartialObjects["notification_info_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["notification_info_on_conflict"]
},
	/** on_conflict condition type for table "notification_info" */
["notification_info_on_conflict"]: {
	constraint:PartialObjects["notification_info_constraint"],
	update_columns:PartialObjects["notification_info_update_column"][],
	where?:PartialObjects["notification_info_bool_exp"]
},
	/** Ordering options when selecting data from "notification_info". */
["notification_info_order_by"]: {
	app_type_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	token?:PartialObjects["order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: notification_info */
["notification_info_pk_columns_input"]: {
	id:number
},
	/** select columns of table "notification_info" */
["notification_info_select_column"]:notification_info_select_column,
	/** input type for updating data in table "notification_info" */
["notification_info_set_input"]: {
	app_type_id?:string,
	id?:number,
	token?:string,
	user_id?:number
},
	/** aggregate stddev on columns */
["notification_info_stddev_fields"]: {
		__typename?: "notification_info_stddev_fields";
			id?:number,
			user_id?:number
	},
	/** aggregate stddev_pop on columns */
["notification_info_stddev_pop_fields"]: {
		__typename?: "notification_info_stddev_pop_fields";
			id?:number,
			user_id?:number
	},
	/** aggregate stddev_samp on columns */
["notification_info_stddev_samp_fields"]: {
		__typename?: "notification_info_stddev_samp_fields";
			id?:number,
			user_id?:number
	},
	/** Streaming cursor of the table "notification_info" */
["notification_info_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["notification_info_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["notification_info_stream_cursor_value_input"]: {
	app_type_id?:string,
	id?:number,
	token?:string,
	user_id?:number
},
	/** aggregate sum on columns */
["notification_info_sum_fields"]: {
		__typename?: "notification_info_sum_fields";
			id?:number,
			user_id?:number
	},
	/** update columns of table "notification_info" */
["notification_info_update_column"]:notification_info_update_column,
	["notification_info_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["notification_info_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["notification_info_set_input"],
	where:PartialObjects["notification_info_bool_exp"]
},
	/** aggregate var_pop on columns */
["notification_info_var_pop_fields"]: {
		__typename?: "notification_info_var_pop_fields";
			id?:number,
			user_id?:number
	},
	/** aggregate var_samp on columns */
["notification_info_var_samp_fields"]: {
		__typename?: "notification_info_var_samp_fields";
			id?:number,
			user_id?:number
	},
	/** aggregate variance on columns */
["notification_info_variance_fields"]: {
		__typename?: "notification_info_variance_fields";
			id?:number,
			user_id?:number
	},
	/** column ordering options */
["order_by"]:order_by,
	["query_root"]: {
		__typename?: "query_root";
			/** fetch data from the table: "chat" */
	chat?:PartialObjects["chat"][],
			/** fetch aggregated fields from the table: "chat" */
	chat_aggregate?:PartialObjects["chat_aggregate"],
			/** fetch data from the table: "chat" using primary key columns */
	chat_by_pk?:PartialObjects["chat"],
			/** fetch data from the table: "chat_participant" */
	chat_participant?:PartialObjects["chat_participant"][],
			/** fetch aggregated fields from the table: "chat_participant" */
	chat_participant_aggregate?:PartialObjects["chat_participant_aggregate"],
			/** fetch data from the table: "chat_participant" using primary key columns */
	chat_participant_by_pk?:PartialObjects["chat_participant"],
			/** fetch data from the table: "customer" */
	customer?:PartialObjects["customer"][],
			/** fetch aggregated fields from the table: "customer" */
	customer_aggregate?:PartialObjects["customer_aggregate"],
			/** fetch data from the table: "customer" using primary key columns */
	customer_by_pk?:PartialObjects["customer"],
			/** fetch data from the table: "deliverer" */
	deliverer?:PartialObjects["deliverer"][],
			/** fetch aggregated fields from the table: "deliverer" */
	deliverer_aggregate?:PartialObjects["deliverer_aggregate"],
			/** fetch data from the table: "deliverer" using primary key columns */
	deliverer_by_pk?:PartialObjects["deliverer"],
			/** fetch data from the table: "delivery_order" */
	delivery_order?:PartialObjects["delivery_order"][],
			/** fetch aggregated fields from the table: "delivery_order" */
	delivery_order_aggregate?:PartialObjects["delivery_order_aggregate"],
			/** fetch data from the table: "delivery_order" using primary key columns */
	delivery_order_by_pk?:PartialObjects["delivery_order"],
			/** fetch data from the table: "delivery_order_public" */
	delivery_order_public?:PartialObjects["delivery_order_public"][],
			/** fetch aggregated fields from the table: "delivery_order_public" */
	delivery_order_public_aggregate?:PartialObjects["delivery_order_public_aggregate"],
			/** fetch data from the table: "mez_admin" */
	mez_admin?:PartialObjects["mez_admin"][],
			/** fetch aggregated fields from the table: "mez_admin" */
	mez_admin_aggregate?:PartialObjects["mez_admin_aggregate"],
			/** fetch data from the table: "mez_admin" using primary key columns */
	mez_admin_by_pk?:PartialObjects["mez_admin"],
			/** fetch data from the table: "notification_info" */
	notification_info?:PartialObjects["notification_info"][],
			/** fetch aggregated fields from the table: "notification_info" */
	notification_info_aggregate?:PartialObjects["notification_info_aggregate"],
			/** fetch data from the table: "notification_info" using primary key columns */
	notification_info_by_pk?:PartialObjects["notification_info"],
			/** fetch data from the table: "restaurant" */
	restaurant?:PartialObjects["restaurant"][],
			/** fetch aggregated fields from the table: "restaurant" */
	restaurant_aggregate?:PartialObjects["restaurant_aggregate"],
			/** fetch data from the table: "restaurant" using primary key columns */
	restaurant_by_pk?:PartialObjects["restaurant"],
			/** fetch data from the table: "restaurant_cart" */
	restaurant_cart?:PartialObjects["restaurant_cart"][],
			/** fetch aggregated fields from the table: "restaurant_cart" */
	restaurant_cart_aggregate?:PartialObjects["restaurant_cart_aggregate"],
			/** fetch data from the table: "restaurant_cart" using primary key columns */
	restaurant_cart_by_pk?:PartialObjects["restaurant_cart"],
			/** fetch data from the table: "restaurant_cart_item" */
	restaurant_cart_item?:PartialObjects["restaurant_cart_item"][],
			/** fetch aggregated fields from the table: "restaurant_cart_item" */
	restaurant_cart_item_aggregate?:PartialObjects["restaurant_cart_item_aggregate"],
			/** fetch data from the table: "restaurant_cart_item" using primary key columns */
	restaurant_cart_item_by_pk?:PartialObjects["restaurant_cart_item"],
			/** fetch data from the table: "restaurant_category" */
	restaurant_category?:PartialObjects["restaurant_category"][],
			/** fetch aggregated fields from the table: "restaurant_category" */
	restaurant_category_aggregate?:PartialObjects["restaurant_category_aggregate"],
			/** fetch data from the table: "restaurant_category" using primary key columns */
	restaurant_category_by_pk?:PartialObjects["restaurant_category"],
			/** fetch data from the table: "restaurant_choice" */
	restaurant_choice?:PartialObjects["restaurant_choice"][],
			/** fetch aggregated fields from the table: "restaurant_choice" */
	restaurant_choice_aggregate?:PartialObjects["restaurant_choice_aggregate"],
			/** fetch data from the table: "restaurant_choice" using primary key columns */
	restaurant_choice_by_pk?:PartialObjects["restaurant_choice"],
			/** fetch data from the table: "restaurant_item" */
	restaurant_item?:PartialObjects["restaurant_item"][],
			/** fetch aggregated fields from the table: "restaurant_item" */
	restaurant_item_aggregate?:PartialObjects["restaurant_item_aggregate"],
			/** fetch data from the table: "restaurant_item" using primary key columns */
	restaurant_item_by_pk?:PartialObjects["restaurant_item"],
			/** fetch data from the table: "restaurant_item_option_map" */
	restaurant_item_option_map?:PartialObjects["restaurant_item_option_map"][],
			/** fetch aggregated fields from the table: "restaurant_item_option_map" */
	restaurant_item_option_map_aggregate?:PartialObjects["restaurant_item_option_map_aggregate"],
			/** fetch data from the table: "restaurant_item_option_map" using primary key columns */
	restaurant_item_option_map_by_pk?:PartialObjects["restaurant_item_option_map"],
			/** fetch data from the table: "restaurant_operator" */
	restaurant_operator?:PartialObjects["restaurant_operator"][],
			/** fetch aggregated fields from the table: "restaurant_operator" */
	restaurant_operator_aggregate?:PartialObjects["restaurant_operator_aggregate"],
			/** fetch data from the table: "restaurant_operator" using primary key columns */
	restaurant_operator_by_pk?:PartialObjects["restaurant_operator"],
			/** fetch data from the table: "restaurant_option" */
	restaurant_option?:PartialObjects["restaurant_option"][],
			/** fetch aggregated fields from the table: "restaurant_option" */
	restaurant_option_aggregate?:PartialObjects["restaurant_option_aggregate"],
			/** fetch data from the table: "restaurant_option" using primary key columns */
	restaurant_option_by_pk?:PartialObjects["restaurant_option"],
			/** fetch data from the table: "restaurant_option_choice_map" */
	restaurant_option_choice_map?:PartialObjects["restaurant_option_choice_map"][],
			/** fetch aggregated fields from the table: "restaurant_option_choice_map" */
	restaurant_option_choice_map_aggregate?:PartialObjects["restaurant_option_choice_map_aggregate"],
			/** fetch data from the table: "restaurant_option_choice_map" using primary key columns */
	restaurant_option_choice_map_by_pk?:PartialObjects["restaurant_option_choice_map"],
			/** fetch data from the table: "restaurant_order" */
	restaurant_order?:PartialObjects["restaurant_order"][],
			/** fetch aggregated fields from the table: "restaurant_order" */
	restaurant_order_aggregate?:PartialObjects["restaurant_order_aggregate"],
			/** fetch data from the table: "restaurant_order" using primary key columns */
	restaurant_order_by_pk?:PartialObjects["restaurant_order"],
			/** fetch data from the table: "restaurant_order_item" */
	restaurant_order_item?:PartialObjects["restaurant_order_item"][],
			/** fetch aggregated fields from the table: "restaurant_order_item" */
	restaurant_order_item_aggregate?:PartialObjects["restaurant_order_item_aggregate"],
			/** fetch data from the table: "restaurant_order_item" using primary key columns */
	restaurant_order_item_by_pk?:PartialObjects["restaurant_order_item"],
			/** fetch data from the table: "restaurant_order_public" */
	restaurant_order_public?:PartialObjects["restaurant_order_public"][],
			/** fetch aggregated fields from the table: "restaurant_order_public" */
	restaurant_order_public_aggregate?:PartialObjects["restaurant_order_public_aggregate"],
			/** fetch data from the table: "review" */
	review?:PartialObjects["review"][],
			/** fetch aggregated fields from the table: "review" */
	review_aggregate?:PartialObjects["review_aggregate"],
			/** fetch data from the table: "review" using primary key columns */
	review_by_pk?:PartialObjects["review"],
			/** fetch data from the table: "saved_location" */
	saved_location?:PartialObjects["saved_location"][],
			/** fetch aggregated fields from the table: "saved_location" */
	saved_location_aggregate?:PartialObjects["saved_location_aggregate"],
			/** fetch data from the table: "saved_location" using primary key columns */
	saved_location_by_pk?:PartialObjects["saved_location"],
			/** fetch data from the table: "service_provider_payment_info" */
	service_provider_payment_info?:PartialObjects["service_provider_payment_info"][],
			/** fetch aggregated fields from the table: "service_provider_payment_info" */
	service_provider_payment_info_aggregate?:PartialObjects["service_provider_payment_info_aggregate"],
			/** fetch data from the table: "service_provider_payment_info" using primary key columns */
	service_provider_payment_info_by_pk?:PartialObjects["service_provider_payment_info"],
			/** fetch data from the table: "stripe_info" */
	stripe_info?:PartialObjects["stripe_info"][],
			/** fetch aggregated fields from the table: "stripe_info" */
	stripe_info_aggregate?:PartialObjects["stripe_info_aggregate"],
			/** fetch data from the table: "stripe_info" using primary key columns */
	stripe_info_by_pk?:PartialObjects["stripe_info"],
			/** fetch data from the table: "topology.app_type" */
	topology_app_type?:PartialObjects["topology_app_type"][],
			/** fetch aggregated fields from the table: "topology.app_type" */
	topology_app_type_aggregate?:PartialObjects["topology_app_type_aggregate"],
			/** fetch data from the table: "topology.app_type" using primary key columns */
	topology_app_type_by_pk?:PartialObjects["topology_app_type"],
			/** fetch data from the table: "topology.language" */
	topology_language?:PartialObjects["topology_language"][],
			/** fetch aggregated fields from the table: "topology.language" */
	topology_language_aggregate?:PartialObjects["topology_language_aggregate"],
			/** fetch data from the table: "topology.language" using primary key columns */
	topology_language_by_pk?:PartialObjects["topology_language"],
			/** fetch data from the table: "translation" */
	translation?:PartialObjects["translation"][],
			/** fetch aggregated fields from the table: "translation" */
	translation_aggregate?:PartialObjects["translation_aggregate"],
			/** fetch data from the table: "translation" using primary key columns */
	translation_by_pk?:PartialObjects["translation"],
			/** fetch data from the table: "translation_value" */
	translation_value?:PartialObjects["translation_value"][],
			/** fetch aggregated fields from the table: "translation_value" */
	translation_value_aggregate?:PartialObjects["translation_value_aggregate"],
			/** fetch data from the table: "translation_value" using primary key columns */
	translation_value_by_pk?:PartialObjects["translation_value"],
			/** fetch data from the table: "user" */
	user?:PartialObjects["user"][],
			/** fetch aggregated fields from the table: "user" */
	user_aggregate?:PartialObjects["user_aggregate"],
			/** fetch data from the table: "user" using primary key columns */
	user_by_pk?:PartialObjects["user"]
	},
	/** columns and relationships of "restaurant" */
["restaurant"]: {
		__typename?: "restaurant";
			approved?:boolean,
			/** An array relationship */
	categories?:PartialObjects["restaurant_category"][],
			/** An aggregate relationship */
	categories_aggregate?:PartialObjects["restaurant_category_aggregate"],
			/** An object relationship */
	description?:PartialObjects["translation"],
			description_id?:number,
			firebase_id?:string,
			id?:number,
			image?:string,
			language_id?:string,
			location_gps?:PartialObjects["geography"],
			location_text?:string,
			name?:string,
			/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
			/** An array relationship */
	orders?:PartialObjects["restaurant_order"][],
			/** An aggregate relationship */
	orders_aggregate?:PartialObjects["restaurant_order_aggregate"],
			/** An object relationship */
	payment_info?:PartialObjects["service_provider_payment_info"],
			payment_info_id?:number,
			/** An array relationship */
	restaurant_operators?:PartialObjects["restaurant_operator"][],
			/** An aggregate relationship */
	restaurant_operators_aggregate?:PartialObjects["restaurant_operator_aggregate"],
			schedule_id?:number,
			self_delivery?:boolean,
			service_provider_type?:string,
			/** A computed field, executes function "special_items" */
	specials?:PartialObjects["restaurant_item"][]
	},
	/** aggregated selection of "restaurant" */
["restaurant_aggregate"]: {
		__typename?: "restaurant_aggregate";
			aggregate?:PartialObjects["restaurant_aggregate_fields"],
			nodes?:PartialObjects["restaurant"][]
	},
	/** aggregate fields of "restaurant" */
["restaurant_aggregate_fields"]: {
		__typename?: "restaurant_aggregate_fields";
			avg?:PartialObjects["restaurant_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_max_fields"],
			min?:PartialObjects["restaurant_min_fields"],
			stddev?:PartialObjects["restaurant_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_sum_fields"],
			var_pop?:PartialObjects["restaurant_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_var_samp_fields"],
			variance?:PartialObjects["restaurant_variance_fields"]
	},
	/** aggregate avg on columns */
["restaurant_avg_fields"]: {
		__typename?: "restaurant_avg_fields";
			description_id?:number,
			id?:number,
			payment_info_id?:number,
			schedule_id?:number
	},
	/** Boolean expression to filter rows from the table "restaurant". All fields are combined with a logical 'AND'. */
["restaurant_bool_exp"]: {
	_and?:PartialObjects["restaurant_bool_exp"][],
	_not?:PartialObjects["restaurant_bool_exp"],
	_or?:PartialObjects["restaurant_bool_exp"][],
	approved?:PartialObjects["Boolean_comparison_exp"],
	categories?:PartialObjects["restaurant_category_bool_exp"],
	description?:PartialObjects["translation_bool_exp"],
	description_id?:PartialObjects["Int_comparison_exp"],
	firebase_id?:PartialObjects["String_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	image?:PartialObjects["String_comparison_exp"],
	language_id?:PartialObjects["String_comparison_exp"],
	location_gps?:PartialObjects["geography_comparison_exp"],
	location_text?:PartialObjects["String_comparison_exp"],
	name?:PartialObjects["String_comparison_exp"],
	open_status?:PartialObjects["String_comparison_exp"],
	orders?:PartialObjects["restaurant_order_bool_exp"],
	payment_info?:PartialObjects["service_provider_payment_info_bool_exp"],
	payment_info_id?:PartialObjects["Int_comparison_exp"],
	restaurant_operators?:PartialObjects["restaurant_operator_bool_exp"],
	schedule_id?:PartialObjects["Int_comparison_exp"],
	self_delivery?:PartialObjects["Boolean_comparison_exp"],
	service_provider_type?:PartialObjects["String_comparison_exp"],
	specials?:PartialObjects["restaurant_item_bool_exp"]
},
	/** columns and relationships of "restaurant_cart" */
["restaurant_cart"]: {
		__typename?: "restaurant_cart";
			/** A computed field, executes function "cost" */
	cost?:PartialObjects["money"],
			/** An object relationship */
	customer?:PartialObjects["customer"],
			customer_id?:number,
			/** An array relationship */
	items?:PartialObjects["restaurant_cart_item"][],
			/** An aggregate relationship */
	items_aggregate?:PartialObjects["restaurant_cart_item_aggregate"],
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			restaurant_id?:number
	},
	/** aggregated selection of "restaurant_cart" */
["restaurant_cart_aggregate"]: {
		__typename?: "restaurant_cart_aggregate";
			aggregate?:PartialObjects["restaurant_cart_aggregate_fields"],
			nodes?:PartialObjects["restaurant_cart"][]
	},
	/** aggregate fields of "restaurant_cart" */
["restaurant_cart_aggregate_fields"]: {
		__typename?: "restaurant_cart_aggregate_fields";
			avg?:PartialObjects["restaurant_cart_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_cart_max_fields"],
			min?:PartialObjects["restaurant_cart_min_fields"],
			stddev?:PartialObjects["restaurant_cart_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_cart_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_cart_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_cart_sum_fields"],
			var_pop?:PartialObjects["restaurant_cart_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_cart_var_samp_fields"],
			variance?:PartialObjects["restaurant_cart_variance_fields"]
	},
	/** aggregate avg on columns */
["restaurant_cart_avg_fields"]: {
		__typename?: "restaurant_cart_avg_fields";
			customer_id?:number,
			restaurant_id?:number
	},
	/** Boolean expression to filter rows from the table "restaurant_cart". All fields are combined with a logical 'AND'. */
["restaurant_cart_bool_exp"]: {
	_and?:PartialObjects["restaurant_cart_bool_exp"][],
	_not?:PartialObjects["restaurant_cart_bool_exp"],
	_or?:PartialObjects["restaurant_cart_bool_exp"][],
	cost?:PartialObjects["money_comparison_exp"],
	customer?:PartialObjects["customer_bool_exp"],
	customer_id?:PartialObjects["Int_comparison_exp"],
	items?:PartialObjects["restaurant_cart_item_bool_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	restaurant_id?:PartialObjects["Int_comparison_exp"]
},
	/** unique or primary key constraints on table "restaurant_cart" */
["restaurant_cart_constraint"]:restaurant_cart_constraint,
	/** input type for incrementing numeric columns in table "restaurant_cart" */
["restaurant_cart_inc_input"]: {
	customer_id?:number,
	restaurant_id?:number
},
	/** input type for inserting data into table "restaurant_cart" */
["restaurant_cart_insert_input"]: {
	customer?:PartialObjects["customer_obj_rel_insert_input"],
	customer_id?:number,
	items?:PartialObjects["restaurant_cart_item_arr_rel_insert_input"],
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	restaurant_id?:number
},
	/** columns and relationships of "restaurant_cart_item" */
["restaurant_cart_item"]: {
		__typename?: "restaurant_cart_item";
			cost_per_one?:PartialObjects["money"],
			customer_id?:number,
			id?:number,
			note?:string,
			quantity?:number,
			/** An object relationship */
	restaurant_cart?:PartialObjects["restaurant_cart"],
			/** An object relationship */
	restaurant_item?:PartialObjects["restaurant_item"],
			restaurant_item_id?:number,
			/** {<option-id>:[<choice-id>] */
	selected_options?:PartialObjects["json"]
	},
	/** aggregated selection of "restaurant_cart_item" */
["restaurant_cart_item_aggregate"]: {
		__typename?: "restaurant_cart_item_aggregate";
			aggregate?:PartialObjects["restaurant_cart_item_aggregate_fields"],
			nodes?:PartialObjects["restaurant_cart_item"][]
	},
	/** aggregate fields of "restaurant_cart_item" */
["restaurant_cart_item_aggregate_fields"]: {
		__typename?: "restaurant_cart_item_aggregate_fields";
			avg?:PartialObjects["restaurant_cart_item_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_cart_item_max_fields"],
			min?:PartialObjects["restaurant_cart_item_min_fields"],
			stddev?:PartialObjects["restaurant_cart_item_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_cart_item_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_cart_item_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_cart_item_sum_fields"],
			var_pop?:PartialObjects["restaurant_cart_item_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_cart_item_var_samp_fields"],
			variance?:PartialObjects["restaurant_cart_item_variance_fields"]
	},
	/** order by aggregate values of table "restaurant_cart_item" */
["restaurant_cart_item_aggregate_order_by"]: {
	avg?:PartialObjects["restaurant_cart_item_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["restaurant_cart_item_max_order_by"],
	min?:PartialObjects["restaurant_cart_item_min_order_by"],
	stddev?:PartialObjects["restaurant_cart_item_stddev_order_by"],
	stddev_pop?:PartialObjects["restaurant_cart_item_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["restaurant_cart_item_stddev_samp_order_by"],
	sum?:PartialObjects["restaurant_cart_item_sum_order_by"],
	var_pop?:PartialObjects["restaurant_cart_item_var_pop_order_by"],
	var_samp?:PartialObjects["restaurant_cart_item_var_samp_order_by"],
	variance?:PartialObjects["restaurant_cart_item_variance_order_by"]
},
	/** input type for inserting array relation for remote table "restaurant_cart_item" */
["restaurant_cart_item_arr_rel_insert_input"]: {
	data:PartialObjects["restaurant_cart_item_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_cart_item_on_conflict"]
},
	/** aggregate avg on columns */
["restaurant_cart_item_avg_fields"]: {
		__typename?: "restaurant_cart_item_avg_fields";
			cost_per_one?:number,
			customer_id?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number
	},
	/** order by avg() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_avg_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "restaurant_cart_item". All fields are combined with a logical 'AND'. */
["restaurant_cart_item_bool_exp"]: {
	_and?:PartialObjects["restaurant_cart_item_bool_exp"][],
	_not?:PartialObjects["restaurant_cart_item_bool_exp"],
	_or?:PartialObjects["restaurant_cart_item_bool_exp"][],
	cost_per_one?:PartialObjects["money_comparison_exp"],
	customer_id?:PartialObjects["Int_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	note?:PartialObjects["String_comparison_exp"],
	quantity?:PartialObjects["Int_comparison_exp"],
	restaurant_cart?:PartialObjects["restaurant_cart_bool_exp"],
	restaurant_item?:PartialObjects["restaurant_item_bool_exp"],
	restaurant_item_id?:PartialObjects["Int_comparison_exp"],
	selected_options?:PartialObjects["json_comparison_exp"]
},
	/** unique or primary key constraints on table "restaurant_cart_item" */
["restaurant_cart_item_constraint"]:restaurant_cart_item_constraint,
	/** input type for incrementing numeric columns in table "restaurant_cart_item" */
["restaurant_cart_item_inc_input"]: {
	cost_per_one?:PartialObjects["money"],
	customer_id?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number
},
	/** input type for inserting data into table "restaurant_cart_item" */
["restaurant_cart_item_insert_input"]: {
	cost_per_one?:PartialObjects["money"],
	customer_id?:number,
	id?:number,
	note?:string,
	quantity?:number,
	restaurant_cart?:PartialObjects["restaurant_cart_obj_rel_insert_input"],
	restaurant_item?:PartialObjects["restaurant_item_obj_rel_insert_input"],
	restaurant_item_id?:number,
	/** {<option-id>:[<choice-id>] */
	selected_options?:PartialObjects["json"]
},
	/** aggregate max on columns */
["restaurant_cart_item_max_fields"]: {
		__typename?: "restaurant_cart_item_max_fields";
			cost_per_one?:PartialObjects["money"],
			customer_id?:number,
			id?:number,
			note?:string,
			quantity?:number,
			restaurant_item_id?:number
	},
	/** order by max() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_max_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	note?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["restaurant_cart_item_min_fields"]: {
		__typename?: "restaurant_cart_item_min_fields";
			cost_per_one?:PartialObjects["money"],
			customer_id?:number,
			id?:number,
			note?:string,
			quantity?:number,
			restaurant_item_id?:number
	},
	/** order by min() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_min_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	note?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "restaurant_cart_item" */
["restaurant_cart_item_mutation_response"]: {
		__typename?: "restaurant_cart_item_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant_cart_item"][]
	},
	/** on_conflict condition type for table "restaurant_cart_item" */
["restaurant_cart_item_on_conflict"]: {
	constraint:PartialObjects["restaurant_cart_item_constraint"],
	update_columns:PartialObjects["restaurant_cart_item_update_column"][],
	where?:PartialObjects["restaurant_cart_item_bool_exp"]
},
	/** Ordering options when selecting data from "restaurant_cart_item". */
["restaurant_cart_item_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	note?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_cart?:PartialObjects["restaurant_cart_order_by"],
	restaurant_item?:PartialObjects["restaurant_item_order_by"],
	restaurant_item_id?:PartialObjects["order_by"],
	selected_options?:PartialObjects["order_by"]
},
	/** primary key columns input for table: restaurant_cart_item */
["restaurant_cart_item_pk_columns_input"]: {
	id:number
},
	/** select columns of table "restaurant_cart_item" */
["restaurant_cart_item_select_column"]:restaurant_cart_item_select_column,
	/** input type for updating data in table "restaurant_cart_item" */
["restaurant_cart_item_set_input"]: {
	cost_per_one?:PartialObjects["money"],
	customer_id?:number,
	id?:number,
	note?:string,
	quantity?:number,
	restaurant_item_id?:number,
	/** {<option-id>:[<choice-id>] */
	selected_options?:PartialObjects["json"]
},
	/** aggregate stddev on columns */
["restaurant_cart_item_stddev_fields"]: {
		__typename?: "restaurant_cart_item_stddev_fields";
			cost_per_one?:number,
			customer_id?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number
	},
	/** order by stddev() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_stddev_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["restaurant_cart_item_stddev_pop_fields"]: {
		__typename?: "restaurant_cart_item_stddev_pop_fields";
			cost_per_one?:number,
			customer_id?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number
	},
	/** order by stddev_pop() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_stddev_pop_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["restaurant_cart_item_stddev_samp_fields"]: {
		__typename?: "restaurant_cart_item_stddev_samp_fields";
			cost_per_one?:number,
			customer_id?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number
	},
	/** order by stddev_samp() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_stddev_samp_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "restaurant_cart_item" */
["restaurant_cart_item_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_cart_item_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_cart_item_stream_cursor_value_input"]: {
	cost_per_one?:PartialObjects["money"],
	customer_id?:number,
	id?:number,
	note?:string,
	quantity?:number,
	restaurant_item_id?:number,
	/** {<option-id>:[<choice-id>] */
	selected_options?:PartialObjects["json"]
},
	/** aggregate sum on columns */
["restaurant_cart_item_sum_fields"]: {
		__typename?: "restaurant_cart_item_sum_fields";
			cost_per_one?:PartialObjects["money"],
			customer_id?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number
	},
	/** order by sum() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_sum_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"]
},
	/** update columns of table "restaurant_cart_item" */
["restaurant_cart_item_update_column"]:restaurant_cart_item_update_column,
	["restaurant_cart_item_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_cart_item_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_cart_item_set_input"],
	where:PartialObjects["restaurant_cart_item_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_cart_item_var_pop_fields"]: {
		__typename?: "restaurant_cart_item_var_pop_fields";
			cost_per_one?:number,
			customer_id?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number
	},
	/** order by var_pop() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_var_pop_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["restaurant_cart_item_var_samp_fields"]: {
		__typename?: "restaurant_cart_item_var_samp_fields";
			cost_per_one?:number,
			customer_id?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number
	},
	/** order by var_samp() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_var_samp_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["restaurant_cart_item_variance_fields"]: {
		__typename?: "restaurant_cart_item_variance_fields";
			cost_per_one?:number,
			customer_id?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number
	},
	/** order by variance() on columns of table "restaurant_cart_item" */
["restaurant_cart_item_variance_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"]
},
	/** aggregate max on columns */
["restaurant_cart_max_fields"]: {
		__typename?: "restaurant_cart_max_fields";
			customer_id?:number,
			restaurant_id?:number
	},
	/** aggregate min on columns */
["restaurant_cart_min_fields"]: {
		__typename?: "restaurant_cart_min_fields";
			customer_id?:number,
			restaurant_id?:number
	},
	/** response of any mutation on the table "restaurant_cart" */
["restaurant_cart_mutation_response"]: {
		__typename?: "restaurant_cart_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant_cart"][]
	},
	/** input type for inserting object relation for remote table "restaurant_cart" */
["restaurant_cart_obj_rel_insert_input"]: {
	data:PartialObjects["restaurant_cart_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_cart_on_conflict"]
},
	/** on_conflict condition type for table "restaurant_cart" */
["restaurant_cart_on_conflict"]: {
	constraint:PartialObjects["restaurant_cart_constraint"],
	update_columns:PartialObjects["restaurant_cart_update_column"][],
	where?:PartialObjects["restaurant_cart_bool_exp"]
},
	/** Ordering options when selecting data from "restaurant_cart". */
["restaurant_cart_order_by"]: {
	cost?:PartialObjects["order_by"],
	customer?:PartialObjects["customer_order_by"],
	customer_id?:PartialObjects["order_by"],
	items_aggregate?:PartialObjects["restaurant_cart_item_aggregate_order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: restaurant_cart */
["restaurant_cart_pk_columns_input"]: {
	customer_id:number
},
	/** select columns of table "restaurant_cart" */
["restaurant_cart_select_column"]:restaurant_cart_select_column,
	/** input type for updating data in table "restaurant_cart" */
["restaurant_cart_set_input"]: {
	customer_id?:number,
	restaurant_id?:number
},
	/** aggregate stddev on columns */
["restaurant_cart_stddev_fields"]: {
		__typename?: "restaurant_cart_stddev_fields";
			customer_id?:number,
			restaurant_id?:number
	},
	/** aggregate stddev_pop on columns */
["restaurant_cart_stddev_pop_fields"]: {
		__typename?: "restaurant_cart_stddev_pop_fields";
			customer_id?:number,
			restaurant_id?:number
	},
	/** aggregate stddev_samp on columns */
["restaurant_cart_stddev_samp_fields"]: {
		__typename?: "restaurant_cart_stddev_samp_fields";
			customer_id?:number,
			restaurant_id?:number
	},
	/** Streaming cursor of the table "restaurant_cart" */
["restaurant_cart_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_cart_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_cart_stream_cursor_value_input"]: {
	customer_id?:number,
	restaurant_id?:number
},
	/** aggregate sum on columns */
["restaurant_cart_sum_fields"]: {
		__typename?: "restaurant_cart_sum_fields";
			customer_id?:number,
			restaurant_id?:number
	},
	/** update columns of table "restaurant_cart" */
["restaurant_cart_update_column"]:restaurant_cart_update_column,
	["restaurant_cart_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_cart_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_cart_set_input"],
	where:PartialObjects["restaurant_cart_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_cart_var_pop_fields"]: {
		__typename?: "restaurant_cart_var_pop_fields";
			customer_id?:number,
			restaurant_id?:number
	},
	/** aggregate var_samp on columns */
["restaurant_cart_var_samp_fields"]: {
		__typename?: "restaurant_cart_var_samp_fields";
			customer_id?:number,
			restaurant_id?:number
	},
	/** aggregate variance on columns */
["restaurant_cart_variance_fields"]: {
		__typename?: "restaurant_cart_variance_fields";
			customer_id?:number,
			restaurant_id?:number
	},
	/** columns and relationships of "restaurant_category" */
["restaurant_category"]: {
		__typename?: "restaurant_category";
			/** An object relationship */
	description?:PartialObjects["translation"],
			description_id?:number,
			id?:number,
			/** An array relationship */
	items?:PartialObjects["restaurant_item"][],
			/** An aggregate relationship */
	items_aggregate?:PartialObjects["restaurant_item_aggregate"],
			/** An object relationship */
	name?:PartialObjects["translation"],
			name_id?:number,
			position?:number,
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			restaurant_id?:number,
			schedule_id?:number
	},
	/** aggregated selection of "restaurant_category" */
["restaurant_category_aggregate"]: {
		__typename?: "restaurant_category_aggregate";
			aggregate?:PartialObjects["restaurant_category_aggregate_fields"],
			nodes?:PartialObjects["restaurant_category"][]
	},
	/** aggregate fields of "restaurant_category" */
["restaurant_category_aggregate_fields"]: {
		__typename?: "restaurant_category_aggregate_fields";
			avg?:PartialObjects["restaurant_category_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_category_max_fields"],
			min?:PartialObjects["restaurant_category_min_fields"],
			stddev?:PartialObjects["restaurant_category_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_category_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_category_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_category_sum_fields"],
			var_pop?:PartialObjects["restaurant_category_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_category_var_samp_fields"],
			variance?:PartialObjects["restaurant_category_variance_fields"]
	},
	/** order by aggregate values of table "restaurant_category" */
["restaurant_category_aggregate_order_by"]: {
	avg?:PartialObjects["restaurant_category_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["restaurant_category_max_order_by"],
	min?:PartialObjects["restaurant_category_min_order_by"],
	stddev?:PartialObjects["restaurant_category_stddev_order_by"],
	stddev_pop?:PartialObjects["restaurant_category_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["restaurant_category_stddev_samp_order_by"],
	sum?:PartialObjects["restaurant_category_sum_order_by"],
	var_pop?:PartialObjects["restaurant_category_var_pop_order_by"],
	var_samp?:PartialObjects["restaurant_category_var_samp_order_by"],
	variance?:PartialObjects["restaurant_category_variance_order_by"]
},
	/** input type for inserting array relation for remote table "restaurant_category" */
["restaurant_category_arr_rel_insert_input"]: {
	data:PartialObjects["restaurant_category_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_category_on_conflict"]
},
	/** aggregate avg on columns */
["restaurant_category_avg_fields"]: {
		__typename?: "restaurant_category_avg_fields";
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number,
			schedule_id?:number
	},
	/** order by avg() on columns of table "restaurant_category" */
["restaurant_category_avg_order_by"]: {
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	schedule_id?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "restaurant_category". All fields are combined with a logical 'AND'. */
["restaurant_category_bool_exp"]: {
	_and?:PartialObjects["restaurant_category_bool_exp"][],
	_not?:PartialObjects["restaurant_category_bool_exp"],
	_or?:PartialObjects["restaurant_category_bool_exp"][],
	description?:PartialObjects["translation_bool_exp"],
	description_id?:PartialObjects["Int_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	items?:PartialObjects["restaurant_item_bool_exp"],
	name?:PartialObjects["translation_bool_exp"],
	name_id?:PartialObjects["Int_comparison_exp"],
	position?:PartialObjects["Int_comparison_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	restaurant_id?:PartialObjects["Int_comparison_exp"],
	schedule_id?:PartialObjects["Int_comparison_exp"]
},
	/** unique or primary key constraints on table "restaurant_category" */
["restaurant_category_constraint"]:restaurant_category_constraint,
	/** input type for incrementing numeric columns in table "restaurant_category" */
["restaurant_category_inc_input"]: {
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
},
	/** input type for inserting data into table "restaurant_category" */
["restaurant_category_insert_input"]: {
	description?:PartialObjects["translation_obj_rel_insert_input"],
	description_id?:number,
	id?:number,
	items?:PartialObjects["restaurant_item_arr_rel_insert_input"],
	name?:PartialObjects["translation_obj_rel_insert_input"],
	name_id?:number,
	position?:number,
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	restaurant_id?:number,
	schedule_id?:number
},
	/** aggregate max on columns */
["restaurant_category_max_fields"]: {
		__typename?: "restaurant_category_max_fields";
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number,
			schedule_id?:number
	},
	/** order by max() on columns of table "restaurant_category" */
["restaurant_category_max_order_by"]: {
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	schedule_id?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["restaurant_category_min_fields"]: {
		__typename?: "restaurant_category_min_fields";
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number,
			schedule_id?:number
	},
	/** order by min() on columns of table "restaurant_category" */
["restaurant_category_min_order_by"]: {
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	schedule_id?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "restaurant_category" */
["restaurant_category_mutation_response"]: {
		__typename?: "restaurant_category_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant_category"][]
	},
	/** input type for inserting object relation for remote table "restaurant_category" */
["restaurant_category_obj_rel_insert_input"]: {
	data:PartialObjects["restaurant_category_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_category_on_conflict"]
},
	/** on_conflict condition type for table "restaurant_category" */
["restaurant_category_on_conflict"]: {
	constraint:PartialObjects["restaurant_category_constraint"],
	update_columns:PartialObjects["restaurant_category_update_column"][],
	where?:PartialObjects["restaurant_category_bool_exp"]
},
	/** Ordering options when selecting data from "restaurant_category". */
["restaurant_category_order_by"]: {
	description?:PartialObjects["translation_order_by"],
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	items_aggregate?:PartialObjects["restaurant_item_aggregate_order_by"],
	name?:PartialObjects["translation_order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	restaurant_id?:PartialObjects["order_by"],
	schedule_id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: restaurant_category */
["restaurant_category_pk_columns_input"]: {
	id:number
},
	/** select columns of table "restaurant_category" */
["restaurant_category_select_column"]:restaurant_category_select_column,
	/** input type for updating data in table "restaurant_category" */
["restaurant_category_set_input"]: {
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
},
	/** aggregate stddev on columns */
["restaurant_category_stddev_fields"]: {
		__typename?: "restaurant_category_stddev_fields";
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number,
			schedule_id?:number
	},
	/** order by stddev() on columns of table "restaurant_category" */
["restaurant_category_stddev_order_by"]: {
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	schedule_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["restaurant_category_stddev_pop_fields"]: {
		__typename?: "restaurant_category_stddev_pop_fields";
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number,
			schedule_id?:number
	},
	/** order by stddev_pop() on columns of table "restaurant_category" */
["restaurant_category_stddev_pop_order_by"]: {
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	schedule_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["restaurant_category_stddev_samp_fields"]: {
		__typename?: "restaurant_category_stddev_samp_fields";
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number,
			schedule_id?:number
	},
	/** order by stddev_samp() on columns of table "restaurant_category" */
["restaurant_category_stddev_samp_order_by"]: {
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	schedule_id?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "restaurant_category" */
["restaurant_category_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_category_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_category_stream_cursor_value_input"]: {
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
},
	/** aggregate sum on columns */
["restaurant_category_sum_fields"]: {
		__typename?: "restaurant_category_sum_fields";
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number,
			schedule_id?:number
	},
	/** order by sum() on columns of table "restaurant_category" */
["restaurant_category_sum_order_by"]: {
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	schedule_id?:PartialObjects["order_by"]
},
	/** update columns of table "restaurant_category" */
["restaurant_category_update_column"]:restaurant_category_update_column,
	["restaurant_category_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_category_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_category_set_input"],
	where:PartialObjects["restaurant_category_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_category_var_pop_fields"]: {
		__typename?: "restaurant_category_var_pop_fields";
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number,
			schedule_id?:number
	},
	/** order by var_pop() on columns of table "restaurant_category" */
["restaurant_category_var_pop_order_by"]: {
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	schedule_id?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["restaurant_category_var_samp_fields"]: {
		__typename?: "restaurant_category_var_samp_fields";
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number,
			schedule_id?:number
	},
	/** order by var_samp() on columns of table "restaurant_category" */
["restaurant_category_var_samp_order_by"]: {
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	schedule_id?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["restaurant_category_variance_fields"]: {
		__typename?: "restaurant_category_variance_fields";
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number,
			schedule_id?:number
	},
	/** order by variance() on columns of table "restaurant_category" */
["restaurant_category_variance_order_by"]: {
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	schedule_id?:PartialObjects["order_by"]
},
	/** columns and relationships of "restaurant_choice" */
["restaurant_choice"]: {
		__typename?: "restaurant_choice";
			available?:boolean,
			cost?:PartialObjects["money"],
			id?:number,
			/** An object relationship */
	name?:PartialObjects["translation"],
			name_id?:number,
			/** An array relationship */
	options?:PartialObjects["restaurant_option_choice_map"][],
			/** An aggregate relationship */
	options_aggregate?:PartialObjects["restaurant_option_choice_map_aggregate"],
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			restaurant_id?:number
	},
	/** aggregated selection of "restaurant_choice" */
["restaurant_choice_aggregate"]: {
		__typename?: "restaurant_choice_aggregate";
			aggregate?:PartialObjects["restaurant_choice_aggregate_fields"],
			nodes?:PartialObjects["restaurant_choice"][]
	},
	/** aggregate fields of "restaurant_choice" */
["restaurant_choice_aggregate_fields"]: {
		__typename?: "restaurant_choice_aggregate_fields";
			avg?:PartialObjects["restaurant_choice_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_choice_max_fields"],
			min?:PartialObjects["restaurant_choice_min_fields"],
			stddev?:PartialObjects["restaurant_choice_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_choice_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_choice_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_choice_sum_fields"],
			var_pop?:PartialObjects["restaurant_choice_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_choice_var_samp_fields"],
			variance?:PartialObjects["restaurant_choice_variance_fields"]
	},
	/** order by aggregate values of table "restaurant_choice" */
["restaurant_choice_aggregate_order_by"]: {
	avg?:PartialObjects["restaurant_choice_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["restaurant_choice_max_order_by"],
	min?:PartialObjects["restaurant_choice_min_order_by"],
	stddev?:PartialObjects["restaurant_choice_stddev_order_by"],
	stddev_pop?:PartialObjects["restaurant_choice_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["restaurant_choice_stddev_samp_order_by"],
	sum?:PartialObjects["restaurant_choice_sum_order_by"],
	var_pop?:PartialObjects["restaurant_choice_var_pop_order_by"],
	var_samp?:PartialObjects["restaurant_choice_var_samp_order_by"],
	variance?:PartialObjects["restaurant_choice_variance_order_by"]
},
	/** input type for inserting array relation for remote table "restaurant_choice" */
["restaurant_choice_arr_rel_insert_input"]: {
	data:PartialObjects["restaurant_choice_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_choice_on_conflict"]
},
	/** aggregate avg on columns */
["restaurant_choice_avg_fields"]: {
		__typename?: "restaurant_choice_avg_fields";
			cost?:number,
			id?:number,
			name_id?:number,
			restaurant_id?:number
	},
	/** order by avg() on columns of table "restaurant_choice" */
["restaurant_choice_avg_order_by"]: {
	cost?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "restaurant_choice". All fields are combined with a logical 'AND'. */
["restaurant_choice_bool_exp"]: {
	_and?:PartialObjects["restaurant_choice_bool_exp"][],
	_not?:PartialObjects["restaurant_choice_bool_exp"],
	_or?:PartialObjects["restaurant_choice_bool_exp"][],
	available?:PartialObjects["Boolean_comparison_exp"],
	cost?:PartialObjects["money_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	name?:PartialObjects["translation_bool_exp"],
	name_id?:PartialObjects["Int_comparison_exp"],
	options?:PartialObjects["restaurant_option_choice_map_bool_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	restaurant_id?:PartialObjects["Int_comparison_exp"]
},
	/** unique or primary key constraints on table "restaurant_choice" */
["restaurant_choice_constraint"]:restaurant_choice_constraint,
	/** input type for incrementing numeric columns in table "restaurant_choice" */
["restaurant_choice_inc_input"]: {
	cost?:PartialObjects["money"],
	id?:number,
	name_id?:number,
	restaurant_id?:number
},
	/** input type for inserting data into table "restaurant_choice" */
["restaurant_choice_insert_input"]: {
	available?:boolean,
	cost?:PartialObjects["money"],
	id?:number,
	name?:PartialObjects["translation_obj_rel_insert_input"],
	name_id?:number,
	options?:PartialObjects["restaurant_option_choice_map_arr_rel_insert_input"],
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	restaurant_id?:number
},
	/** aggregate max on columns */
["restaurant_choice_max_fields"]: {
		__typename?: "restaurant_choice_max_fields";
			cost?:PartialObjects["money"],
			id?:number,
			name_id?:number,
			restaurant_id?:number
	},
	/** order by max() on columns of table "restaurant_choice" */
["restaurant_choice_max_order_by"]: {
	cost?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["restaurant_choice_min_fields"]: {
		__typename?: "restaurant_choice_min_fields";
			cost?:PartialObjects["money"],
			id?:number,
			name_id?:number,
			restaurant_id?:number
	},
	/** order by min() on columns of table "restaurant_choice" */
["restaurant_choice_min_order_by"]: {
	cost?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "restaurant_choice" */
["restaurant_choice_mutation_response"]: {
		__typename?: "restaurant_choice_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant_choice"][]
	},
	/** on_conflict condition type for table "restaurant_choice" */
["restaurant_choice_on_conflict"]: {
	constraint:PartialObjects["restaurant_choice_constraint"],
	update_columns:PartialObjects["restaurant_choice_update_column"][],
	where?:PartialObjects["restaurant_choice_bool_exp"]
},
	/** Ordering options when selecting data from "restaurant_choice". */
["restaurant_choice_order_by"]: {
	available?:PartialObjects["order_by"],
	cost?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name?:PartialObjects["translation_order_by"],
	name_id?:PartialObjects["order_by"],
	options_aggregate?:PartialObjects["restaurant_option_choice_map_aggregate_order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: restaurant_choice */
["restaurant_choice_pk_columns_input"]: {
	id:number
},
	/** select columns of table "restaurant_choice" */
["restaurant_choice_select_column"]:restaurant_choice_select_column,
	/** input type for updating data in table "restaurant_choice" */
["restaurant_choice_set_input"]: {
	available?:boolean,
	cost?:PartialObjects["money"],
	id?:number,
	name_id?:number,
	restaurant_id?:number
},
	/** aggregate stddev on columns */
["restaurant_choice_stddev_fields"]: {
		__typename?: "restaurant_choice_stddev_fields";
			cost?:number,
			id?:number,
			name_id?:number,
			restaurant_id?:number
	},
	/** order by stddev() on columns of table "restaurant_choice" */
["restaurant_choice_stddev_order_by"]: {
	cost?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["restaurant_choice_stddev_pop_fields"]: {
		__typename?: "restaurant_choice_stddev_pop_fields";
			cost?:number,
			id?:number,
			name_id?:number,
			restaurant_id?:number
	},
	/** order by stddev_pop() on columns of table "restaurant_choice" */
["restaurant_choice_stddev_pop_order_by"]: {
	cost?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["restaurant_choice_stddev_samp_fields"]: {
		__typename?: "restaurant_choice_stddev_samp_fields";
			cost?:number,
			id?:number,
			name_id?:number,
			restaurant_id?:number
	},
	/** order by stddev_samp() on columns of table "restaurant_choice" */
["restaurant_choice_stddev_samp_order_by"]: {
	cost?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "restaurant_choice" */
["restaurant_choice_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_choice_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_choice_stream_cursor_value_input"]: {
	available?:boolean,
	cost?:PartialObjects["money"],
	id?:number,
	name_id?:number,
	restaurant_id?:number
},
	/** aggregate sum on columns */
["restaurant_choice_sum_fields"]: {
		__typename?: "restaurant_choice_sum_fields";
			cost?:PartialObjects["money"],
			id?:number,
			name_id?:number,
			restaurant_id?:number
	},
	/** order by sum() on columns of table "restaurant_choice" */
["restaurant_choice_sum_order_by"]: {
	cost?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** update columns of table "restaurant_choice" */
["restaurant_choice_update_column"]:restaurant_choice_update_column,
	["restaurant_choice_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_choice_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_choice_set_input"],
	where:PartialObjects["restaurant_choice_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_choice_var_pop_fields"]: {
		__typename?: "restaurant_choice_var_pop_fields";
			cost?:number,
			id?:number,
			name_id?:number,
			restaurant_id?:number
	},
	/** order by var_pop() on columns of table "restaurant_choice" */
["restaurant_choice_var_pop_order_by"]: {
	cost?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["restaurant_choice_var_samp_fields"]: {
		__typename?: "restaurant_choice_var_samp_fields";
			cost?:number,
			id?:number,
			name_id?:number,
			restaurant_id?:number
	},
	/** order by var_samp() on columns of table "restaurant_choice" */
["restaurant_choice_var_samp_order_by"]: {
	cost?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["restaurant_choice_variance_fields"]: {
		__typename?: "restaurant_choice_variance_fields";
			cost?:number,
			id?:number,
			name_id?:number,
			restaurant_id?:number
	},
	/** order by variance() on columns of table "restaurant_choice" */
["restaurant_choice_variance_order_by"]: {
	cost?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** unique or primary key constraints on table "restaurant" */
["restaurant_constraint"]:restaurant_constraint,
	/** input type for incrementing numeric columns in table "restaurant" */
["restaurant_inc_input"]: {
	description_id?:number,
	id?:number,
	payment_info_id?:number,
	schedule_id?:number
},
	/** input type for inserting data into table "restaurant" */
["restaurant_insert_input"]: {
	approved?:boolean,
	categories?:PartialObjects["restaurant_category_arr_rel_insert_input"],
	description?:PartialObjects["translation_obj_rel_insert_input"],
	description_id?:number,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	location_gps?:PartialObjects["geography"],
	location_text?:string,
	name?:string,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
	orders?:PartialObjects["restaurant_order_arr_rel_insert_input"],
	payment_info?:PartialObjects["service_provider_payment_info_obj_rel_insert_input"],
	payment_info_id?:number,
	restaurant_operators?:PartialObjects["restaurant_operator_arr_rel_insert_input"],
	schedule_id?:number,
	self_delivery?:boolean,
	service_provider_type?:string
},
	/** columns and relationships of "restaurant_item" */
["restaurant_item"]: {
		__typename?: "restaurant_item";
			archived?:boolean,
			available?:boolean,
			/** An object relationship */
	category?:PartialObjects["restaurant_category"],
			category_id?:number,
			cost?:PartialObjects["money"],
			/** An object relationship */
	description?:PartialObjects["translation"],
			description_id?:number,
			id?:number,
			/** daily, special */
	item_type?:string,
			/** An object relationship */
	name?:PartialObjects["translation"],
			name_id?:number,
			/** An array relationship */
	options?:PartialObjects["restaurant_item_option_map"][],
			/** An aggregate relationship */
	options_aggregate?:PartialObjects["restaurant_item_option_map_aggregate"],
			position?:number,
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			restaurant_id?:number,
			special_period_end?:PartialObjects["timestamptz"],
			special_period_start?:PartialObjects["timestamptz"]
	},
	/** aggregated selection of "restaurant_item" */
["restaurant_item_aggregate"]: {
		__typename?: "restaurant_item_aggregate";
			aggregate?:PartialObjects["restaurant_item_aggregate_fields"],
			nodes?:PartialObjects["restaurant_item"][]
	},
	/** aggregate fields of "restaurant_item" */
["restaurant_item_aggregate_fields"]: {
		__typename?: "restaurant_item_aggregate_fields";
			avg?:PartialObjects["restaurant_item_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_item_max_fields"],
			min?:PartialObjects["restaurant_item_min_fields"],
			stddev?:PartialObjects["restaurant_item_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_item_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_item_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_item_sum_fields"],
			var_pop?:PartialObjects["restaurant_item_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_item_var_samp_fields"],
			variance?:PartialObjects["restaurant_item_variance_fields"]
	},
	/** order by aggregate values of table "restaurant_item" */
["restaurant_item_aggregate_order_by"]: {
	avg?:PartialObjects["restaurant_item_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["restaurant_item_max_order_by"],
	min?:PartialObjects["restaurant_item_min_order_by"],
	stddev?:PartialObjects["restaurant_item_stddev_order_by"],
	stddev_pop?:PartialObjects["restaurant_item_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["restaurant_item_stddev_samp_order_by"],
	sum?:PartialObjects["restaurant_item_sum_order_by"],
	var_pop?:PartialObjects["restaurant_item_var_pop_order_by"],
	var_samp?:PartialObjects["restaurant_item_var_samp_order_by"],
	variance?:PartialObjects["restaurant_item_variance_order_by"]
},
	/** input type for inserting array relation for remote table "restaurant_item" */
["restaurant_item_arr_rel_insert_input"]: {
	data:PartialObjects["restaurant_item_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_item_on_conflict"]
},
	/** aggregate avg on columns */
["restaurant_item_avg_fields"]: {
		__typename?: "restaurant_item_avg_fields";
			category_id?:number,
			cost?:number,
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by avg() on columns of table "restaurant_item" */
["restaurant_item_avg_order_by"]: {
	category_id?:PartialObjects["order_by"],
	cost?:PartialObjects["order_by"],
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "restaurant_item". All fields are combined with a logical 'AND'. */
["restaurant_item_bool_exp"]: {
	_and?:PartialObjects["restaurant_item_bool_exp"][],
	_not?:PartialObjects["restaurant_item_bool_exp"],
	_or?:PartialObjects["restaurant_item_bool_exp"][],
	archived?:PartialObjects["Boolean_comparison_exp"],
	available?:PartialObjects["Boolean_comparison_exp"],
	category?:PartialObjects["restaurant_category_bool_exp"],
	category_id?:PartialObjects["Int_comparison_exp"],
	cost?:PartialObjects["money_comparison_exp"],
	description?:PartialObjects["translation_bool_exp"],
	description_id?:PartialObjects["Int_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	item_type?:PartialObjects["String_comparison_exp"],
	name?:PartialObjects["translation_bool_exp"],
	name_id?:PartialObjects["Int_comparison_exp"],
	options?:PartialObjects["restaurant_item_option_map_bool_exp"],
	position?:PartialObjects["Int_comparison_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	restaurant_id?:PartialObjects["Int_comparison_exp"],
	special_period_end?:PartialObjects["timestamptz_comparison_exp"],
	special_period_start?:PartialObjects["timestamptz_comparison_exp"]
},
	/** unique or primary key constraints on table "restaurant_item" */
["restaurant_item_constraint"]:restaurant_item_constraint,
	/** input type for incrementing numeric columns in table "restaurant_item" */
["restaurant_item_inc_input"]: {
	category_id?:number,
	cost?:PartialObjects["money"],
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
},
	/** input type for inserting data into table "restaurant_item" */
["restaurant_item_insert_input"]: {
	archived?:boolean,
	available?:boolean,
	category?:PartialObjects["restaurant_category_obj_rel_insert_input"],
	category_id?:number,
	cost?:PartialObjects["money"],
	description?:PartialObjects["translation_obj_rel_insert_input"],
	description_id?:number,
	id?:number,
	/** daily, special */
	item_type?:string,
	name?:PartialObjects["translation_obj_rel_insert_input"],
	name_id?:number,
	options?:PartialObjects["restaurant_item_option_map_arr_rel_insert_input"],
	position?:number,
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	restaurant_id?:number,
	special_period_end?:PartialObjects["timestamptz"],
	special_period_start?:PartialObjects["timestamptz"]
},
	/** aggregate max on columns */
["restaurant_item_max_fields"]: {
		__typename?: "restaurant_item_max_fields";
			category_id?:number,
			cost?:PartialObjects["money"],
			description_id?:number,
			id?:number,
			/** daily, special */
	item_type?:string,
			name_id?:number,
			position?:number,
			restaurant_id?:number,
			special_period_end?:PartialObjects["timestamptz"],
			special_period_start?:PartialObjects["timestamptz"]
	},
	/** order by max() on columns of table "restaurant_item" */
["restaurant_item_max_order_by"]: {
	category_id?:PartialObjects["order_by"],
	cost?:PartialObjects["order_by"],
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	/** daily, special */
	item_type?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	special_period_end?:PartialObjects["order_by"],
	special_period_start?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["restaurant_item_min_fields"]: {
		__typename?: "restaurant_item_min_fields";
			category_id?:number,
			cost?:PartialObjects["money"],
			description_id?:number,
			id?:number,
			/** daily, special */
	item_type?:string,
			name_id?:number,
			position?:number,
			restaurant_id?:number,
			special_period_end?:PartialObjects["timestamptz"],
			special_period_start?:PartialObjects["timestamptz"]
	},
	/** order by min() on columns of table "restaurant_item" */
["restaurant_item_min_order_by"]: {
	category_id?:PartialObjects["order_by"],
	cost?:PartialObjects["order_by"],
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	/** daily, special */
	item_type?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	special_period_end?:PartialObjects["order_by"],
	special_period_start?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "restaurant_item" */
["restaurant_item_mutation_response"]: {
		__typename?: "restaurant_item_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant_item"][]
	},
	/** input type for inserting object relation for remote table "restaurant_item" */
["restaurant_item_obj_rel_insert_input"]: {
	data:PartialObjects["restaurant_item_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_item_on_conflict"]
},
	/** on_conflict condition type for table "restaurant_item" */
["restaurant_item_on_conflict"]: {
	constraint:PartialObjects["restaurant_item_constraint"],
	update_columns:PartialObjects["restaurant_item_update_column"][],
	where?:PartialObjects["restaurant_item_bool_exp"]
},
	/** columns and relationships of "restaurant_item_option_map" */
["restaurant_item_option_map"]: {
		__typename?: "restaurant_item_option_map";
			id?:number,
			item_id?:number,
			/** An array relationship */
	item_options?:PartialObjects["restaurant_option"][],
			/** An aggregate relationship */
	item_options_aggregate?:PartialObjects["restaurant_option_aggregate"],
			option_id?:number,
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			restaurant_id?:number
	},
	/** aggregated selection of "restaurant_item_option_map" */
["restaurant_item_option_map_aggregate"]: {
		__typename?: "restaurant_item_option_map_aggregate";
			aggregate?:PartialObjects["restaurant_item_option_map_aggregate_fields"],
			nodes?:PartialObjects["restaurant_item_option_map"][]
	},
	/** aggregate fields of "restaurant_item_option_map" */
["restaurant_item_option_map_aggregate_fields"]: {
		__typename?: "restaurant_item_option_map_aggregate_fields";
			avg?:PartialObjects["restaurant_item_option_map_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_item_option_map_max_fields"],
			min?:PartialObjects["restaurant_item_option_map_min_fields"],
			stddev?:PartialObjects["restaurant_item_option_map_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_item_option_map_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_item_option_map_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_item_option_map_sum_fields"],
			var_pop?:PartialObjects["restaurant_item_option_map_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_item_option_map_var_samp_fields"],
			variance?:PartialObjects["restaurant_item_option_map_variance_fields"]
	},
	/** order by aggregate values of table "restaurant_item_option_map" */
["restaurant_item_option_map_aggregate_order_by"]: {
	avg?:PartialObjects["restaurant_item_option_map_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["restaurant_item_option_map_max_order_by"],
	min?:PartialObjects["restaurant_item_option_map_min_order_by"],
	stddev?:PartialObjects["restaurant_item_option_map_stddev_order_by"],
	stddev_pop?:PartialObjects["restaurant_item_option_map_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["restaurant_item_option_map_stddev_samp_order_by"],
	sum?:PartialObjects["restaurant_item_option_map_sum_order_by"],
	var_pop?:PartialObjects["restaurant_item_option_map_var_pop_order_by"],
	var_samp?:PartialObjects["restaurant_item_option_map_var_samp_order_by"],
	variance?:PartialObjects["restaurant_item_option_map_variance_order_by"]
},
	/** input type for inserting array relation for remote table "restaurant_item_option_map" */
["restaurant_item_option_map_arr_rel_insert_input"]: {
	data:PartialObjects["restaurant_item_option_map_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_item_option_map_on_conflict"]
},
	/** aggregate avg on columns */
["restaurant_item_option_map_avg_fields"]: {
		__typename?: "restaurant_item_option_map_avg_fields";
			id?:number,
			item_id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by avg() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_avg_order_by"]: {
	id?:PartialObjects["order_by"],
	item_id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "restaurant_item_option_map". All fields are combined with a logical 'AND'. */
["restaurant_item_option_map_bool_exp"]: {
	_and?:PartialObjects["restaurant_item_option_map_bool_exp"][],
	_not?:PartialObjects["restaurant_item_option_map_bool_exp"],
	_or?:PartialObjects["restaurant_item_option_map_bool_exp"][],
	id?:PartialObjects["Int_comparison_exp"],
	item_id?:PartialObjects["Int_comparison_exp"],
	item_options?:PartialObjects["restaurant_option_bool_exp"],
	option_id?:PartialObjects["Int_comparison_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	restaurant_id?:PartialObjects["Int_comparison_exp"]
},
	/** unique or primary key constraints on table "restaurant_item_option_map" */
["restaurant_item_option_map_constraint"]:restaurant_item_option_map_constraint,
	/** input type for incrementing numeric columns in table "restaurant_item_option_map" */
["restaurant_item_option_map_inc_input"]: {
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
},
	/** input type for inserting data into table "restaurant_item_option_map" */
["restaurant_item_option_map_insert_input"]: {
	id?:number,
	item_id?:number,
	item_options?:PartialObjects["restaurant_option_arr_rel_insert_input"],
	option_id?:number,
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	restaurant_id?:number
},
	/** aggregate max on columns */
["restaurant_item_option_map_max_fields"]: {
		__typename?: "restaurant_item_option_map_max_fields";
			id?:number,
			item_id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by max() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_max_order_by"]: {
	id?:PartialObjects["order_by"],
	item_id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["restaurant_item_option_map_min_fields"]: {
		__typename?: "restaurant_item_option_map_min_fields";
			id?:number,
			item_id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by min() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_min_order_by"]: {
	id?:PartialObjects["order_by"],
	item_id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "restaurant_item_option_map" */
["restaurant_item_option_map_mutation_response"]: {
		__typename?: "restaurant_item_option_map_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant_item_option_map"][]
	},
	/** on_conflict condition type for table "restaurant_item_option_map" */
["restaurant_item_option_map_on_conflict"]: {
	constraint:PartialObjects["restaurant_item_option_map_constraint"],
	update_columns:PartialObjects["restaurant_item_option_map_update_column"][],
	where?:PartialObjects["restaurant_item_option_map_bool_exp"]
},
	/** Ordering options when selecting data from "restaurant_item_option_map". */
["restaurant_item_option_map_order_by"]: {
	id?:PartialObjects["order_by"],
	item_id?:PartialObjects["order_by"],
	item_options_aggregate?:PartialObjects["restaurant_option_aggregate_order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: restaurant_item_option_map */
["restaurant_item_option_map_pk_columns_input"]: {
	id:number
},
	/** select columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_select_column"]:restaurant_item_option_map_select_column,
	/** input type for updating data in table "restaurant_item_option_map" */
["restaurant_item_option_map_set_input"]: {
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
},
	/** aggregate stddev on columns */
["restaurant_item_option_map_stddev_fields"]: {
		__typename?: "restaurant_item_option_map_stddev_fields";
			id?:number,
			item_id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by stddev() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_stddev_order_by"]: {
	id?:PartialObjects["order_by"],
	item_id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["restaurant_item_option_map_stddev_pop_fields"]: {
		__typename?: "restaurant_item_option_map_stddev_pop_fields";
			id?:number,
			item_id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by stddev_pop() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_stddev_pop_order_by"]: {
	id?:PartialObjects["order_by"],
	item_id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["restaurant_item_option_map_stddev_samp_fields"]: {
		__typename?: "restaurant_item_option_map_stddev_samp_fields";
			id?:number,
			item_id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by stddev_samp() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_stddev_samp_order_by"]: {
	id?:PartialObjects["order_by"],
	item_id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "restaurant_item_option_map" */
["restaurant_item_option_map_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_item_option_map_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_item_option_map_stream_cursor_value_input"]: {
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
},
	/** aggregate sum on columns */
["restaurant_item_option_map_sum_fields"]: {
		__typename?: "restaurant_item_option_map_sum_fields";
			id?:number,
			item_id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by sum() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_sum_order_by"]: {
	id?:PartialObjects["order_by"],
	item_id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** update columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_update_column"]:restaurant_item_option_map_update_column,
	["restaurant_item_option_map_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_item_option_map_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_item_option_map_set_input"],
	where:PartialObjects["restaurant_item_option_map_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_item_option_map_var_pop_fields"]: {
		__typename?: "restaurant_item_option_map_var_pop_fields";
			id?:number,
			item_id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by var_pop() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_var_pop_order_by"]: {
	id?:PartialObjects["order_by"],
	item_id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["restaurant_item_option_map_var_samp_fields"]: {
		__typename?: "restaurant_item_option_map_var_samp_fields";
			id?:number,
			item_id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by var_samp() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_var_samp_order_by"]: {
	id?:PartialObjects["order_by"],
	item_id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["restaurant_item_option_map_variance_fields"]: {
		__typename?: "restaurant_item_option_map_variance_fields";
			id?:number,
			item_id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by variance() on columns of table "restaurant_item_option_map" */
["restaurant_item_option_map_variance_order_by"]: {
	id?:PartialObjects["order_by"],
	item_id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** Ordering options when selecting data from "restaurant_item". */
["restaurant_item_order_by"]: {
	archived?:PartialObjects["order_by"],
	available?:PartialObjects["order_by"],
	category?:PartialObjects["restaurant_category_order_by"],
	category_id?:PartialObjects["order_by"],
	cost?:PartialObjects["order_by"],
	description?:PartialObjects["translation_order_by"],
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	item_type?:PartialObjects["order_by"],
	name?:PartialObjects["translation_order_by"],
	name_id?:PartialObjects["order_by"],
	options_aggregate?:PartialObjects["restaurant_item_option_map_aggregate_order_by"],
	position?:PartialObjects["order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	restaurant_id?:PartialObjects["order_by"],
	special_period_end?:PartialObjects["order_by"],
	special_period_start?:PartialObjects["order_by"]
},
	/** primary key columns input for table: restaurant_item */
["restaurant_item_pk_columns_input"]: {
	id:number
},
	/** select columns of table "restaurant_item" */
["restaurant_item_select_column"]:restaurant_item_select_column,
	/** input type for updating data in table "restaurant_item" */
["restaurant_item_set_input"]: {
	archived?:boolean,
	available?:boolean,
	category_id?:number,
	cost?:PartialObjects["money"],
	description_id?:number,
	id?:number,
	/** daily, special */
	item_type?:string,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	special_period_end?:PartialObjects["timestamptz"],
	special_period_start?:PartialObjects["timestamptz"]
},
	/** aggregate stddev on columns */
["restaurant_item_stddev_fields"]: {
		__typename?: "restaurant_item_stddev_fields";
			category_id?:number,
			cost?:number,
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by stddev() on columns of table "restaurant_item" */
["restaurant_item_stddev_order_by"]: {
	category_id?:PartialObjects["order_by"],
	cost?:PartialObjects["order_by"],
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["restaurant_item_stddev_pop_fields"]: {
		__typename?: "restaurant_item_stddev_pop_fields";
			category_id?:number,
			cost?:number,
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by stddev_pop() on columns of table "restaurant_item" */
["restaurant_item_stddev_pop_order_by"]: {
	category_id?:PartialObjects["order_by"],
	cost?:PartialObjects["order_by"],
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["restaurant_item_stddev_samp_fields"]: {
		__typename?: "restaurant_item_stddev_samp_fields";
			category_id?:number,
			cost?:number,
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by stddev_samp() on columns of table "restaurant_item" */
["restaurant_item_stddev_samp_order_by"]: {
	category_id?:PartialObjects["order_by"],
	cost?:PartialObjects["order_by"],
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "restaurant_item" */
["restaurant_item_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_item_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_item_stream_cursor_value_input"]: {
	archived?:boolean,
	available?:boolean,
	category_id?:number,
	cost?:PartialObjects["money"],
	description_id?:number,
	id?:number,
	/** daily, special */
	item_type?:string,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	special_period_end?:PartialObjects["timestamptz"],
	special_period_start?:PartialObjects["timestamptz"]
},
	/** aggregate sum on columns */
["restaurant_item_sum_fields"]: {
		__typename?: "restaurant_item_sum_fields";
			category_id?:number,
			cost?:PartialObjects["money"],
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by sum() on columns of table "restaurant_item" */
["restaurant_item_sum_order_by"]: {
	category_id?:PartialObjects["order_by"],
	cost?:PartialObjects["order_by"],
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** update columns of table "restaurant_item" */
["restaurant_item_update_column"]:restaurant_item_update_column,
	["restaurant_item_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_item_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_item_set_input"],
	where:PartialObjects["restaurant_item_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_item_var_pop_fields"]: {
		__typename?: "restaurant_item_var_pop_fields";
			category_id?:number,
			cost?:number,
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by var_pop() on columns of table "restaurant_item" */
["restaurant_item_var_pop_order_by"]: {
	category_id?:PartialObjects["order_by"],
	cost?:PartialObjects["order_by"],
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["restaurant_item_var_samp_fields"]: {
		__typename?: "restaurant_item_var_samp_fields";
			category_id?:number,
			cost?:number,
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by var_samp() on columns of table "restaurant_item" */
["restaurant_item_var_samp_order_by"]: {
	category_id?:PartialObjects["order_by"],
	cost?:PartialObjects["order_by"],
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["restaurant_item_variance_fields"]: {
		__typename?: "restaurant_item_variance_fields";
			category_id?:number,
			cost?:number,
			description_id?:number,
			id?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by variance() on columns of table "restaurant_item" */
["restaurant_item_variance_order_by"]: {
	category_id?:PartialObjects["order_by"],
	cost?:PartialObjects["order_by"],
	description_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate max on columns */
["restaurant_max_fields"]: {
		__typename?: "restaurant_max_fields";
			description_id?:number,
			firebase_id?:string,
			id?:number,
			image?:string,
			language_id?:string,
			location_text?:string,
			name?:string,
			/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
			payment_info_id?:number,
			schedule_id?:number,
			service_provider_type?:string
	},
	/** aggregate min on columns */
["restaurant_min_fields"]: {
		__typename?: "restaurant_min_fields";
			description_id?:number,
			firebase_id?:string,
			id?:number,
			image?:string,
			language_id?:string,
			location_text?:string,
			name?:string,
			/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
			payment_info_id?:number,
			schedule_id?:number,
			service_provider_type?:string
	},
	/** response of any mutation on the table "restaurant" */
["restaurant_mutation_response"]: {
		__typename?: "restaurant_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant"][]
	},
	/** input type for inserting object relation for remote table "restaurant" */
["restaurant_obj_rel_insert_input"]: {
	data:PartialObjects["restaurant_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_on_conflict"]
},
	/** on_conflict condition type for table "restaurant" */
["restaurant_on_conflict"]: {
	constraint:PartialObjects["restaurant_constraint"],
	update_columns:PartialObjects["restaurant_update_column"][],
	where?:PartialObjects["restaurant_bool_exp"]
},
	/** columns and relationships of "restaurant_operator" */
["restaurant_operator"]: {
		__typename?: "restaurant_operator";
			app_version?:string,
			current_gps?:PartialObjects["geography"],
			id?:number,
			/** A computed field, executes function "restaurant_operator_notification_token" */
	notification_token?:string,
			owner?:boolean,
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			restaurant_id?:number,
			/** awaiting_approval,authorized,banned */
	status?:string,
			/** An object relationship */
	user?:PartialObjects["user"],
			user_id?:number
	},
	/** aggregated selection of "restaurant_operator" */
["restaurant_operator_aggregate"]: {
		__typename?: "restaurant_operator_aggregate";
			aggregate?:PartialObjects["restaurant_operator_aggregate_fields"],
			nodes?:PartialObjects["restaurant_operator"][]
	},
	/** aggregate fields of "restaurant_operator" */
["restaurant_operator_aggregate_fields"]: {
		__typename?: "restaurant_operator_aggregate_fields";
			avg?:PartialObjects["restaurant_operator_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_operator_max_fields"],
			min?:PartialObjects["restaurant_operator_min_fields"],
			stddev?:PartialObjects["restaurant_operator_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_operator_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_operator_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_operator_sum_fields"],
			var_pop?:PartialObjects["restaurant_operator_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_operator_var_samp_fields"],
			variance?:PartialObjects["restaurant_operator_variance_fields"]
	},
	/** order by aggregate values of table "restaurant_operator" */
["restaurant_operator_aggregate_order_by"]: {
	avg?:PartialObjects["restaurant_operator_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["restaurant_operator_max_order_by"],
	min?:PartialObjects["restaurant_operator_min_order_by"],
	stddev?:PartialObjects["restaurant_operator_stddev_order_by"],
	stddev_pop?:PartialObjects["restaurant_operator_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["restaurant_operator_stddev_samp_order_by"],
	sum?:PartialObjects["restaurant_operator_sum_order_by"],
	var_pop?:PartialObjects["restaurant_operator_var_pop_order_by"],
	var_samp?:PartialObjects["restaurant_operator_var_samp_order_by"],
	variance?:PartialObjects["restaurant_operator_variance_order_by"]
},
	/** input type for inserting array relation for remote table "restaurant_operator" */
["restaurant_operator_arr_rel_insert_input"]: {
	data:PartialObjects["restaurant_operator_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_operator_on_conflict"]
},
	/** aggregate avg on columns */
["restaurant_operator_avg_fields"]: {
		__typename?: "restaurant_operator_avg_fields";
			id?:number,
			restaurant_id?:number,
			user_id?:number
	},
	/** order by avg() on columns of table "restaurant_operator" */
["restaurant_operator_avg_order_by"]: {
	id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "restaurant_operator". All fields are combined with a logical 'AND'. */
["restaurant_operator_bool_exp"]: {
	_and?:PartialObjects["restaurant_operator_bool_exp"][],
	_not?:PartialObjects["restaurant_operator_bool_exp"],
	_or?:PartialObjects["restaurant_operator_bool_exp"][],
	app_version?:PartialObjects["String_comparison_exp"],
	current_gps?:PartialObjects["geography_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	notification_token?:PartialObjects["String_comparison_exp"],
	owner?:PartialObjects["Boolean_comparison_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	restaurant_id?:PartialObjects["Int_comparison_exp"],
	status?:PartialObjects["String_comparison_exp"],
	user?:PartialObjects["user_bool_exp"],
	user_id?:PartialObjects["Int_comparison_exp"]
},
	/** unique or primary key constraints on table "restaurant_operator" */
["restaurant_operator_constraint"]:restaurant_operator_constraint,
	/** input type for incrementing numeric columns in table "restaurant_operator" */
["restaurant_operator_inc_input"]: {
	id?:number,
	restaurant_id?:number,
	user_id?:number
},
	/** input type for inserting data into table "restaurant_operator" */
["restaurant_operator_insert_input"]: {
	app_version?:string,
	current_gps?:PartialObjects["geography"],
	id?:number,
	owner?:boolean,
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	restaurant_id?:number,
	/** awaiting_approval,authorized,banned */
	status?:string,
	user?:PartialObjects["user_obj_rel_insert_input"],
	user_id?:number
},
	/** aggregate max on columns */
["restaurant_operator_max_fields"]: {
		__typename?: "restaurant_operator_max_fields";
			app_version?:string,
			id?:number,
			restaurant_id?:number,
			/** awaiting_approval,authorized,banned */
	status?:string,
			user_id?:number
	},
	/** order by max() on columns of table "restaurant_operator" */
["restaurant_operator_max_order_by"]: {
	app_version?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	/** awaiting_approval,authorized,banned */
	status?:PartialObjects["order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["restaurant_operator_min_fields"]: {
		__typename?: "restaurant_operator_min_fields";
			app_version?:string,
			id?:number,
			restaurant_id?:number,
			/** awaiting_approval,authorized,banned */
	status?:string,
			user_id?:number
	},
	/** order by min() on columns of table "restaurant_operator" */
["restaurant_operator_min_order_by"]: {
	app_version?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	/** awaiting_approval,authorized,banned */
	status?:PartialObjects["order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "restaurant_operator" */
["restaurant_operator_mutation_response"]: {
		__typename?: "restaurant_operator_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant_operator"][]
	},
	/** on_conflict condition type for table "restaurant_operator" */
["restaurant_operator_on_conflict"]: {
	constraint:PartialObjects["restaurant_operator_constraint"],
	update_columns:PartialObjects["restaurant_operator_update_column"][],
	where?:PartialObjects["restaurant_operator_bool_exp"]
},
	/** Ordering options when selecting data from "restaurant_operator". */
["restaurant_operator_order_by"]: {
	app_version?:PartialObjects["order_by"],
	current_gps?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	notification_token?:PartialObjects["order_by"],
	owner?:PartialObjects["order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	restaurant_id?:PartialObjects["order_by"],
	status?:PartialObjects["order_by"],
	user?:PartialObjects["user_order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: restaurant_operator */
["restaurant_operator_pk_columns_input"]: {
	id:number
},
	/** select columns of table "restaurant_operator" */
["restaurant_operator_select_column"]:restaurant_operator_select_column,
	/** input type for updating data in table "restaurant_operator" */
["restaurant_operator_set_input"]: {
	app_version?:string,
	current_gps?:PartialObjects["geography"],
	id?:number,
	owner?:boolean,
	restaurant_id?:number,
	/** awaiting_approval,authorized,banned */
	status?:string,
	user_id?:number
},
	/** aggregate stddev on columns */
["restaurant_operator_stddev_fields"]: {
		__typename?: "restaurant_operator_stddev_fields";
			id?:number,
			restaurant_id?:number,
			user_id?:number
	},
	/** order by stddev() on columns of table "restaurant_operator" */
["restaurant_operator_stddev_order_by"]: {
	id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["restaurant_operator_stddev_pop_fields"]: {
		__typename?: "restaurant_operator_stddev_pop_fields";
			id?:number,
			restaurant_id?:number,
			user_id?:number
	},
	/** order by stddev_pop() on columns of table "restaurant_operator" */
["restaurant_operator_stddev_pop_order_by"]: {
	id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["restaurant_operator_stddev_samp_fields"]: {
		__typename?: "restaurant_operator_stddev_samp_fields";
			id?:number,
			restaurant_id?:number,
			user_id?:number
	},
	/** order by stddev_samp() on columns of table "restaurant_operator" */
["restaurant_operator_stddev_samp_order_by"]: {
	id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "restaurant_operator" */
["restaurant_operator_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_operator_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_operator_stream_cursor_value_input"]: {
	app_version?:string,
	current_gps?:PartialObjects["geography"],
	id?:number,
	owner?:boolean,
	restaurant_id?:number,
	/** awaiting_approval,authorized,banned */
	status?:string,
	user_id?:number
},
	/** aggregate sum on columns */
["restaurant_operator_sum_fields"]: {
		__typename?: "restaurant_operator_sum_fields";
			id?:number,
			restaurant_id?:number,
			user_id?:number
	},
	/** order by sum() on columns of table "restaurant_operator" */
["restaurant_operator_sum_order_by"]: {
	id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** update columns of table "restaurant_operator" */
["restaurant_operator_update_column"]:restaurant_operator_update_column,
	["restaurant_operator_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_operator_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_operator_set_input"],
	where:PartialObjects["restaurant_operator_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_operator_var_pop_fields"]: {
		__typename?: "restaurant_operator_var_pop_fields";
			id?:number,
			restaurant_id?:number,
			user_id?:number
	},
	/** order by var_pop() on columns of table "restaurant_operator" */
["restaurant_operator_var_pop_order_by"]: {
	id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["restaurant_operator_var_samp_fields"]: {
		__typename?: "restaurant_operator_var_samp_fields";
			id?:number,
			restaurant_id?:number,
			user_id?:number
	},
	/** order by var_samp() on columns of table "restaurant_operator" */
["restaurant_operator_var_samp_order_by"]: {
	id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["restaurant_operator_variance_fields"]: {
		__typename?: "restaurant_operator_variance_fields";
			id?:number,
			restaurant_id?:number,
			user_id?:number
	},
	/** order by variance() on columns of table "restaurant_operator" */
["restaurant_operator_variance_order_by"]: {
	id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	user_id?:PartialObjects["order_by"]
},
	/** columns and relationships of "restaurant_option" */
["restaurant_option"]: {
		__typename?: "restaurant_option";
			/** An array relationship */
	choices?:PartialObjects["restaurant_option_choice_map"][],
			/** An aggregate relationship */
	choices_aggregate?:PartialObjects["restaurant_option_choice_map_aggregate"],
			cost_per_extra?:PartialObjects["money"],
			free_choice?:number,
			id?:number,
			/** An array relationship */
	items?:PartialObjects["restaurant_item_option_map"][],
			/** An aggregate relationship */
	items_aggregate?:PartialObjects["restaurant_item_option_map_aggregate"],
			maximum_choice?:number,
			minimum_choice?:number,
			/** An object relationship */
	name?:PartialObjects["translation"],
			name_id?:number,
			option_type?:string,
			position?:number,
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			restaurant_id?:number
	},
	/** aggregated selection of "restaurant_option" */
["restaurant_option_aggregate"]: {
		__typename?: "restaurant_option_aggregate";
			aggregate?:PartialObjects["restaurant_option_aggregate_fields"],
			nodes?:PartialObjects["restaurant_option"][]
	},
	/** aggregate fields of "restaurant_option" */
["restaurant_option_aggregate_fields"]: {
		__typename?: "restaurant_option_aggregate_fields";
			avg?:PartialObjects["restaurant_option_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_option_max_fields"],
			min?:PartialObjects["restaurant_option_min_fields"],
			stddev?:PartialObjects["restaurant_option_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_option_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_option_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_option_sum_fields"],
			var_pop?:PartialObjects["restaurant_option_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_option_var_samp_fields"],
			variance?:PartialObjects["restaurant_option_variance_fields"]
	},
	/** order by aggregate values of table "restaurant_option" */
["restaurant_option_aggregate_order_by"]: {
	avg?:PartialObjects["restaurant_option_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["restaurant_option_max_order_by"],
	min?:PartialObjects["restaurant_option_min_order_by"],
	stddev?:PartialObjects["restaurant_option_stddev_order_by"],
	stddev_pop?:PartialObjects["restaurant_option_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["restaurant_option_stddev_samp_order_by"],
	sum?:PartialObjects["restaurant_option_sum_order_by"],
	var_pop?:PartialObjects["restaurant_option_var_pop_order_by"],
	var_samp?:PartialObjects["restaurant_option_var_samp_order_by"],
	variance?:PartialObjects["restaurant_option_variance_order_by"]
},
	/** input type for inserting array relation for remote table "restaurant_option" */
["restaurant_option_arr_rel_insert_input"]: {
	data:PartialObjects["restaurant_option_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_option_on_conflict"]
},
	/** aggregate avg on columns */
["restaurant_option_avg_fields"]: {
		__typename?: "restaurant_option_avg_fields";
			cost_per_extra?:number,
			free_choice?:number,
			id?:number,
			maximum_choice?:number,
			minimum_choice?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by avg() on columns of table "restaurant_option" */
["restaurant_option_avg_order_by"]: {
	cost_per_extra?:PartialObjects["order_by"],
	free_choice?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	maximum_choice?:PartialObjects["order_by"],
	minimum_choice?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "restaurant_option". All fields are combined with a logical 'AND'. */
["restaurant_option_bool_exp"]: {
	_and?:PartialObjects["restaurant_option_bool_exp"][],
	_not?:PartialObjects["restaurant_option_bool_exp"],
	_or?:PartialObjects["restaurant_option_bool_exp"][],
	choices?:PartialObjects["restaurant_option_choice_map_bool_exp"],
	cost_per_extra?:PartialObjects["money_comparison_exp"],
	free_choice?:PartialObjects["Int_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	items?:PartialObjects["restaurant_item_option_map_bool_exp"],
	maximum_choice?:PartialObjects["Int_comparison_exp"],
	minimum_choice?:PartialObjects["Int_comparison_exp"],
	name?:PartialObjects["translation_bool_exp"],
	name_id?:PartialObjects["Int_comparison_exp"],
	option_type?:PartialObjects["String_comparison_exp"],
	position?:PartialObjects["Int_comparison_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	restaurant_id?:PartialObjects["Int_comparison_exp"]
},
	/** columns and relationships of "restaurant_option_choice_map" */
["restaurant_option_choice_map"]: {
		__typename?: "restaurant_option_choice_map";
			choice_id?:number,
			id?:number,
			/** An array relationship */
	option_choices?:PartialObjects["restaurant_choice"][],
			/** An aggregate relationship */
	option_choices_aggregate?:PartialObjects["restaurant_choice_aggregate"],
			option_id?:number,
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			restaurant_id?:number
	},
	/** aggregated selection of "restaurant_option_choice_map" */
["restaurant_option_choice_map_aggregate"]: {
		__typename?: "restaurant_option_choice_map_aggregate";
			aggregate?:PartialObjects["restaurant_option_choice_map_aggregate_fields"],
			nodes?:PartialObjects["restaurant_option_choice_map"][]
	},
	/** aggregate fields of "restaurant_option_choice_map" */
["restaurant_option_choice_map_aggregate_fields"]: {
		__typename?: "restaurant_option_choice_map_aggregate_fields";
			avg?:PartialObjects["restaurant_option_choice_map_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_option_choice_map_max_fields"],
			min?:PartialObjects["restaurant_option_choice_map_min_fields"],
			stddev?:PartialObjects["restaurant_option_choice_map_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_option_choice_map_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_option_choice_map_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_option_choice_map_sum_fields"],
			var_pop?:PartialObjects["restaurant_option_choice_map_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_option_choice_map_var_samp_fields"],
			variance?:PartialObjects["restaurant_option_choice_map_variance_fields"]
	},
	/** order by aggregate values of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_aggregate_order_by"]: {
	avg?:PartialObjects["restaurant_option_choice_map_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["restaurant_option_choice_map_max_order_by"],
	min?:PartialObjects["restaurant_option_choice_map_min_order_by"],
	stddev?:PartialObjects["restaurant_option_choice_map_stddev_order_by"],
	stddev_pop?:PartialObjects["restaurant_option_choice_map_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["restaurant_option_choice_map_stddev_samp_order_by"],
	sum?:PartialObjects["restaurant_option_choice_map_sum_order_by"],
	var_pop?:PartialObjects["restaurant_option_choice_map_var_pop_order_by"],
	var_samp?:PartialObjects["restaurant_option_choice_map_var_samp_order_by"],
	variance?:PartialObjects["restaurant_option_choice_map_variance_order_by"]
},
	/** input type for inserting array relation for remote table "restaurant_option_choice_map" */
["restaurant_option_choice_map_arr_rel_insert_input"]: {
	data:PartialObjects["restaurant_option_choice_map_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_option_choice_map_on_conflict"]
},
	/** aggregate avg on columns */
["restaurant_option_choice_map_avg_fields"]: {
		__typename?: "restaurant_option_choice_map_avg_fields";
			choice_id?:number,
			id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by avg() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_avg_order_by"]: {
	choice_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "restaurant_option_choice_map".
All fields are combined with a logical 'AND'. */
["restaurant_option_choice_map_bool_exp"]: {
	_and?:PartialObjects["restaurant_option_choice_map_bool_exp"][],
	_not?:PartialObjects["restaurant_option_choice_map_bool_exp"],
	_or?:PartialObjects["restaurant_option_choice_map_bool_exp"][],
	choice_id?:PartialObjects["Int_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	option_choices?:PartialObjects["restaurant_choice_bool_exp"],
	option_id?:PartialObjects["Int_comparison_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	restaurant_id?:PartialObjects["Int_comparison_exp"]
},
	/** unique or primary key constraints on table "restaurant_option_choice_map" */
["restaurant_option_choice_map_constraint"]:restaurant_option_choice_map_constraint,
	/** input type for incrementing numeric columns in table "restaurant_option_choice_map" */
["restaurant_option_choice_map_inc_input"]: {
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
},
	/** input type for inserting data into table "restaurant_option_choice_map" */
["restaurant_option_choice_map_insert_input"]: {
	choice_id?:number,
	id?:number,
	option_choices?:PartialObjects["restaurant_choice_arr_rel_insert_input"],
	option_id?:number,
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	restaurant_id?:number
},
	/** aggregate max on columns */
["restaurant_option_choice_map_max_fields"]: {
		__typename?: "restaurant_option_choice_map_max_fields";
			choice_id?:number,
			id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by max() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_max_order_by"]: {
	choice_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["restaurant_option_choice_map_min_fields"]: {
		__typename?: "restaurant_option_choice_map_min_fields";
			choice_id?:number,
			id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by min() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_min_order_by"]: {
	choice_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "restaurant_option_choice_map" */
["restaurant_option_choice_map_mutation_response"]: {
		__typename?: "restaurant_option_choice_map_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant_option_choice_map"][]
	},
	/** on_conflict condition type for table "restaurant_option_choice_map" */
["restaurant_option_choice_map_on_conflict"]: {
	constraint:PartialObjects["restaurant_option_choice_map_constraint"],
	update_columns:PartialObjects["restaurant_option_choice_map_update_column"][],
	where?:PartialObjects["restaurant_option_choice_map_bool_exp"]
},
	/** Ordering options when selecting data from "restaurant_option_choice_map". */
["restaurant_option_choice_map_order_by"]: {
	choice_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	option_choices_aggregate?:PartialObjects["restaurant_choice_aggregate_order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: restaurant_option_choice_map */
["restaurant_option_choice_map_pk_columns_input"]: {
	id:number
},
	/** select columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_select_column"]:restaurant_option_choice_map_select_column,
	/** input type for updating data in table "restaurant_option_choice_map" */
["restaurant_option_choice_map_set_input"]: {
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
},
	/** aggregate stddev on columns */
["restaurant_option_choice_map_stddev_fields"]: {
		__typename?: "restaurant_option_choice_map_stddev_fields";
			choice_id?:number,
			id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by stddev() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_stddev_order_by"]: {
	choice_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["restaurant_option_choice_map_stddev_pop_fields"]: {
		__typename?: "restaurant_option_choice_map_stddev_pop_fields";
			choice_id?:number,
			id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by stddev_pop() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_stddev_pop_order_by"]: {
	choice_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["restaurant_option_choice_map_stddev_samp_fields"]: {
		__typename?: "restaurant_option_choice_map_stddev_samp_fields";
			choice_id?:number,
			id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by stddev_samp() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_stddev_samp_order_by"]: {
	choice_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "restaurant_option_choice_map" */
["restaurant_option_choice_map_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_option_choice_map_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_option_choice_map_stream_cursor_value_input"]: {
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
},
	/** aggregate sum on columns */
["restaurant_option_choice_map_sum_fields"]: {
		__typename?: "restaurant_option_choice_map_sum_fields";
			choice_id?:number,
			id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by sum() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_sum_order_by"]: {
	choice_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** update columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_update_column"]:restaurant_option_choice_map_update_column,
	["restaurant_option_choice_map_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_option_choice_map_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_option_choice_map_set_input"],
	where:PartialObjects["restaurant_option_choice_map_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_option_choice_map_var_pop_fields"]: {
		__typename?: "restaurant_option_choice_map_var_pop_fields";
			choice_id?:number,
			id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by var_pop() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_var_pop_order_by"]: {
	choice_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["restaurant_option_choice_map_var_samp_fields"]: {
		__typename?: "restaurant_option_choice_map_var_samp_fields";
			choice_id?:number,
			id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by var_samp() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_var_samp_order_by"]: {
	choice_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["restaurant_option_choice_map_variance_fields"]: {
		__typename?: "restaurant_option_choice_map_variance_fields";
			choice_id?:number,
			id?:number,
			option_id?:number,
			restaurant_id?:number
	},
	/** order by variance() on columns of table "restaurant_option_choice_map" */
["restaurant_option_choice_map_variance_order_by"]: {
	choice_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	option_id?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** unique or primary key constraints on table "restaurant_option" */
["restaurant_option_constraint"]:restaurant_option_constraint,
	/** input type for incrementing numeric columns in table "restaurant_option" */
["restaurant_option_inc_input"]: {
	cost_per_extra?:PartialObjects["money"],
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
},
	/** input type for inserting data into table "restaurant_option" */
["restaurant_option_insert_input"]: {
	choices?:PartialObjects["restaurant_option_choice_map_arr_rel_insert_input"],
	cost_per_extra?:PartialObjects["money"],
	free_choice?:number,
	id?:number,
	items?:PartialObjects["restaurant_item_option_map_arr_rel_insert_input"],
	maximum_choice?:number,
	minimum_choice?:number,
	name?:PartialObjects["translation_obj_rel_insert_input"],
	name_id?:number,
	option_type?:string,
	position?:number,
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	restaurant_id?:number
},
	/** aggregate max on columns */
["restaurant_option_max_fields"]: {
		__typename?: "restaurant_option_max_fields";
			cost_per_extra?:PartialObjects["money"],
			free_choice?:number,
			id?:number,
			maximum_choice?:number,
			minimum_choice?:number,
			name_id?:number,
			option_type?:string,
			position?:number,
			restaurant_id?:number
	},
	/** order by max() on columns of table "restaurant_option" */
["restaurant_option_max_order_by"]: {
	cost_per_extra?:PartialObjects["order_by"],
	free_choice?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	maximum_choice?:PartialObjects["order_by"],
	minimum_choice?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	option_type?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["restaurant_option_min_fields"]: {
		__typename?: "restaurant_option_min_fields";
			cost_per_extra?:PartialObjects["money"],
			free_choice?:number,
			id?:number,
			maximum_choice?:number,
			minimum_choice?:number,
			name_id?:number,
			option_type?:string,
			position?:number,
			restaurant_id?:number
	},
	/** order by min() on columns of table "restaurant_option" */
["restaurant_option_min_order_by"]: {
	cost_per_extra?:PartialObjects["order_by"],
	free_choice?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	maximum_choice?:PartialObjects["order_by"],
	minimum_choice?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	option_type?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "restaurant_option" */
["restaurant_option_mutation_response"]: {
		__typename?: "restaurant_option_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant_option"][]
	},
	/** on_conflict condition type for table "restaurant_option" */
["restaurant_option_on_conflict"]: {
	constraint:PartialObjects["restaurant_option_constraint"],
	update_columns:PartialObjects["restaurant_option_update_column"][],
	where?:PartialObjects["restaurant_option_bool_exp"]
},
	/** Ordering options when selecting data from "restaurant_option". */
["restaurant_option_order_by"]: {
	choices_aggregate?:PartialObjects["restaurant_option_choice_map_aggregate_order_by"],
	cost_per_extra?:PartialObjects["order_by"],
	free_choice?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	items_aggregate?:PartialObjects["restaurant_item_option_map_aggregate_order_by"],
	maximum_choice?:PartialObjects["order_by"],
	minimum_choice?:PartialObjects["order_by"],
	name?:PartialObjects["translation_order_by"],
	name_id?:PartialObjects["order_by"],
	option_type?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: restaurant_option */
["restaurant_option_pk_columns_input"]: {
	id:number
},
	/** select columns of table "restaurant_option" */
["restaurant_option_select_column"]:restaurant_option_select_column,
	/** input type for updating data in table "restaurant_option" */
["restaurant_option_set_input"]: {
	cost_per_extra?:PartialObjects["money"],
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	option_type?:string,
	position?:number,
	restaurant_id?:number
},
	/** aggregate stddev on columns */
["restaurant_option_stddev_fields"]: {
		__typename?: "restaurant_option_stddev_fields";
			cost_per_extra?:number,
			free_choice?:number,
			id?:number,
			maximum_choice?:number,
			minimum_choice?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by stddev() on columns of table "restaurant_option" */
["restaurant_option_stddev_order_by"]: {
	cost_per_extra?:PartialObjects["order_by"],
	free_choice?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	maximum_choice?:PartialObjects["order_by"],
	minimum_choice?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["restaurant_option_stddev_pop_fields"]: {
		__typename?: "restaurant_option_stddev_pop_fields";
			cost_per_extra?:number,
			free_choice?:number,
			id?:number,
			maximum_choice?:number,
			minimum_choice?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by stddev_pop() on columns of table "restaurant_option" */
["restaurant_option_stddev_pop_order_by"]: {
	cost_per_extra?:PartialObjects["order_by"],
	free_choice?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	maximum_choice?:PartialObjects["order_by"],
	minimum_choice?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["restaurant_option_stddev_samp_fields"]: {
		__typename?: "restaurant_option_stddev_samp_fields";
			cost_per_extra?:number,
			free_choice?:number,
			id?:number,
			maximum_choice?:number,
			minimum_choice?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by stddev_samp() on columns of table "restaurant_option" */
["restaurant_option_stddev_samp_order_by"]: {
	cost_per_extra?:PartialObjects["order_by"],
	free_choice?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	maximum_choice?:PartialObjects["order_by"],
	minimum_choice?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "restaurant_option" */
["restaurant_option_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_option_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_option_stream_cursor_value_input"]: {
	cost_per_extra?:PartialObjects["money"],
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	option_type?:string,
	position?:number,
	restaurant_id?:number
},
	/** aggregate sum on columns */
["restaurant_option_sum_fields"]: {
		__typename?: "restaurant_option_sum_fields";
			cost_per_extra?:PartialObjects["money"],
			free_choice?:number,
			id?:number,
			maximum_choice?:number,
			minimum_choice?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by sum() on columns of table "restaurant_option" */
["restaurant_option_sum_order_by"]: {
	cost_per_extra?:PartialObjects["order_by"],
	free_choice?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	maximum_choice?:PartialObjects["order_by"],
	minimum_choice?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** update columns of table "restaurant_option" */
["restaurant_option_update_column"]:restaurant_option_update_column,
	["restaurant_option_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_option_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_option_set_input"],
	where:PartialObjects["restaurant_option_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_option_var_pop_fields"]: {
		__typename?: "restaurant_option_var_pop_fields";
			cost_per_extra?:number,
			free_choice?:number,
			id?:number,
			maximum_choice?:number,
			minimum_choice?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by var_pop() on columns of table "restaurant_option" */
["restaurant_option_var_pop_order_by"]: {
	cost_per_extra?:PartialObjects["order_by"],
	free_choice?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	maximum_choice?:PartialObjects["order_by"],
	minimum_choice?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["restaurant_option_var_samp_fields"]: {
		__typename?: "restaurant_option_var_samp_fields";
			cost_per_extra?:number,
			free_choice?:number,
			id?:number,
			maximum_choice?:number,
			minimum_choice?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by var_samp() on columns of table "restaurant_option" */
["restaurant_option_var_samp_order_by"]: {
	cost_per_extra?:PartialObjects["order_by"],
	free_choice?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	maximum_choice?:PartialObjects["order_by"],
	minimum_choice?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["restaurant_option_variance_fields"]: {
		__typename?: "restaurant_option_variance_fields";
			cost_per_extra?:number,
			free_choice?:number,
			id?:number,
			maximum_choice?:number,
			minimum_choice?:number,
			name_id?:number,
			position?:number,
			restaurant_id?:number
	},
	/** order by variance() on columns of table "restaurant_option" */
["restaurant_option_variance_order_by"]: {
	cost_per_extra?:PartialObjects["order_by"],
	free_choice?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	maximum_choice?:PartialObjects["order_by"],
	minimum_choice?:PartialObjects["order_by"],
	name_id?:PartialObjects["order_by"],
	position?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"]
},
	/** columns and relationships of "restaurant_order" */
["restaurant_order"]: {
		__typename?: "restaurant_order";
			actual_food_ready_time?:PartialObjects["timestamptz"],
			cancellation_time?:PartialObjects["timestamptz"],
			/** An object relationship */
	chat?:PartialObjects["chat"],
			chat_id?:number,
			/** An object relationship */
	customer?:PartialObjects["customer"],
			customer_app_type?:string,
			customer_id?:number,
			/** An object relationship */
	delivery?:PartialObjects["delivery_order"],
			delivery_cost?:PartialObjects["money"],
			delivery_id?:number,
			estimated_food_ready_time?:PartialObjects["timestamptz"],
			firebase_id?:string,
			id?:number,
			/** An array relationship */
	items?:PartialObjects["restaurant_order_item"][],
			/** An aggregate relationship */
	items_aggregate?:PartialObjects["restaurant_order_item_aggregate"],
			/** A computed field, executes function "itemscost" */
	items_cost?:PartialObjects["money"],
			notes?:string,
			order_time?:PartialObjects["timestamptz"],
			order_type?:string,
			payment_type?:string,
			refund_amount?:number,
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			restaurant_id?:number,
			/** An object relationship */
	review?:PartialObjects["review"],
			review_id?:number,
			/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
			stripe_payment_id?:number,
			tax?:PartialObjects["float8"],
			to_location_address?:string,
			to_location_gps?:PartialObjects["geography"],
			/** A computed field, executes function "totalcost" */
	total_cost?:PartialObjects["money"]
	},
	/** aggregated selection of "restaurant_order" */
["restaurant_order_aggregate"]: {
		__typename?: "restaurant_order_aggregate";
			aggregate?:PartialObjects["restaurant_order_aggregate_fields"],
			nodes?:PartialObjects["restaurant_order"][]
	},
	/** aggregate fields of "restaurant_order" */
["restaurant_order_aggregate_fields"]: {
		__typename?: "restaurant_order_aggregate_fields";
			avg?:PartialObjects["restaurant_order_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_order_max_fields"],
			min?:PartialObjects["restaurant_order_min_fields"],
			stddev?:PartialObjects["restaurant_order_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_order_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_order_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_order_sum_fields"],
			var_pop?:PartialObjects["restaurant_order_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_order_var_samp_fields"],
			variance?:PartialObjects["restaurant_order_variance_fields"]
	},
	/** order by aggregate values of table "restaurant_order" */
["restaurant_order_aggregate_order_by"]: {
	avg?:PartialObjects["restaurant_order_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["restaurant_order_max_order_by"],
	min?:PartialObjects["restaurant_order_min_order_by"],
	stddev?:PartialObjects["restaurant_order_stddev_order_by"],
	stddev_pop?:PartialObjects["restaurant_order_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["restaurant_order_stddev_samp_order_by"],
	sum?:PartialObjects["restaurant_order_sum_order_by"],
	var_pop?:PartialObjects["restaurant_order_var_pop_order_by"],
	var_samp?:PartialObjects["restaurant_order_var_samp_order_by"],
	variance?:PartialObjects["restaurant_order_variance_order_by"]
},
	/** input type for inserting array relation for remote table "restaurant_order" */
["restaurant_order_arr_rel_insert_input"]: {
	data:PartialObjects["restaurant_order_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_order_on_conflict"]
},
	/** aggregate avg on columns */
["restaurant_order_avg_fields"]: {
		__typename?: "restaurant_order_avg_fields";
			chat_id?:number,
			customer_id?:number,
			delivery_cost?:number,
			delivery_id?:number,
			id?:number,
			refund_amount?:number,
			restaurant_id?:number,
			review_id?:number,
			stripe_payment_id?:number,
			tax?:number
	},
	/** order by avg() on columns of table "restaurant_order" */
["restaurant_order_avg_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	delivery_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	refund_amount?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	tax?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "restaurant_order". All fields are combined with a logical 'AND'. */
["restaurant_order_bool_exp"]: {
	_and?:PartialObjects["restaurant_order_bool_exp"][],
	_not?:PartialObjects["restaurant_order_bool_exp"],
	_or?:PartialObjects["restaurant_order_bool_exp"][],
	actual_food_ready_time?:PartialObjects["timestamptz_comparison_exp"],
	cancellation_time?:PartialObjects["timestamptz_comparison_exp"],
	chat?:PartialObjects["chat_bool_exp"],
	chat_id?:PartialObjects["Int_comparison_exp"],
	customer?:PartialObjects["customer_bool_exp"],
	customer_app_type?:PartialObjects["String_comparison_exp"],
	customer_id?:PartialObjects["Int_comparison_exp"],
	delivery?:PartialObjects["delivery_order_bool_exp"],
	delivery_cost?:PartialObjects["money_comparison_exp"],
	delivery_id?:PartialObjects["Int_comparison_exp"],
	estimated_food_ready_time?:PartialObjects["timestamptz_comparison_exp"],
	firebase_id?:PartialObjects["String_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	items?:PartialObjects["restaurant_order_item_bool_exp"],
	items_cost?:PartialObjects["money_comparison_exp"],
	notes?:PartialObjects["String_comparison_exp"],
	order_time?:PartialObjects["timestamptz_comparison_exp"],
	order_type?:PartialObjects["String_comparison_exp"],
	payment_type?:PartialObjects["String_comparison_exp"],
	refund_amount?:PartialObjects["Int_comparison_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	restaurant_id?:PartialObjects["Int_comparison_exp"],
	review?:PartialObjects["review_bool_exp"],
	review_id?:PartialObjects["Int_comparison_exp"],
	status?:PartialObjects["String_comparison_exp"],
	stripe_payment_id?:PartialObjects["Int_comparison_exp"],
	tax?:PartialObjects["float8_comparison_exp"],
	to_location_address?:PartialObjects["String_comparison_exp"],
	to_location_gps?:PartialObjects["geography_comparison_exp"],
	total_cost?:PartialObjects["money_comparison_exp"]
},
	/** Ordering options when selecting data from "restaurant". */
["restaurant_order_by"]: {
	approved?:PartialObjects["order_by"],
	categories_aggregate?:PartialObjects["restaurant_category_aggregate_order_by"],
	description?:PartialObjects["translation_order_by"],
	description_id?:PartialObjects["order_by"],
	firebase_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	image?:PartialObjects["order_by"],
	language_id?:PartialObjects["order_by"],
	location_gps?:PartialObjects["order_by"],
	location_text?:PartialObjects["order_by"],
	name?:PartialObjects["order_by"],
	open_status?:PartialObjects["order_by"],
	orders_aggregate?:PartialObjects["restaurant_order_aggregate_order_by"],
	payment_info?:PartialObjects["service_provider_payment_info_order_by"],
	payment_info_id?:PartialObjects["order_by"],
	restaurant_operators_aggregate?:PartialObjects["restaurant_operator_aggregate_order_by"],
	schedule_id?:PartialObjects["order_by"],
	self_delivery?:PartialObjects["order_by"],
	service_provider_type?:PartialObjects["order_by"],
	specials_aggregate?:PartialObjects["restaurant_item_aggregate_order_by"]
},
	/** unique or primary key constraints on table "restaurant_order" */
["restaurant_order_constraint"]:restaurant_order_constraint,
	/** input type for incrementing numeric columns in table "restaurant_order" */
["restaurant_order_inc_input"]: {
	chat_id?:number,
	customer_id?:number,
	delivery_cost?:PartialObjects["money"],
	delivery_id?:number,
	id?:number,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	stripe_payment_id?:number,
	tax?:PartialObjects["float8"]
},
	/** input type for inserting data into table "restaurant_order" */
["restaurant_order_insert_input"]: {
	actual_food_ready_time?:PartialObjects["timestamptz"],
	cancellation_time?:PartialObjects["timestamptz"],
	chat?:PartialObjects["chat_obj_rel_insert_input"],
	chat_id?:number,
	customer?:PartialObjects["customer_obj_rel_insert_input"],
	customer_app_type?:string,
	customer_id?:number,
	delivery?:PartialObjects["delivery_order_obj_rel_insert_input"],
	delivery_cost?:PartialObjects["money"],
	delivery_id?:number,
	estimated_food_ready_time?:PartialObjects["timestamptz"],
	firebase_id?:string,
	id?:number,
	items?:PartialObjects["restaurant_order_item_arr_rel_insert_input"],
	notes?:string,
	order_time?:PartialObjects["timestamptz"],
	order_type?:string,
	payment_type?:string,
	refund_amount?:number,
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	restaurant_id?:number,
	review?:PartialObjects["review_obj_rel_insert_input"],
	review_id?:number,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
	stripe_payment_id?:number,
	tax?:PartialObjects["float8"],
	to_location_address?:string,
	to_location_gps?:PartialObjects["geography"]
},
	/** in_json:[name(en,es), selected_options] */
["restaurant_order_item"]: {
		__typename?: "restaurant_order_item";
			cost_per_one?:PartialObjects["money"],
			id?:number,
			in_json?:PartialObjects["json"],
			notes?:string,
			/** An object relationship */
	order?:PartialObjects["restaurant_order"],
			quantity?:number,
			/** An object relationship */
	restaurant_item?:PartialObjects["restaurant_item"],
			restaurant_item_id?:number,
			restaurant_order_id?:number,
			review_id?:number,
			unavailable?:boolean
	},
	/** aggregated selection of "restaurant_order_item" */
["restaurant_order_item_aggregate"]: {
		__typename?: "restaurant_order_item_aggregate";
			aggregate?:PartialObjects["restaurant_order_item_aggregate_fields"],
			nodes?:PartialObjects["restaurant_order_item"][]
	},
	/** aggregate fields of "restaurant_order_item" */
["restaurant_order_item_aggregate_fields"]: {
		__typename?: "restaurant_order_item_aggregate_fields";
			avg?:PartialObjects["restaurant_order_item_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_order_item_max_fields"],
			min?:PartialObjects["restaurant_order_item_min_fields"],
			stddev?:PartialObjects["restaurant_order_item_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_order_item_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_order_item_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_order_item_sum_fields"],
			var_pop?:PartialObjects["restaurant_order_item_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_order_item_var_samp_fields"],
			variance?:PartialObjects["restaurant_order_item_variance_fields"]
	},
	/** order by aggregate values of table "restaurant_order_item" */
["restaurant_order_item_aggregate_order_by"]: {
	avg?:PartialObjects["restaurant_order_item_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["restaurant_order_item_max_order_by"],
	min?:PartialObjects["restaurant_order_item_min_order_by"],
	stddev?:PartialObjects["restaurant_order_item_stddev_order_by"],
	stddev_pop?:PartialObjects["restaurant_order_item_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["restaurant_order_item_stddev_samp_order_by"],
	sum?:PartialObjects["restaurant_order_item_sum_order_by"],
	var_pop?:PartialObjects["restaurant_order_item_var_pop_order_by"],
	var_samp?:PartialObjects["restaurant_order_item_var_samp_order_by"],
	variance?:PartialObjects["restaurant_order_item_variance_order_by"]
},
	/** input type for inserting array relation for remote table "restaurant_order_item" */
["restaurant_order_item_arr_rel_insert_input"]: {
	data:PartialObjects["restaurant_order_item_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_order_item_on_conflict"]
},
	/** aggregate avg on columns */
["restaurant_order_item_avg_fields"]: {
		__typename?: "restaurant_order_item_avg_fields";
			cost_per_one?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number,
			restaurant_order_id?:number,
			review_id?:number
	},
	/** order by avg() on columns of table "restaurant_order_item" */
["restaurant_order_item_avg_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"],
	restaurant_order_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "restaurant_order_item". All fields are combined with a logical 'AND'. */
["restaurant_order_item_bool_exp"]: {
	_and?:PartialObjects["restaurant_order_item_bool_exp"][],
	_not?:PartialObjects["restaurant_order_item_bool_exp"],
	_or?:PartialObjects["restaurant_order_item_bool_exp"][],
	cost_per_one?:PartialObjects["money_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	in_json?:PartialObjects["json_comparison_exp"],
	notes?:PartialObjects["String_comparison_exp"],
	order?:PartialObjects["restaurant_order_bool_exp"],
	quantity?:PartialObjects["Int_comparison_exp"],
	restaurant_item?:PartialObjects["restaurant_item_bool_exp"],
	restaurant_item_id?:PartialObjects["Int_comparison_exp"],
	restaurant_order_id?:PartialObjects["Int_comparison_exp"],
	review_id?:PartialObjects["Int_comparison_exp"],
	unavailable?:PartialObjects["Boolean_comparison_exp"]
},
	/** unique or primary key constraints on table "restaurant_order_item" */
["restaurant_order_item_constraint"]:restaurant_order_item_constraint,
	/** input type for incrementing numeric columns in table "restaurant_order_item" */
["restaurant_order_item_inc_input"]: {
	cost_per_one?:PartialObjects["money"],
	id?:number,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
},
	/** input type for inserting data into table "restaurant_order_item" */
["restaurant_order_item_insert_input"]: {
	cost_per_one?:PartialObjects["money"],
	id?:number,
	in_json?:PartialObjects["json"],
	notes?:string,
	order?:PartialObjects["restaurant_order_obj_rel_insert_input"],
	quantity?:number,
	restaurant_item?:PartialObjects["restaurant_item_obj_rel_insert_input"],
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number,
	unavailable?:boolean
},
	/** aggregate max on columns */
["restaurant_order_item_max_fields"]: {
		__typename?: "restaurant_order_item_max_fields";
			cost_per_one?:PartialObjects["money"],
			id?:number,
			notes?:string,
			quantity?:number,
			restaurant_item_id?:number,
			restaurant_order_id?:number,
			review_id?:number
	},
	/** order by max() on columns of table "restaurant_order_item" */
["restaurant_order_item_max_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	notes?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"],
	restaurant_order_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["restaurant_order_item_min_fields"]: {
		__typename?: "restaurant_order_item_min_fields";
			cost_per_one?:PartialObjects["money"],
			id?:number,
			notes?:string,
			quantity?:number,
			restaurant_item_id?:number,
			restaurant_order_id?:number,
			review_id?:number
	},
	/** order by min() on columns of table "restaurant_order_item" */
["restaurant_order_item_min_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	notes?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"],
	restaurant_order_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "restaurant_order_item" */
["restaurant_order_item_mutation_response"]: {
		__typename?: "restaurant_order_item_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant_order_item"][]
	},
	/** on_conflict condition type for table "restaurant_order_item" */
["restaurant_order_item_on_conflict"]: {
	constraint:PartialObjects["restaurant_order_item_constraint"],
	update_columns:PartialObjects["restaurant_order_item_update_column"][],
	where?:PartialObjects["restaurant_order_item_bool_exp"]
},
	/** Ordering options when selecting data from "restaurant_order_item". */
["restaurant_order_item_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	in_json?:PartialObjects["order_by"],
	notes?:PartialObjects["order_by"],
	order?:PartialObjects["restaurant_order_order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item?:PartialObjects["restaurant_item_order_by"],
	restaurant_item_id?:PartialObjects["order_by"],
	restaurant_order_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"],
	unavailable?:PartialObjects["order_by"]
},
	/** primary key columns input for table: restaurant_order_item */
["restaurant_order_item_pk_columns_input"]: {
	id:number
},
	/** select columns of table "restaurant_order_item" */
["restaurant_order_item_select_column"]:restaurant_order_item_select_column,
	/** input type for updating data in table "restaurant_order_item" */
["restaurant_order_item_set_input"]: {
	cost_per_one?:PartialObjects["money"],
	id?:number,
	in_json?:PartialObjects["json"],
	notes?:string,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number,
	unavailable?:boolean
},
	/** aggregate stddev on columns */
["restaurant_order_item_stddev_fields"]: {
		__typename?: "restaurant_order_item_stddev_fields";
			cost_per_one?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number,
			restaurant_order_id?:number,
			review_id?:number
	},
	/** order by stddev() on columns of table "restaurant_order_item" */
["restaurant_order_item_stddev_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"],
	restaurant_order_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["restaurant_order_item_stddev_pop_fields"]: {
		__typename?: "restaurant_order_item_stddev_pop_fields";
			cost_per_one?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number,
			restaurant_order_id?:number,
			review_id?:number
	},
	/** order by stddev_pop() on columns of table "restaurant_order_item" */
["restaurant_order_item_stddev_pop_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"],
	restaurant_order_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["restaurant_order_item_stddev_samp_fields"]: {
		__typename?: "restaurant_order_item_stddev_samp_fields";
			cost_per_one?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number,
			restaurant_order_id?:number,
			review_id?:number
	},
	/** order by stddev_samp() on columns of table "restaurant_order_item" */
["restaurant_order_item_stddev_samp_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"],
	restaurant_order_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "restaurant_order_item" */
["restaurant_order_item_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_order_item_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_order_item_stream_cursor_value_input"]: {
	cost_per_one?:PartialObjects["money"],
	id?:number,
	in_json?:PartialObjects["json"],
	notes?:string,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number,
	unavailable?:boolean
},
	/** aggregate sum on columns */
["restaurant_order_item_sum_fields"]: {
		__typename?: "restaurant_order_item_sum_fields";
			cost_per_one?:PartialObjects["money"],
			id?:number,
			quantity?:number,
			restaurant_item_id?:number,
			restaurant_order_id?:number,
			review_id?:number
	},
	/** order by sum() on columns of table "restaurant_order_item" */
["restaurant_order_item_sum_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"],
	restaurant_order_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"]
},
	/** update columns of table "restaurant_order_item" */
["restaurant_order_item_update_column"]:restaurant_order_item_update_column,
	["restaurant_order_item_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_order_item_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_order_item_set_input"],
	where:PartialObjects["restaurant_order_item_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_order_item_var_pop_fields"]: {
		__typename?: "restaurant_order_item_var_pop_fields";
			cost_per_one?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number,
			restaurant_order_id?:number,
			review_id?:number
	},
	/** order by var_pop() on columns of table "restaurant_order_item" */
["restaurant_order_item_var_pop_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"],
	restaurant_order_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["restaurant_order_item_var_samp_fields"]: {
		__typename?: "restaurant_order_item_var_samp_fields";
			cost_per_one?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number,
			restaurant_order_id?:number,
			review_id?:number
	},
	/** order by var_samp() on columns of table "restaurant_order_item" */
["restaurant_order_item_var_samp_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"],
	restaurant_order_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["restaurant_order_item_variance_fields"]: {
		__typename?: "restaurant_order_item_variance_fields";
			cost_per_one?:number,
			id?:number,
			quantity?:number,
			restaurant_item_id?:number,
			restaurant_order_id?:number,
			review_id?:number
	},
	/** order by variance() on columns of table "restaurant_order_item" */
["restaurant_order_item_variance_order_by"]: {
	cost_per_one?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	quantity?:PartialObjects["order_by"],
	restaurant_item_id?:PartialObjects["order_by"],
	restaurant_order_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"]
},
	/** aggregate max on columns */
["restaurant_order_max_fields"]: {
		__typename?: "restaurant_order_max_fields";
			actual_food_ready_time?:PartialObjects["timestamptz"],
			cancellation_time?:PartialObjects["timestamptz"],
			chat_id?:number,
			customer_app_type?:string,
			customer_id?:number,
			delivery_cost?:PartialObjects["money"],
			delivery_id?:number,
			estimated_food_ready_time?:PartialObjects["timestamptz"],
			firebase_id?:string,
			id?:number,
			notes?:string,
			order_time?:PartialObjects["timestamptz"],
			order_type?:string,
			payment_type?:string,
			refund_amount?:number,
			restaurant_id?:number,
			review_id?:number,
			/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
			stripe_payment_id?:number,
			tax?:PartialObjects["float8"],
			to_location_address?:string
	},
	/** order by max() on columns of table "restaurant_order" */
["restaurant_order_max_order_by"]: {
	actual_food_ready_time?:PartialObjects["order_by"],
	cancellation_time?:PartialObjects["order_by"],
	chat_id?:PartialObjects["order_by"],
	customer_app_type?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	delivery_id?:PartialObjects["order_by"],
	estimated_food_ready_time?:PartialObjects["order_by"],
	firebase_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	notes?:PartialObjects["order_by"],
	order_time?:PartialObjects["order_by"],
	order_type?:PartialObjects["order_by"],
	payment_type?:PartialObjects["order_by"],
	refund_amount?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"],
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	tax?:PartialObjects["order_by"],
	to_location_address?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["restaurant_order_min_fields"]: {
		__typename?: "restaurant_order_min_fields";
			actual_food_ready_time?:PartialObjects["timestamptz"],
			cancellation_time?:PartialObjects["timestamptz"],
			chat_id?:number,
			customer_app_type?:string,
			customer_id?:number,
			delivery_cost?:PartialObjects["money"],
			delivery_id?:number,
			estimated_food_ready_time?:PartialObjects["timestamptz"],
			firebase_id?:string,
			id?:number,
			notes?:string,
			order_time?:PartialObjects["timestamptz"],
			order_type?:string,
			payment_type?:string,
			refund_amount?:number,
			restaurant_id?:number,
			review_id?:number,
			/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
			stripe_payment_id?:number,
			tax?:PartialObjects["float8"],
			to_location_address?:string
	},
	/** order by min() on columns of table "restaurant_order" */
["restaurant_order_min_order_by"]: {
	actual_food_ready_time?:PartialObjects["order_by"],
	cancellation_time?:PartialObjects["order_by"],
	chat_id?:PartialObjects["order_by"],
	customer_app_type?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	delivery_id?:PartialObjects["order_by"],
	estimated_food_ready_time?:PartialObjects["order_by"],
	firebase_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	notes?:PartialObjects["order_by"],
	order_time?:PartialObjects["order_by"],
	order_type?:PartialObjects["order_by"],
	payment_type?:PartialObjects["order_by"],
	refund_amount?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"],
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	tax?:PartialObjects["order_by"],
	to_location_address?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "restaurant_order" */
["restaurant_order_mutation_response"]: {
		__typename?: "restaurant_order_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant_order"][]
	},
	/** input type for inserting object relation for remote table "restaurant_order" */
["restaurant_order_obj_rel_insert_input"]: {
	data:PartialObjects["restaurant_order_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["restaurant_order_on_conflict"]
},
	/** on_conflict condition type for table "restaurant_order" */
["restaurant_order_on_conflict"]: {
	constraint:PartialObjects["restaurant_order_constraint"],
	update_columns:PartialObjects["restaurant_order_update_column"][],
	where?:PartialObjects["restaurant_order_bool_exp"]
},
	/** Ordering options when selecting data from "restaurant_order". */
["restaurant_order_order_by"]: {
	actual_food_ready_time?:PartialObjects["order_by"],
	cancellation_time?:PartialObjects["order_by"],
	chat?:PartialObjects["chat_order_by"],
	chat_id?:PartialObjects["order_by"],
	customer?:PartialObjects["customer_order_by"],
	customer_app_type?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	delivery?:PartialObjects["delivery_order_order_by"],
	delivery_cost?:PartialObjects["order_by"],
	delivery_id?:PartialObjects["order_by"],
	estimated_food_ready_time?:PartialObjects["order_by"],
	firebase_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	items_aggregate?:PartialObjects["restaurant_order_item_aggregate_order_by"],
	items_cost?:PartialObjects["order_by"],
	notes?:PartialObjects["order_by"],
	order_time?:PartialObjects["order_by"],
	order_type?:PartialObjects["order_by"],
	payment_type?:PartialObjects["order_by"],
	refund_amount?:PartialObjects["order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	restaurant_id?:PartialObjects["order_by"],
	review?:PartialObjects["review_order_by"],
	review_id?:PartialObjects["order_by"],
	status?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	tax?:PartialObjects["order_by"],
	to_location_address?:PartialObjects["order_by"],
	to_location_gps?:PartialObjects["order_by"],
	total_cost?:PartialObjects["order_by"]
},
	/** primary key columns input for table: restaurant_order */
["restaurant_order_pk_columns_input"]: {
	id:number
},
	/** columns and relationships of "restaurant_order_public" */
["restaurant_order_public"]: {
		__typename?: "restaurant_order_public";
			actual_food_ready_time?:PartialObjects["timestamptz"],
			customer_id?:number,
			estimated_food_ready_time?:PartialObjects["timestamptz"],
			order_time?:PartialObjects["timestamptz"],
			restaurant_id?:number,
			/** An array relationship */
	restaurant_operators?:PartialObjects["restaurant_operator"][],
			/** An aggregate relationship */
	restaurant_operators_aggregate?:PartialObjects["restaurant_operator_aggregate"],
			review_id?:number,
			status?:string
	},
	/** aggregated selection of "restaurant_order_public" */
["restaurant_order_public_aggregate"]: {
		__typename?: "restaurant_order_public_aggregate";
			aggregate?:PartialObjects["restaurant_order_public_aggregate_fields"],
			nodes?:PartialObjects["restaurant_order_public"][]
	},
	/** aggregate fields of "restaurant_order_public" */
["restaurant_order_public_aggregate_fields"]: {
		__typename?: "restaurant_order_public_aggregate_fields";
			avg?:PartialObjects["restaurant_order_public_avg_fields"],
			count?:number,
			max?:PartialObjects["restaurant_order_public_max_fields"],
			min?:PartialObjects["restaurant_order_public_min_fields"],
			stddev?:PartialObjects["restaurant_order_public_stddev_fields"],
			stddev_pop?:PartialObjects["restaurant_order_public_stddev_pop_fields"],
			stddev_samp?:PartialObjects["restaurant_order_public_stddev_samp_fields"],
			sum?:PartialObjects["restaurant_order_public_sum_fields"],
			var_pop?:PartialObjects["restaurant_order_public_var_pop_fields"],
			var_samp?:PartialObjects["restaurant_order_public_var_samp_fields"],
			variance?:PartialObjects["restaurant_order_public_variance_fields"]
	},
	/** aggregate avg on columns */
["restaurant_order_public_avg_fields"]: {
		__typename?: "restaurant_order_public_avg_fields";
			customer_id?:number,
			restaurant_id?:number,
			review_id?:number
	},
	/** Boolean expression to filter rows from the table "restaurant_order_public". All fields are combined with a logical 'AND'. */
["restaurant_order_public_bool_exp"]: {
	_and?:PartialObjects["restaurant_order_public_bool_exp"][],
	_not?:PartialObjects["restaurant_order_public_bool_exp"],
	_or?:PartialObjects["restaurant_order_public_bool_exp"][],
	actual_food_ready_time?:PartialObjects["timestamptz_comparison_exp"],
	customer_id?:PartialObjects["Int_comparison_exp"],
	estimated_food_ready_time?:PartialObjects["timestamptz_comparison_exp"],
	order_time?:PartialObjects["timestamptz_comparison_exp"],
	restaurant_id?:PartialObjects["Int_comparison_exp"],
	restaurant_operators?:PartialObjects["restaurant_operator_bool_exp"],
	review_id?:PartialObjects["Int_comparison_exp"],
	status?:PartialObjects["String_comparison_exp"]
},
	/** input type for incrementing numeric columns in table "restaurant_order_public" */
["restaurant_order_public_inc_input"]: {
	customer_id?:number,
	restaurant_id?:number,
	review_id?:number
},
	/** input type for inserting data into table "restaurant_order_public" */
["restaurant_order_public_insert_input"]: {
	actual_food_ready_time?:PartialObjects["timestamptz"],
	customer_id?:number,
	estimated_food_ready_time?:PartialObjects["timestamptz"],
	order_time?:PartialObjects["timestamptz"],
	restaurant_id?:number,
	restaurant_operators?:PartialObjects["restaurant_operator_arr_rel_insert_input"],
	review_id?:number,
	status?:string
},
	/** aggregate max on columns */
["restaurant_order_public_max_fields"]: {
		__typename?: "restaurant_order_public_max_fields";
			actual_food_ready_time?:PartialObjects["timestamptz"],
			customer_id?:number,
			estimated_food_ready_time?:PartialObjects["timestamptz"],
			order_time?:PartialObjects["timestamptz"],
			restaurant_id?:number,
			review_id?:number,
			status?:string
	},
	/** aggregate min on columns */
["restaurant_order_public_min_fields"]: {
		__typename?: "restaurant_order_public_min_fields";
			actual_food_ready_time?:PartialObjects["timestamptz"],
			customer_id?:number,
			estimated_food_ready_time?:PartialObjects["timestamptz"],
			order_time?:PartialObjects["timestamptz"],
			restaurant_id?:number,
			review_id?:number,
			status?:string
	},
	/** response of any mutation on the table "restaurant_order_public" */
["restaurant_order_public_mutation_response"]: {
		__typename?: "restaurant_order_public_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["restaurant_order_public"][]
	},
	/** Ordering options when selecting data from "restaurant_order_public". */
["restaurant_order_public_order_by"]: {
	actual_food_ready_time?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	estimated_food_ready_time?:PartialObjects["order_by"],
	order_time?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	restaurant_operators_aggregate?:PartialObjects["restaurant_operator_aggregate_order_by"],
	review_id?:PartialObjects["order_by"],
	status?:PartialObjects["order_by"]
},
	/** select columns of table "restaurant_order_public" */
["restaurant_order_public_select_column"]:restaurant_order_public_select_column,
	/** input type for updating data in table "restaurant_order_public" */
["restaurant_order_public_set_input"]: {
	actual_food_ready_time?:PartialObjects["timestamptz"],
	customer_id?:number,
	estimated_food_ready_time?:PartialObjects["timestamptz"],
	order_time?:PartialObjects["timestamptz"],
	restaurant_id?:number,
	review_id?:number,
	status?:string
},
	/** aggregate stddev on columns */
["restaurant_order_public_stddev_fields"]: {
		__typename?: "restaurant_order_public_stddev_fields";
			customer_id?:number,
			restaurant_id?:number,
			review_id?:number
	},
	/** aggregate stddev_pop on columns */
["restaurant_order_public_stddev_pop_fields"]: {
		__typename?: "restaurant_order_public_stddev_pop_fields";
			customer_id?:number,
			restaurant_id?:number,
			review_id?:number
	},
	/** aggregate stddev_samp on columns */
["restaurant_order_public_stddev_samp_fields"]: {
		__typename?: "restaurant_order_public_stddev_samp_fields";
			customer_id?:number,
			restaurant_id?:number,
			review_id?:number
	},
	/** Streaming cursor of the table "restaurant_order_public" */
["restaurant_order_public_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_order_public_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_order_public_stream_cursor_value_input"]: {
	actual_food_ready_time?:PartialObjects["timestamptz"],
	customer_id?:number,
	estimated_food_ready_time?:PartialObjects["timestamptz"],
	order_time?:PartialObjects["timestamptz"],
	restaurant_id?:number,
	review_id?:number,
	status?:string
},
	/** aggregate sum on columns */
["restaurant_order_public_sum_fields"]: {
		__typename?: "restaurant_order_public_sum_fields";
			customer_id?:number,
			restaurant_id?:number,
			review_id?:number
	},
	["restaurant_order_public_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_order_public_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_order_public_set_input"],
	where:PartialObjects["restaurant_order_public_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_order_public_var_pop_fields"]: {
		__typename?: "restaurant_order_public_var_pop_fields";
			customer_id?:number,
			restaurant_id?:number,
			review_id?:number
	},
	/** aggregate var_samp on columns */
["restaurant_order_public_var_samp_fields"]: {
		__typename?: "restaurant_order_public_var_samp_fields";
			customer_id?:number,
			restaurant_id?:number,
			review_id?:number
	},
	/** aggregate variance on columns */
["restaurant_order_public_variance_fields"]: {
		__typename?: "restaurant_order_public_variance_fields";
			customer_id?:number,
			restaurant_id?:number,
			review_id?:number
	},
	/** select columns of table "restaurant_order" */
["restaurant_order_select_column"]:restaurant_order_select_column,
	/** input type for updating data in table "restaurant_order" */
["restaurant_order_set_input"]: {
	actual_food_ready_time?:PartialObjects["timestamptz"],
	cancellation_time?:PartialObjects["timestamptz"],
	chat_id?:number,
	customer_app_type?:string,
	customer_id?:number,
	delivery_cost?:PartialObjects["money"],
	delivery_id?:number,
	estimated_food_ready_time?:PartialObjects["timestamptz"],
	firebase_id?:string,
	id?:number,
	notes?:string,
	order_time?:PartialObjects["timestamptz"],
	order_type?:string,
	payment_type?:string,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
	stripe_payment_id?:number,
	tax?:PartialObjects["float8"],
	to_location_address?:string,
	to_location_gps?:PartialObjects["geography"]
},
	/** aggregate stddev on columns */
["restaurant_order_stddev_fields"]: {
		__typename?: "restaurant_order_stddev_fields";
			chat_id?:number,
			customer_id?:number,
			delivery_cost?:number,
			delivery_id?:number,
			id?:number,
			refund_amount?:number,
			restaurant_id?:number,
			review_id?:number,
			stripe_payment_id?:number,
			tax?:number
	},
	/** order by stddev() on columns of table "restaurant_order" */
["restaurant_order_stddev_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	delivery_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	refund_amount?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	tax?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["restaurant_order_stddev_pop_fields"]: {
		__typename?: "restaurant_order_stddev_pop_fields";
			chat_id?:number,
			customer_id?:number,
			delivery_cost?:number,
			delivery_id?:number,
			id?:number,
			refund_amount?:number,
			restaurant_id?:number,
			review_id?:number,
			stripe_payment_id?:number,
			tax?:number
	},
	/** order by stddev_pop() on columns of table "restaurant_order" */
["restaurant_order_stddev_pop_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	delivery_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	refund_amount?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	tax?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["restaurant_order_stddev_samp_fields"]: {
		__typename?: "restaurant_order_stddev_samp_fields";
			chat_id?:number,
			customer_id?:number,
			delivery_cost?:number,
			delivery_id?:number,
			id?:number,
			refund_amount?:number,
			restaurant_id?:number,
			review_id?:number,
			stripe_payment_id?:number,
			tax?:number
	},
	/** order by stddev_samp() on columns of table "restaurant_order" */
["restaurant_order_stddev_samp_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	delivery_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	refund_amount?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	tax?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "restaurant_order" */
["restaurant_order_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_order_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_order_stream_cursor_value_input"]: {
	actual_food_ready_time?:PartialObjects["timestamptz"],
	cancellation_time?:PartialObjects["timestamptz"],
	chat_id?:number,
	customer_app_type?:string,
	customer_id?:number,
	delivery_cost?:PartialObjects["money"],
	delivery_id?:number,
	estimated_food_ready_time?:PartialObjects["timestamptz"],
	firebase_id?:string,
	id?:number,
	notes?:string,
	order_time?:PartialObjects["timestamptz"],
	order_type?:string,
	payment_type?:string,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
	stripe_payment_id?:number,
	tax?:PartialObjects["float8"],
	to_location_address?:string,
	to_location_gps?:PartialObjects["geography"]
},
	/** aggregate sum on columns */
["restaurant_order_sum_fields"]: {
		__typename?: "restaurant_order_sum_fields";
			chat_id?:number,
			customer_id?:number,
			delivery_cost?:PartialObjects["money"],
			delivery_id?:number,
			id?:number,
			refund_amount?:number,
			restaurant_id?:number,
			review_id?:number,
			stripe_payment_id?:number,
			tax?:PartialObjects["float8"]
	},
	/** order by sum() on columns of table "restaurant_order" */
["restaurant_order_sum_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	delivery_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	refund_amount?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	tax?:PartialObjects["order_by"]
},
	/** update columns of table "restaurant_order" */
["restaurant_order_update_column"]:restaurant_order_update_column,
	["restaurant_order_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_order_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_order_set_input"],
	where:PartialObjects["restaurant_order_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_order_var_pop_fields"]: {
		__typename?: "restaurant_order_var_pop_fields";
			chat_id?:number,
			customer_id?:number,
			delivery_cost?:number,
			delivery_id?:number,
			id?:number,
			refund_amount?:number,
			restaurant_id?:number,
			review_id?:number,
			stripe_payment_id?:number,
			tax?:number
	},
	/** order by var_pop() on columns of table "restaurant_order" */
["restaurant_order_var_pop_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	delivery_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	refund_amount?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	tax?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["restaurant_order_var_samp_fields"]: {
		__typename?: "restaurant_order_var_samp_fields";
			chat_id?:number,
			customer_id?:number,
			delivery_cost?:number,
			delivery_id?:number,
			id?:number,
			refund_amount?:number,
			restaurant_id?:number,
			review_id?:number,
			stripe_payment_id?:number,
			tax?:number
	},
	/** order by var_samp() on columns of table "restaurant_order" */
["restaurant_order_var_samp_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	delivery_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	refund_amount?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	tax?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["restaurant_order_variance_fields"]: {
		__typename?: "restaurant_order_variance_fields";
			chat_id?:number,
			customer_id?:number,
			delivery_cost?:number,
			delivery_id?:number,
			id?:number,
			refund_amount?:number,
			restaurant_id?:number,
			review_id?:number,
			stripe_payment_id?:number,
			tax?:number
	},
	/** order by variance() on columns of table "restaurant_order" */
["restaurant_order_variance_order_by"]: {
	chat_id?:PartialObjects["order_by"],
	customer_id?:PartialObjects["order_by"],
	delivery_cost?:PartialObjects["order_by"],
	delivery_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	refund_amount?:PartialObjects["order_by"],
	restaurant_id?:PartialObjects["order_by"],
	review_id?:PartialObjects["order_by"],
	stripe_payment_id?:PartialObjects["order_by"],
	tax?:PartialObjects["order_by"]
},
	/** primary key columns input for table: restaurant */
["restaurant_pk_columns_input"]: {
	id:number
},
	/** select columns of table "restaurant" */
["restaurant_select_column"]:restaurant_select_column,
	/** input type for updating data in table "restaurant" */
["restaurant_set_input"]: {
	approved?:boolean,
	description_id?:number,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	location_gps?:PartialObjects["geography"],
	location_text?:string,
	name?:string,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
	payment_info_id?:number,
	schedule_id?:number,
	self_delivery?:boolean,
	service_provider_type?:string
},
	/** aggregate stddev on columns */
["restaurant_stddev_fields"]: {
		__typename?: "restaurant_stddev_fields";
			description_id?:number,
			id?:number,
			payment_info_id?:number,
			schedule_id?:number
	},
	/** aggregate stddev_pop on columns */
["restaurant_stddev_pop_fields"]: {
		__typename?: "restaurant_stddev_pop_fields";
			description_id?:number,
			id?:number,
			payment_info_id?:number,
			schedule_id?:number
	},
	/** aggregate stddev_samp on columns */
["restaurant_stddev_samp_fields"]: {
		__typename?: "restaurant_stddev_samp_fields";
			description_id?:number,
			id?:number,
			payment_info_id?:number,
			schedule_id?:number
	},
	/** Streaming cursor of the table "restaurant" */
["restaurant_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["restaurant_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["restaurant_stream_cursor_value_input"]: {
	approved?:boolean,
	description_id?:number,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	location_gps?:PartialObjects["geography"],
	location_text?:string,
	name?:string,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
	payment_info_id?:number,
	schedule_id?:number,
	self_delivery?:boolean,
	service_provider_type?:string
},
	/** aggregate sum on columns */
["restaurant_sum_fields"]: {
		__typename?: "restaurant_sum_fields";
			description_id?:number,
			id?:number,
			payment_info_id?:number,
			schedule_id?:number
	},
	/** update columns of table "restaurant" */
["restaurant_update_column"]:restaurant_update_column,
	["restaurant_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["restaurant_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["restaurant_set_input"],
	where:PartialObjects["restaurant_bool_exp"]
},
	/** aggregate var_pop on columns */
["restaurant_var_pop_fields"]: {
		__typename?: "restaurant_var_pop_fields";
			description_id?:number,
			id?:number,
			payment_info_id?:number,
			schedule_id?:number
	},
	/** aggregate var_samp on columns */
["restaurant_var_samp_fields"]: {
		__typename?: "restaurant_var_samp_fields";
			description_id?:number,
			id?:number,
			payment_info_id?:number,
			schedule_id?:number
	},
	/** aggregate variance on columns */
["restaurant_variance_fields"]: {
		__typename?: "restaurant_variance_fields";
			description_id?:number,
			id?:number,
			payment_info_id?:number,
			schedule_id?:number
	},
	/** columns and relationships of "review" */
["review"]: {
		__typename?: "review";
			from_entity_id?:number,
			from_entity_type?:string,
			id?:number,
			note?:string,
			rating?:number,
			to_entity_id?:number,
			to_entity_type?:string
	},
	/** aggregated selection of "review" */
["review_aggregate"]: {
		__typename?: "review_aggregate";
			aggregate?:PartialObjects["review_aggregate_fields"],
			nodes?:PartialObjects["review"][]
	},
	/** aggregate fields of "review" */
["review_aggregate_fields"]: {
		__typename?: "review_aggregate_fields";
			avg?:PartialObjects["review_avg_fields"],
			count?:number,
			max?:PartialObjects["review_max_fields"],
			min?:PartialObjects["review_min_fields"],
			stddev?:PartialObjects["review_stddev_fields"],
			stddev_pop?:PartialObjects["review_stddev_pop_fields"],
			stddev_samp?:PartialObjects["review_stddev_samp_fields"],
			sum?:PartialObjects["review_sum_fields"],
			var_pop?:PartialObjects["review_var_pop_fields"],
			var_samp?:PartialObjects["review_var_samp_fields"],
			variance?:PartialObjects["review_variance_fields"]
	},
	/** aggregate avg on columns */
["review_avg_fields"]: {
		__typename?: "review_avg_fields";
			from_entity_id?:number,
			id?:number,
			rating?:number,
			to_entity_id?:number
	},
	/** Boolean expression to filter rows from the table "review". All fields are combined with a logical 'AND'. */
["review_bool_exp"]: {
	_and?:PartialObjects["review_bool_exp"][],
	_not?:PartialObjects["review_bool_exp"],
	_or?:PartialObjects["review_bool_exp"][],
	from_entity_id?:PartialObjects["Int_comparison_exp"],
	from_entity_type?:PartialObjects["String_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	note?:PartialObjects["String_comparison_exp"],
	rating?:PartialObjects["Int_comparison_exp"],
	to_entity_id?:PartialObjects["Int_comparison_exp"],
	to_entity_type?:PartialObjects["String_comparison_exp"]
},
	/** unique or primary key constraints on table "review" */
["review_constraint"]:review_constraint,
	/** input type for incrementing numeric columns in table "review" */
["review_inc_input"]: {
	from_entity_id?:number,
	id?:number,
	rating?:number,
	to_entity_id?:number
},
	/** input type for inserting data into table "review" */
["review_insert_input"]: {
	from_entity_id?:number,
	from_entity_type?:string,
	id?:number,
	note?:string,
	rating?:number,
	to_entity_id?:number,
	to_entity_type?:string
},
	/** aggregate max on columns */
["review_max_fields"]: {
		__typename?: "review_max_fields";
			from_entity_id?:number,
			from_entity_type?:string,
			id?:number,
			note?:string,
			rating?:number,
			to_entity_id?:number,
			to_entity_type?:string
	},
	/** aggregate min on columns */
["review_min_fields"]: {
		__typename?: "review_min_fields";
			from_entity_id?:number,
			from_entity_type?:string,
			id?:number,
			note?:string,
			rating?:number,
			to_entity_id?:number,
			to_entity_type?:string
	},
	/** response of any mutation on the table "review" */
["review_mutation_response"]: {
		__typename?: "review_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["review"][]
	},
	/** input type for inserting object relation for remote table "review" */
["review_obj_rel_insert_input"]: {
	data:PartialObjects["review_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["review_on_conflict"]
},
	/** on_conflict condition type for table "review" */
["review_on_conflict"]: {
	constraint:PartialObjects["review_constraint"],
	update_columns:PartialObjects["review_update_column"][],
	where?:PartialObjects["review_bool_exp"]
},
	/** Ordering options when selecting data from "review". */
["review_order_by"]: {
	from_entity_id?:PartialObjects["order_by"],
	from_entity_type?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	note?:PartialObjects["order_by"],
	rating?:PartialObjects["order_by"],
	to_entity_id?:PartialObjects["order_by"],
	to_entity_type?:PartialObjects["order_by"]
},
	/** primary key columns input for table: review */
["review_pk_columns_input"]: {
	id:number
},
	/** select columns of table "review" */
["review_select_column"]:review_select_column,
	/** input type for updating data in table "review" */
["review_set_input"]: {
	from_entity_id?:number,
	from_entity_type?:string,
	id?:number,
	note?:string,
	rating?:number,
	to_entity_id?:number,
	to_entity_type?:string
},
	/** aggregate stddev on columns */
["review_stddev_fields"]: {
		__typename?: "review_stddev_fields";
			from_entity_id?:number,
			id?:number,
			rating?:number,
			to_entity_id?:number
	},
	/** aggregate stddev_pop on columns */
["review_stddev_pop_fields"]: {
		__typename?: "review_stddev_pop_fields";
			from_entity_id?:number,
			id?:number,
			rating?:number,
			to_entity_id?:number
	},
	/** aggregate stddev_samp on columns */
["review_stddev_samp_fields"]: {
		__typename?: "review_stddev_samp_fields";
			from_entity_id?:number,
			id?:number,
			rating?:number,
			to_entity_id?:number
	},
	/** Streaming cursor of the table "review" */
["review_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["review_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["review_stream_cursor_value_input"]: {
	from_entity_id?:number,
	from_entity_type?:string,
	id?:number,
	note?:string,
	rating?:number,
	to_entity_id?:number,
	to_entity_type?:string
},
	/** aggregate sum on columns */
["review_sum_fields"]: {
		__typename?: "review_sum_fields";
			from_entity_id?:number,
			id?:number,
			rating?:number,
			to_entity_id?:number
	},
	/** update columns of table "review" */
["review_update_column"]:review_update_column,
	["review_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["review_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["review_set_input"],
	where:PartialObjects["review_bool_exp"]
},
	/** aggregate var_pop on columns */
["review_var_pop_fields"]: {
		__typename?: "review_var_pop_fields";
			from_entity_id?:number,
			id?:number,
			rating?:number,
			to_entity_id?:number
	},
	/** aggregate var_samp on columns */
["review_var_samp_fields"]: {
		__typename?: "review_var_samp_fields";
			from_entity_id?:number,
			id?:number,
			rating?:number,
			to_entity_id?:number
	},
	/** aggregate variance on columns */
["review_variance_fields"]: {
		__typename?: "review_variance_fields";
			from_entity_id?:number,
			id?:number,
			rating?:number,
			to_entity_id?:number
	},
	/** Customer's saved locations */
["saved_location"]: {
		__typename?: "saved_location";
			customer_id?:number,
			default?:boolean,
			id?:number,
			location_gps?:PartialObjects["geography"],
			location_text?:string,
			name?:string
	},
	/** aggregated selection of "saved_location" */
["saved_location_aggregate"]: {
		__typename?: "saved_location_aggregate";
			aggregate?:PartialObjects["saved_location_aggregate_fields"],
			nodes?:PartialObjects["saved_location"][]
	},
	/** aggregate fields of "saved_location" */
["saved_location_aggregate_fields"]: {
		__typename?: "saved_location_aggregate_fields";
			avg?:PartialObjects["saved_location_avg_fields"],
			count?:number,
			max?:PartialObjects["saved_location_max_fields"],
			min?:PartialObjects["saved_location_min_fields"],
			stddev?:PartialObjects["saved_location_stddev_fields"],
			stddev_pop?:PartialObjects["saved_location_stddev_pop_fields"],
			stddev_samp?:PartialObjects["saved_location_stddev_samp_fields"],
			sum?:PartialObjects["saved_location_sum_fields"],
			var_pop?:PartialObjects["saved_location_var_pop_fields"],
			var_samp?:PartialObjects["saved_location_var_samp_fields"],
			variance?:PartialObjects["saved_location_variance_fields"]
	},
	/** order by aggregate values of table "saved_location" */
["saved_location_aggregate_order_by"]: {
	avg?:PartialObjects["saved_location_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["saved_location_max_order_by"],
	min?:PartialObjects["saved_location_min_order_by"],
	stddev?:PartialObjects["saved_location_stddev_order_by"],
	stddev_pop?:PartialObjects["saved_location_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["saved_location_stddev_samp_order_by"],
	sum?:PartialObjects["saved_location_sum_order_by"],
	var_pop?:PartialObjects["saved_location_var_pop_order_by"],
	var_samp?:PartialObjects["saved_location_var_samp_order_by"],
	variance?:PartialObjects["saved_location_variance_order_by"]
},
	/** input type for inserting array relation for remote table "saved_location" */
["saved_location_arr_rel_insert_input"]: {
	data:PartialObjects["saved_location_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["saved_location_on_conflict"]
},
	/** aggregate avg on columns */
["saved_location_avg_fields"]: {
		__typename?: "saved_location_avg_fields";
			customer_id?:number,
			id?:number
	},
	/** order by avg() on columns of table "saved_location" */
["saved_location_avg_order_by"]: {
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "saved_location". All fields are combined with a logical 'AND'. */
["saved_location_bool_exp"]: {
	_and?:PartialObjects["saved_location_bool_exp"][],
	_not?:PartialObjects["saved_location_bool_exp"],
	_or?:PartialObjects["saved_location_bool_exp"][],
	customer_id?:PartialObjects["Int_comparison_exp"],
	default?:PartialObjects["Boolean_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	location_gps?:PartialObjects["geography_comparison_exp"],
	location_text?:PartialObjects["String_comparison_exp"],
	name?:PartialObjects["String_comparison_exp"]
},
	/** unique or primary key constraints on table "saved_location" */
["saved_location_constraint"]:saved_location_constraint,
	/** input type for incrementing numeric columns in table "saved_location" */
["saved_location_inc_input"]: {
	customer_id?:number,
	id?:number
},
	/** input type for inserting data into table "saved_location" */
["saved_location_insert_input"]: {
	customer_id?:number,
	default?:boolean,
	id?:number,
	location_gps?:PartialObjects["geography"],
	location_text?:string,
	name?:string
},
	/** aggregate max on columns */
["saved_location_max_fields"]: {
		__typename?: "saved_location_max_fields";
			customer_id?:number,
			id?:number,
			location_text?:string,
			name?:string
	},
	/** order by max() on columns of table "saved_location" */
["saved_location_max_order_by"]: {
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	location_text?:PartialObjects["order_by"],
	name?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["saved_location_min_fields"]: {
		__typename?: "saved_location_min_fields";
			customer_id?:number,
			id?:number,
			location_text?:string,
			name?:string
	},
	/** order by min() on columns of table "saved_location" */
["saved_location_min_order_by"]: {
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	location_text?:PartialObjects["order_by"],
	name?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "saved_location" */
["saved_location_mutation_response"]: {
		__typename?: "saved_location_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["saved_location"][]
	},
	/** on_conflict condition type for table "saved_location" */
["saved_location_on_conflict"]: {
	constraint:PartialObjects["saved_location_constraint"],
	update_columns:PartialObjects["saved_location_update_column"][],
	where?:PartialObjects["saved_location_bool_exp"]
},
	/** Ordering options when selecting data from "saved_location". */
["saved_location_order_by"]: {
	customer_id?:PartialObjects["order_by"],
	default?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	location_gps?:PartialObjects["order_by"],
	location_text?:PartialObjects["order_by"],
	name?:PartialObjects["order_by"]
},
	/** primary key columns input for table: saved_location */
["saved_location_pk_columns_input"]: {
	id:number
},
	/** select columns of table "saved_location" */
["saved_location_select_column"]:saved_location_select_column,
	/** input type for updating data in table "saved_location" */
["saved_location_set_input"]: {
	customer_id?:number,
	default?:boolean,
	id?:number,
	location_gps?:PartialObjects["geography"],
	location_text?:string,
	name?:string
},
	/** aggregate stddev on columns */
["saved_location_stddev_fields"]: {
		__typename?: "saved_location_stddev_fields";
			customer_id?:number,
			id?:number
	},
	/** order by stddev() on columns of table "saved_location" */
["saved_location_stddev_order_by"]: {
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["saved_location_stddev_pop_fields"]: {
		__typename?: "saved_location_stddev_pop_fields";
			customer_id?:number,
			id?:number
	},
	/** order by stddev_pop() on columns of table "saved_location" */
["saved_location_stddev_pop_order_by"]: {
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["saved_location_stddev_samp_fields"]: {
		__typename?: "saved_location_stddev_samp_fields";
			customer_id?:number,
			id?:number
	},
	/** order by stddev_samp() on columns of table "saved_location" */
["saved_location_stddev_samp_order_by"]: {
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "saved_location" */
["saved_location_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["saved_location_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["saved_location_stream_cursor_value_input"]: {
	customer_id?:number,
	default?:boolean,
	id?:number,
	location_gps?:PartialObjects["geography"],
	location_text?:string,
	name?:string
},
	/** aggregate sum on columns */
["saved_location_sum_fields"]: {
		__typename?: "saved_location_sum_fields";
			customer_id?:number,
			id?:number
	},
	/** order by sum() on columns of table "saved_location" */
["saved_location_sum_order_by"]: {
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"]
},
	/** update columns of table "saved_location" */
["saved_location_update_column"]:saved_location_update_column,
	["saved_location_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["saved_location_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["saved_location_set_input"],
	where:PartialObjects["saved_location_bool_exp"]
},
	/** aggregate var_pop on columns */
["saved_location_var_pop_fields"]: {
		__typename?: "saved_location_var_pop_fields";
			customer_id?:number,
			id?:number
	},
	/** order by var_pop() on columns of table "saved_location" */
["saved_location_var_pop_order_by"]: {
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["saved_location_var_samp_fields"]: {
		__typename?: "saved_location_var_samp_fields";
			customer_id?:number,
			id?:number
	},
	/** order by var_samp() on columns of table "saved_location" */
["saved_location_var_samp_order_by"]: {
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["saved_location_variance_fields"]: {
		__typename?: "saved_location_variance_fields";
			customer_id?:number,
			id?:number
	},
	/** order by variance() on columns of table "saved_location" */
["saved_location_variance_order_by"]: {
	customer_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"]
},
	/** columns and relationships of "service_provider_payment_info" */
["service_provider_payment_info"]: {
		__typename?: "service_provider_payment_info";
			bank_transfer?:boolean,
			card?:boolean,
			cash?:boolean,
			id?:number,
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			service_provider_type?:string,
			/** An object relationship */
	stripe_info?:PartialObjects["stripe_info"],
			stripe_info_id?:number
	},
	/** aggregated selection of "service_provider_payment_info" */
["service_provider_payment_info_aggregate"]: {
		__typename?: "service_provider_payment_info_aggregate";
			aggregate?:PartialObjects["service_provider_payment_info_aggregate_fields"],
			nodes?:PartialObjects["service_provider_payment_info"][]
	},
	/** aggregate fields of "service_provider_payment_info" */
["service_provider_payment_info_aggregate_fields"]: {
		__typename?: "service_provider_payment_info_aggregate_fields";
			avg?:PartialObjects["service_provider_payment_info_avg_fields"],
			count?:number,
			max?:PartialObjects["service_provider_payment_info_max_fields"],
			min?:PartialObjects["service_provider_payment_info_min_fields"],
			stddev?:PartialObjects["service_provider_payment_info_stddev_fields"],
			stddev_pop?:PartialObjects["service_provider_payment_info_stddev_pop_fields"],
			stddev_samp?:PartialObjects["service_provider_payment_info_stddev_samp_fields"],
			sum?:PartialObjects["service_provider_payment_info_sum_fields"],
			var_pop?:PartialObjects["service_provider_payment_info_var_pop_fields"],
			var_samp?:PartialObjects["service_provider_payment_info_var_samp_fields"],
			variance?:PartialObjects["service_provider_payment_info_variance_fields"]
	},
	/** aggregate avg on columns */
["service_provider_payment_info_avg_fields"]: {
		__typename?: "service_provider_payment_info_avg_fields";
			id?:number,
			stripe_info_id?:number
	},
	/** Boolean expression to filter rows from the table
"service_provider_payment_info". All fields are combined with a logical 'AND'. */
["service_provider_payment_info_bool_exp"]: {
	_and?:PartialObjects["service_provider_payment_info_bool_exp"][],
	_not?:PartialObjects["service_provider_payment_info_bool_exp"],
	_or?:PartialObjects["service_provider_payment_info_bool_exp"][],
	bank_transfer?:PartialObjects["Boolean_comparison_exp"],
	card?:PartialObjects["Boolean_comparison_exp"],
	cash?:PartialObjects["Boolean_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	service_provider_type?:PartialObjects["String_comparison_exp"],
	stripe_info?:PartialObjects["stripe_info_bool_exp"],
	stripe_info_id?:PartialObjects["Int_comparison_exp"]
},
	/** unique or primary key constraints on table "service_provider_payment_info" */
["service_provider_payment_info_constraint"]:service_provider_payment_info_constraint,
	/** input type for incrementing numeric columns in table "service_provider_payment_info" */
["service_provider_payment_info_inc_input"]: {
	id?:number,
	stripe_info_id?:number
},
	/** input type for inserting data into table "service_provider_payment_info" */
["service_provider_payment_info_insert_input"]: {
	bank_transfer?:boolean,
	card?:boolean,
	cash?:boolean,
	id?:number,
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	service_provider_type?:string,
	stripe_info?:PartialObjects["stripe_info_obj_rel_insert_input"],
	stripe_info_id?:number
},
	/** aggregate max on columns */
["service_provider_payment_info_max_fields"]: {
		__typename?: "service_provider_payment_info_max_fields";
			id?:number,
			service_provider_type?:string,
			stripe_info_id?:number
	},
	/** aggregate min on columns */
["service_provider_payment_info_min_fields"]: {
		__typename?: "service_provider_payment_info_min_fields";
			id?:number,
			service_provider_type?:string,
			stripe_info_id?:number
	},
	/** response of any mutation on the table "service_provider_payment_info" */
["service_provider_payment_info_mutation_response"]: {
		__typename?: "service_provider_payment_info_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["service_provider_payment_info"][]
	},
	/** input type for inserting object relation for remote table "service_provider_payment_info" */
["service_provider_payment_info_obj_rel_insert_input"]: {
	data:PartialObjects["service_provider_payment_info_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["service_provider_payment_info_on_conflict"]
},
	/** on_conflict condition type for table "service_provider_payment_info" */
["service_provider_payment_info_on_conflict"]: {
	constraint:PartialObjects["service_provider_payment_info_constraint"],
	update_columns:PartialObjects["service_provider_payment_info_update_column"][],
	where?:PartialObjects["service_provider_payment_info_bool_exp"]
},
	/** Ordering options when selecting data from "service_provider_payment_info". */
["service_provider_payment_info_order_by"]: {
	bank_transfer?:PartialObjects["order_by"],
	card?:PartialObjects["order_by"],
	cash?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	service_provider_type?:PartialObjects["order_by"],
	stripe_info?:PartialObjects["stripe_info_order_by"],
	stripe_info_id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: service_provider_payment_info */
["service_provider_payment_info_pk_columns_input"]: {
	id:number
},
	/** select columns of table "service_provider_payment_info" */
["service_provider_payment_info_select_column"]:service_provider_payment_info_select_column,
	/** input type for updating data in table "service_provider_payment_info" */
["service_provider_payment_info_set_input"]: {
	bank_transfer?:boolean,
	card?:boolean,
	cash?:boolean,
	id?:number,
	service_provider_type?:string,
	stripe_info_id?:number
},
	/** aggregate stddev on columns */
["service_provider_payment_info_stddev_fields"]: {
		__typename?: "service_provider_payment_info_stddev_fields";
			id?:number,
			stripe_info_id?:number
	},
	/** aggregate stddev_pop on columns */
["service_provider_payment_info_stddev_pop_fields"]: {
		__typename?: "service_provider_payment_info_stddev_pop_fields";
			id?:number,
			stripe_info_id?:number
	},
	/** aggregate stddev_samp on columns */
["service_provider_payment_info_stddev_samp_fields"]: {
		__typename?: "service_provider_payment_info_stddev_samp_fields";
			id?:number,
			stripe_info_id?:number
	},
	/** Streaming cursor of the table "service_provider_payment_info" */
["service_provider_payment_info_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["service_provider_payment_info_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["service_provider_payment_info_stream_cursor_value_input"]: {
	bank_transfer?:boolean,
	card?:boolean,
	cash?:boolean,
	id?:number,
	service_provider_type?:string,
	stripe_info_id?:number
},
	/** aggregate sum on columns */
["service_provider_payment_info_sum_fields"]: {
		__typename?: "service_provider_payment_info_sum_fields";
			id?:number,
			stripe_info_id?:number
	},
	/** update columns of table "service_provider_payment_info" */
["service_provider_payment_info_update_column"]:service_provider_payment_info_update_column,
	["service_provider_payment_info_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["service_provider_payment_info_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["service_provider_payment_info_set_input"],
	where:PartialObjects["service_provider_payment_info_bool_exp"]
},
	/** aggregate var_pop on columns */
["service_provider_payment_info_var_pop_fields"]: {
		__typename?: "service_provider_payment_info_var_pop_fields";
			id?:number,
			stripe_info_id?:number
	},
	/** aggregate var_samp on columns */
["service_provider_payment_info_var_samp_fields"]: {
		__typename?: "service_provider_payment_info_var_samp_fields";
			id?:number,
			stripe_info_id?:number
	},
	/** aggregate variance on columns */
["service_provider_payment_info_variance_fields"]: {
		__typename?: "service_provider_payment_info_variance_fields";
			id?:number,
			stripe_info_id?:number
	},
	["st_d_within_geography_input"]: {
	distance:number,
	from:PartialObjects["geography"],
	use_spheroid?:boolean
},
	["st_d_within_input"]: {
	distance:number,
	from:PartialObjects["geometry"]
},
	/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
["String_comparison_exp"]: {
	_eq?:string,
	_gt?:string,
	_gte?:string,
	/** does the column match the given case-insensitive pattern */
	_ilike?:string,
	_in?:string[],
	/** does the column match the given POSIX regular expression, case insensitive */
	_iregex?:string,
	_is_null?:boolean,
	/** does the column match the given pattern */
	_like?:string,
	_lt?:string,
	_lte?:string,
	_neq?:string,
	/** does the column NOT match the given case-insensitive pattern */
	_nilike?:string,
	_nin?:string[],
	/** does the column NOT match the given POSIX regular expression, case insensitive */
	_niregex?:string,
	/** does the column NOT match the given pattern */
	_nlike?:string,
	/** does the column NOT match the given POSIX regular expression, case sensitive */
	_nregex?:string,
	/** does the column NOT match the given SQL regular expression */
	_nsimilar?:string,
	/** does the column match the given POSIX regular expression, case sensitive */
	_regex?:string,
	/** does the column match the given SQL regular expression */
	_similar?:string
},
	/** columns and relationships of "stripe_info" */
["stripe_info"]: {
		__typename?: "stripe_info";
			charges_enabled?:boolean,
			details_submitted?:boolean,
			id?:number,
			pass_fees_to_customer?:boolean,
			payouts_enabled?:boolean,
			requirements?:PartialObjects["json"],
			/** An object relationship */
	service_provider_payment_info?:PartialObjects["service_provider_payment_info"],
			stripe_id?:string,
			stripe_status?:string
	},
	/** aggregated selection of "stripe_info" */
["stripe_info_aggregate"]: {
		__typename?: "stripe_info_aggregate";
			aggregate?:PartialObjects["stripe_info_aggregate_fields"],
			nodes?:PartialObjects["stripe_info"][]
	},
	/** aggregate fields of "stripe_info" */
["stripe_info_aggregate_fields"]: {
		__typename?: "stripe_info_aggregate_fields";
			avg?:PartialObjects["stripe_info_avg_fields"],
			count?:number,
			max?:PartialObjects["stripe_info_max_fields"],
			min?:PartialObjects["stripe_info_min_fields"],
			stddev?:PartialObjects["stripe_info_stddev_fields"],
			stddev_pop?:PartialObjects["stripe_info_stddev_pop_fields"],
			stddev_samp?:PartialObjects["stripe_info_stddev_samp_fields"],
			sum?:PartialObjects["stripe_info_sum_fields"],
			var_pop?:PartialObjects["stripe_info_var_pop_fields"],
			var_samp?:PartialObjects["stripe_info_var_samp_fields"],
			variance?:PartialObjects["stripe_info_variance_fields"]
	},
	/** aggregate avg on columns */
["stripe_info_avg_fields"]: {
		__typename?: "stripe_info_avg_fields";
			id?:number
	},
	/** Boolean expression to filter rows from the table "stripe_info". All fields are combined with a logical 'AND'. */
["stripe_info_bool_exp"]: {
	_and?:PartialObjects["stripe_info_bool_exp"][],
	_not?:PartialObjects["stripe_info_bool_exp"],
	_or?:PartialObjects["stripe_info_bool_exp"][],
	charges_enabled?:PartialObjects["Boolean_comparison_exp"],
	details_submitted?:PartialObjects["Boolean_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	pass_fees_to_customer?:PartialObjects["Boolean_comparison_exp"],
	payouts_enabled?:PartialObjects["Boolean_comparison_exp"],
	requirements?:PartialObjects["json_comparison_exp"],
	service_provider_payment_info?:PartialObjects["service_provider_payment_info_bool_exp"],
	stripe_id?:PartialObjects["String_comparison_exp"],
	stripe_status?:PartialObjects["String_comparison_exp"]
},
	/** unique or primary key constraints on table "stripe_info" */
["stripe_info_constraint"]:stripe_info_constraint,
	/** input type for incrementing numeric columns in table "stripe_info" */
["stripe_info_inc_input"]: {
	id?:number
},
	/** input type for inserting data into table "stripe_info" */
["stripe_info_insert_input"]: {
	charges_enabled?:boolean,
	details_submitted?:boolean,
	id?:number,
	pass_fees_to_customer?:boolean,
	payouts_enabled?:boolean,
	requirements?:PartialObjects["json"],
	service_provider_payment_info?:PartialObjects["service_provider_payment_info_obj_rel_insert_input"],
	stripe_id?:string,
	stripe_status?:string
},
	/** aggregate max on columns */
["stripe_info_max_fields"]: {
		__typename?: "stripe_info_max_fields";
			id?:number,
			stripe_id?:string,
			stripe_status?:string
	},
	/** aggregate min on columns */
["stripe_info_min_fields"]: {
		__typename?: "stripe_info_min_fields";
			id?:number,
			stripe_id?:string,
			stripe_status?:string
	},
	/** response of any mutation on the table "stripe_info" */
["stripe_info_mutation_response"]: {
		__typename?: "stripe_info_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["stripe_info"][]
	},
	/** input type for inserting object relation for remote table "stripe_info" */
["stripe_info_obj_rel_insert_input"]: {
	data:PartialObjects["stripe_info_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["stripe_info_on_conflict"]
},
	/** on_conflict condition type for table "stripe_info" */
["stripe_info_on_conflict"]: {
	constraint:PartialObjects["stripe_info_constraint"],
	update_columns:PartialObjects["stripe_info_update_column"][],
	where?:PartialObjects["stripe_info_bool_exp"]
},
	/** Ordering options when selecting data from "stripe_info". */
["stripe_info_order_by"]: {
	charges_enabled?:PartialObjects["order_by"],
	details_submitted?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	pass_fees_to_customer?:PartialObjects["order_by"],
	payouts_enabled?:PartialObjects["order_by"],
	requirements?:PartialObjects["order_by"],
	service_provider_payment_info?:PartialObjects["service_provider_payment_info_order_by"],
	stripe_id?:PartialObjects["order_by"],
	stripe_status?:PartialObjects["order_by"]
},
	/** primary key columns input for table: stripe_info */
["stripe_info_pk_columns_input"]: {
	id:number
},
	/** select columns of table "stripe_info" */
["stripe_info_select_column"]:stripe_info_select_column,
	/** input type for updating data in table "stripe_info" */
["stripe_info_set_input"]: {
	charges_enabled?:boolean,
	details_submitted?:boolean,
	id?:number,
	pass_fees_to_customer?:boolean,
	payouts_enabled?:boolean,
	requirements?:PartialObjects["json"],
	stripe_id?:string,
	stripe_status?:string
},
	/** aggregate stddev on columns */
["stripe_info_stddev_fields"]: {
		__typename?: "stripe_info_stddev_fields";
			id?:number
	},
	/** aggregate stddev_pop on columns */
["stripe_info_stddev_pop_fields"]: {
		__typename?: "stripe_info_stddev_pop_fields";
			id?:number
	},
	/** aggregate stddev_samp on columns */
["stripe_info_stddev_samp_fields"]: {
		__typename?: "stripe_info_stddev_samp_fields";
			id?:number
	},
	/** Streaming cursor of the table "stripe_info" */
["stripe_info_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["stripe_info_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["stripe_info_stream_cursor_value_input"]: {
	charges_enabled?:boolean,
	details_submitted?:boolean,
	id?:number,
	pass_fees_to_customer?:boolean,
	payouts_enabled?:boolean,
	requirements?:PartialObjects["json"],
	stripe_id?:string,
	stripe_status?:string
},
	/** aggregate sum on columns */
["stripe_info_sum_fields"]: {
		__typename?: "stripe_info_sum_fields";
			id?:number
	},
	/** update columns of table "stripe_info" */
["stripe_info_update_column"]:stripe_info_update_column,
	["stripe_info_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["stripe_info_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["stripe_info_set_input"],
	where:PartialObjects["stripe_info_bool_exp"]
},
	/** aggregate var_pop on columns */
["stripe_info_var_pop_fields"]: {
		__typename?: "stripe_info_var_pop_fields";
			id?:number
	},
	/** aggregate var_samp on columns */
["stripe_info_var_samp_fields"]: {
		__typename?: "stripe_info_var_samp_fields";
			id?:number
	},
	/** aggregate variance on columns */
["stripe_info_variance_fields"]: {
		__typename?: "stripe_info_variance_fields";
			id?:number
	},
	["subscription_root"]: {
		__typename?: "subscription_root";
			/** fetch data from the table: "chat" */
	chat?:PartialObjects["chat"][],
			/** fetch aggregated fields from the table: "chat" */
	chat_aggregate?:PartialObjects["chat_aggregate"],
			/** fetch data from the table: "chat" using primary key columns */
	chat_by_pk?:PartialObjects["chat"],
			/** fetch data from the table: "chat_participant" */
	chat_participant?:PartialObjects["chat_participant"][],
			/** fetch aggregated fields from the table: "chat_participant" */
	chat_participant_aggregate?:PartialObjects["chat_participant_aggregate"],
			/** fetch data from the table: "chat_participant" using primary key columns */
	chat_participant_by_pk?:PartialObjects["chat_participant"],
			/** fetch data from the table in a streaming manner : "chat_participant" */
	chat_participant_stream?:PartialObjects["chat_participant"][],
			/** fetch data from the table in a streaming manner : "chat" */
	chat_stream?:PartialObjects["chat"][],
			/** fetch data from the table: "customer" */
	customer?:PartialObjects["customer"][],
			/** fetch aggregated fields from the table: "customer" */
	customer_aggregate?:PartialObjects["customer_aggregate"],
			/** fetch data from the table: "customer" using primary key columns */
	customer_by_pk?:PartialObjects["customer"],
			/** fetch data from the table in a streaming manner : "customer" */
	customer_stream?:PartialObjects["customer"][],
			/** fetch data from the table: "deliverer" */
	deliverer?:PartialObjects["deliverer"][],
			/** fetch aggregated fields from the table: "deliverer" */
	deliverer_aggregate?:PartialObjects["deliverer_aggregate"],
			/** fetch data from the table: "deliverer" using primary key columns */
	deliverer_by_pk?:PartialObjects["deliverer"],
			/** fetch data from the table in a streaming manner : "deliverer" */
	deliverer_stream?:PartialObjects["deliverer"][],
			/** fetch data from the table: "delivery_order" */
	delivery_order?:PartialObjects["delivery_order"][],
			/** fetch aggregated fields from the table: "delivery_order" */
	delivery_order_aggregate?:PartialObjects["delivery_order_aggregate"],
			/** fetch data from the table: "delivery_order" using primary key columns */
	delivery_order_by_pk?:PartialObjects["delivery_order"],
			/** fetch data from the table: "delivery_order_public" */
	delivery_order_public?:PartialObjects["delivery_order_public"][],
			/** fetch aggregated fields from the table: "delivery_order_public" */
	delivery_order_public_aggregate?:PartialObjects["delivery_order_public_aggregate"],
			/** fetch data from the table in a streaming manner : "delivery_order_public" */
	delivery_order_public_stream?:PartialObjects["delivery_order_public"][],
			/** fetch data from the table in a streaming manner : "delivery_order" */
	delivery_order_stream?:PartialObjects["delivery_order"][],
			/** fetch data from the table: "mez_admin" */
	mez_admin?:PartialObjects["mez_admin"][],
			/** fetch aggregated fields from the table: "mez_admin" */
	mez_admin_aggregate?:PartialObjects["mez_admin_aggregate"],
			/** fetch data from the table: "mez_admin" using primary key columns */
	mez_admin_by_pk?:PartialObjects["mez_admin"],
			/** fetch data from the table in a streaming manner : "mez_admin" */
	mez_admin_stream?:PartialObjects["mez_admin"][],
			/** fetch data from the table: "notification_info" */
	notification_info?:PartialObjects["notification_info"][],
			/** fetch aggregated fields from the table: "notification_info" */
	notification_info_aggregate?:PartialObjects["notification_info_aggregate"],
			/** fetch data from the table: "notification_info" using primary key columns */
	notification_info_by_pk?:PartialObjects["notification_info"],
			/** fetch data from the table in a streaming manner : "notification_info" */
	notification_info_stream?:PartialObjects["notification_info"][],
			/** fetch data from the table: "restaurant" */
	restaurant?:PartialObjects["restaurant"][],
			/** fetch aggregated fields from the table: "restaurant" */
	restaurant_aggregate?:PartialObjects["restaurant_aggregate"],
			/** fetch data from the table: "restaurant" using primary key columns */
	restaurant_by_pk?:PartialObjects["restaurant"],
			/** fetch data from the table: "restaurant_cart" */
	restaurant_cart?:PartialObjects["restaurant_cart"][],
			/** fetch aggregated fields from the table: "restaurant_cart" */
	restaurant_cart_aggregate?:PartialObjects["restaurant_cart_aggregate"],
			/** fetch data from the table: "restaurant_cart" using primary key columns */
	restaurant_cart_by_pk?:PartialObjects["restaurant_cart"],
			/** fetch data from the table: "restaurant_cart_item" */
	restaurant_cart_item?:PartialObjects["restaurant_cart_item"][],
			/** fetch aggregated fields from the table: "restaurant_cart_item" */
	restaurant_cart_item_aggregate?:PartialObjects["restaurant_cart_item_aggregate"],
			/** fetch data from the table: "restaurant_cart_item" using primary key columns */
	restaurant_cart_item_by_pk?:PartialObjects["restaurant_cart_item"],
			/** fetch data from the table in a streaming manner : "restaurant_cart_item" */
	restaurant_cart_item_stream?:PartialObjects["restaurant_cart_item"][],
			/** fetch data from the table in a streaming manner : "restaurant_cart" */
	restaurant_cart_stream?:PartialObjects["restaurant_cart"][],
			/** fetch data from the table: "restaurant_category" */
	restaurant_category?:PartialObjects["restaurant_category"][],
			/** fetch aggregated fields from the table: "restaurant_category" */
	restaurant_category_aggregate?:PartialObjects["restaurant_category_aggregate"],
			/** fetch data from the table: "restaurant_category" using primary key columns */
	restaurant_category_by_pk?:PartialObjects["restaurant_category"],
			/** fetch data from the table in a streaming manner : "restaurant_category" */
	restaurant_category_stream?:PartialObjects["restaurant_category"][],
			/** fetch data from the table: "restaurant_choice" */
	restaurant_choice?:PartialObjects["restaurant_choice"][],
			/** fetch aggregated fields from the table: "restaurant_choice" */
	restaurant_choice_aggregate?:PartialObjects["restaurant_choice_aggregate"],
			/** fetch data from the table: "restaurant_choice" using primary key columns */
	restaurant_choice_by_pk?:PartialObjects["restaurant_choice"],
			/** fetch data from the table in a streaming manner : "restaurant_choice" */
	restaurant_choice_stream?:PartialObjects["restaurant_choice"][],
			/** fetch data from the table: "restaurant_item" */
	restaurant_item?:PartialObjects["restaurant_item"][],
			/** fetch aggregated fields from the table: "restaurant_item" */
	restaurant_item_aggregate?:PartialObjects["restaurant_item_aggregate"],
			/** fetch data from the table: "restaurant_item" using primary key columns */
	restaurant_item_by_pk?:PartialObjects["restaurant_item"],
			/** fetch data from the table: "restaurant_item_option_map" */
	restaurant_item_option_map?:PartialObjects["restaurant_item_option_map"][],
			/** fetch aggregated fields from the table: "restaurant_item_option_map" */
	restaurant_item_option_map_aggregate?:PartialObjects["restaurant_item_option_map_aggregate"],
			/** fetch data from the table: "restaurant_item_option_map" using primary key columns */
	restaurant_item_option_map_by_pk?:PartialObjects["restaurant_item_option_map"],
			/** fetch data from the table in a streaming manner : "restaurant_item_option_map" */
	restaurant_item_option_map_stream?:PartialObjects["restaurant_item_option_map"][],
			/** fetch data from the table in a streaming manner : "restaurant_item" */
	restaurant_item_stream?:PartialObjects["restaurant_item"][],
			/** fetch data from the table: "restaurant_operator" */
	restaurant_operator?:PartialObjects["restaurant_operator"][],
			/** fetch aggregated fields from the table: "restaurant_operator" */
	restaurant_operator_aggregate?:PartialObjects["restaurant_operator_aggregate"],
			/** fetch data from the table: "restaurant_operator" using primary key columns */
	restaurant_operator_by_pk?:PartialObjects["restaurant_operator"],
			/** fetch data from the table in a streaming manner : "restaurant_operator" */
	restaurant_operator_stream?:PartialObjects["restaurant_operator"][],
			/** fetch data from the table: "restaurant_option" */
	restaurant_option?:PartialObjects["restaurant_option"][],
			/** fetch aggregated fields from the table: "restaurant_option" */
	restaurant_option_aggregate?:PartialObjects["restaurant_option_aggregate"],
			/** fetch data from the table: "restaurant_option" using primary key columns */
	restaurant_option_by_pk?:PartialObjects["restaurant_option"],
			/** fetch data from the table: "restaurant_option_choice_map" */
	restaurant_option_choice_map?:PartialObjects["restaurant_option_choice_map"][],
			/** fetch aggregated fields from the table: "restaurant_option_choice_map" */
	restaurant_option_choice_map_aggregate?:PartialObjects["restaurant_option_choice_map_aggregate"],
			/** fetch data from the table: "restaurant_option_choice_map" using primary key columns */
	restaurant_option_choice_map_by_pk?:PartialObjects["restaurant_option_choice_map"],
			/** fetch data from the table in a streaming manner : "restaurant_option_choice_map" */
	restaurant_option_choice_map_stream?:PartialObjects["restaurant_option_choice_map"][],
			/** fetch data from the table in a streaming manner : "restaurant_option" */
	restaurant_option_stream?:PartialObjects["restaurant_option"][],
			/** fetch data from the table: "restaurant_order" */
	restaurant_order?:PartialObjects["restaurant_order"][],
			/** fetch aggregated fields from the table: "restaurant_order" */
	restaurant_order_aggregate?:PartialObjects["restaurant_order_aggregate"],
			/** fetch data from the table: "restaurant_order" using primary key columns */
	restaurant_order_by_pk?:PartialObjects["restaurant_order"],
			/** fetch data from the table: "restaurant_order_item" */
	restaurant_order_item?:PartialObjects["restaurant_order_item"][],
			/** fetch aggregated fields from the table: "restaurant_order_item" */
	restaurant_order_item_aggregate?:PartialObjects["restaurant_order_item_aggregate"],
			/** fetch data from the table: "restaurant_order_item" using primary key columns */
	restaurant_order_item_by_pk?:PartialObjects["restaurant_order_item"],
			/** fetch data from the table in a streaming manner : "restaurant_order_item" */
	restaurant_order_item_stream?:PartialObjects["restaurant_order_item"][],
			/** fetch data from the table: "restaurant_order_public" */
	restaurant_order_public?:PartialObjects["restaurant_order_public"][],
			/** fetch aggregated fields from the table: "restaurant_order_public" */
	restaurant_order_public_aggregate?:PartialObjects["restaurant_order_public_aggregate"],
			/** fetch data from the table in a streaming manner : "restaurant_order_public" */
	restaurant_order_public_stream?:PartialObjects["restaurant_order_public"][],
			/** fetch data from the table in a streaming manner : "restaurant_order" */
	restaurant_order_stream?:PartialObjects["restaurant_order"][],
			/** fetch data from the table in a streaming manner : "restaurant" */
	restaurant_stream?:PartialObjects["restaurant"][],
			/** fetch data from the table: "review" */
	review?:PartialObjects["review"][],
			/** fetch aggregated fields from the table: "review" */
	review_aggregate?:PartialObjects["review_aggregate"],
			/** fetch data from the table: "review" using primary key columns */
	review_by_pk?:PartialObjects["review"],
			/** fetch data from the table in a streaming manner : "review" */
	review_stream?:PartialObjects["review"][],
			/** fetch data from the table: "saved_location" */
	saved_location?:PartialObjects["saved_location"][],
			/** fetch aggregated fields from the table: "saved_location" */
	saved_location_aggregate?:PartialObjects["saved_location_aggregate"],
			/** fetch data from the table: "saved_location" using primary key columns */
	saved_location_by_pk?:PartialObjects["saved_location"],
			/** fetch data from the table in a streaming manner : "saved_location" */
	saved_location_stream?:PartialObjects["saved_location"][],
			/** fetch data from the table: "service_provider_payment_info" */
	service_provider_payment_info?:PartialObjects["service_provider_payment_info"][],
			/** fetch aggregated fields from the table: "service_provider_payment_info" */
	service_provider_payment_info_aggregate?:PartialObjects["service_provider_payment_info_aggregate"],
			/** fetch data from the table: "service_provider_payment_info" using primary key columns */
	service_provider_payment_info_by_pk?:PartialObjects["service_provider_payment_info"],
			/** fetch data from the table in a streaming manner : "service_provider_payment_info" */
	service_provider_payment_info_stream?:PartialObjects["service_provider_payment_info"][],
			/** fetch data from the table: "stripe_info" */
	stripe_info?:PartialObjects["stripe_info"][],
			/** fetch aggregated fields from the table: "stripe_info" */
	stripe_info_aggregate?:PartialObjects["stripe_info_aggregate"],
			/** fetch data from the table: "stripe_info" using primary key columns */
	stripe_info_by_pk?:PartialObjects["stripe_info"],
			/** fetch data from the table in a streaming manner : "stripe_info" */
	stripe_info_stream?:PartialObjects["stripe_info"][],
			/** fetch data from the table: "topology.app_type" */
	topology_app_type?:PartialObjects["topology_app_type"][],
			/** fetch aggregated fields from the table: "topology.app_type" */
	topology_app_type_aggregate?:PartialObjects["topology_app_type_aggregate"],
			/** fetch data from the table: "topology.app_type" using primary key columns */
	topology_app_type_by_pk?:PartialObjects["topology_app_type"],
			/** fetch data from the table in a streaming manner : "topology.app_type" */
	topology_app_type_stream?:PartialObjects["topology_app_type"][],
			/** fetch data from the table: "topology.language" */
	topology_language?:PartialObjects["topology_language"][],
			/** fetch aggregated fields from the table: "topology.language" */
	topology_language_aggregate?:PartialObjects["topology_language_aggregate"],
			/** fetch data from the table: "topology.language" using primary key columns */
	topology_language_by_pk?:PartialObjects["topology_language"],
			/** fetch data from the table in a streaming manner : "topology.language" */
	topology_language_stream?:PartialObjects["topology_language"][],
			/** fetch data from the table: "translation" */
	translation?:PartialObjects["translation"][],
			/** fetch aggregated fields from the table: "translation" */
	translation_aggregate?:PartialObjects["translation_aggregate"],
			/** fetch data from the table: "translation" using primary key columns */
	translation_by_pk?:PartialObjects["translation"],
			/** fetch data from the table in a streaming manner : "translation" */
	translation_stream?:PartialObjects["translation"][],
			/** fetch data from the table: "translation_value" */
	translation_value?:PartialObjects["translation_value"][],
			/** fetch aggregated fields from the table: "translation_value" */
	translation_value_aggregate?:PartialObjects["translation_value_aggregate"],
			/** fetch data from the table: "translation_value" using primary key columns */
	translation_value_by_pk?:PartialObjects["translation_value"],
			/** fetch data from the table in a streaming manner : "translation_value" */
	translation_value_stream?:PartialObjects["translation_value"][],
			/** fetch data from the table: "user" */
	user?:PartialObjects["user"][],
			/** fetch aggregated fields from the table: "user" */
	user_aggregate?:PartialObjects["user_aggregate"],
			/** fetch data from the table: "user" using primary key columns */
	user_by_pk?:PartialObjects["user"],
			/** fetch data from the table in a streaming manner : "user" */
	user_stream?:PartialObjects["user"][]
	},
	["timestamptz"]:any,
	/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
["timestamptz_comparison_exp"]: {
	_eq?:PartialObjects["timestamptz"],
	_gt?:PartialObjects["timestamptz"],
	_gte?:PartialObjects["timestamptz"],
	_in?:PartialObjects["timestamptz"][],
	_is_null?:boolean,
	_lt?:PartialObjects["timestamptz"],
	_lte?:PartialObjects["timestamptz"],
	_neq?:PartialObjects["timestamptz"],
	_nin?:PartialObjects["timestamptz"][]
},
	/** columns and relationships of "topology.app_type" */
["topology_app_type"]: {
		__typename?: "topology_app_type";
			/** customer, delivery, restaurant, admin */
	id?:string
	},
	/** aggregated selection of "topology.app_type" */
["topology_app_type_aggregate"]: {
		__typename?: "topology_app_type_aggregate";
			aggregate?:PartialObjects["topology_app_type_aggregate_fields"],
			nodes?:PartialObjects["topology_app_type"][]
	},
	/** aggregate fields of "topology.app_type" */
["topology_app_type_aggregate_fields"]: {
		__typename?: "topology_app_type_aggregate_fields";
			count?:number,
			max?:PartialObjects["topology_app_type_max_fields"],
			min?:PartialObjects["topology_app_type_min_fields"]
	},
	/** Boolean expression to filter rows from the table "topology.app_type". All fields are combined with a logical 'AND'. */
["topology_app_type_bool_exp"]: {
	_and?:PartialObjects["topology_app_type_bool_exp"][],
	_not?:PartialObjects["topology_app_type_bool_exp"],
	_or?:PartialObjects["topology_app_type_bool_exp"][],
	id?:PartialObjects["String_comparison_exp"]
},
	/** unique or primary key constraints on table "topology.app_type" */
["topology_app_type_constraint"]:topology_app_type_constraint,
	/** input type for inserting data into table "topology.app_type" */
["topology_app_type_insert_input"]: {
	/** customer, delivery, restaurant, admin */
	id?:string
},
	/** aggregate max on columns */
["topology_app_type_max_fields"]: {
		__typename?: "topology_app_type_max_fields";
			/** customer, delivery, restaurant, admin */
	id?:string
	},
	/** aggregate min on columns */
["topology_app_type_min_fields"]: {
		__typename?: "topology_app_type_min_fields";
			/** customer, delivery, restaurant, admin */
	id?:string
	},
	/** response of any mutation on the table "topology.app_type" */
["topology_app_type_mutation_response"]: {
		__typename?: "topology_app_type_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["topology_app_type"][]
	},
	/** on_conflict condition type for table "topology.app_type" */
["topology_app_type_on_conflict"]: {
	constraint:PartialObjects["topology_app_type_constraint"],
	update_columns:PartialObjects["topology_app_type_update_column"][],
	where?:PartialObjects["topology_app_type_bool_exp"]
},
	/** Ordering options when selecting data from "topology.app_type". */
["topology_app_type_order_by"]: {
	id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: topology_app_type */
["topology_app_type_pk_columns_input"]: {
	/** customer, delivery, restaurant, admin */
	id:string
},
	/** select columns of table "topology.app_type" */
["topology_app_type_select_column"]:topology_app_type_select_column,
	/** input type for updating data in table "topology.app_type" */
["topology_app_type_set_input"]: {
	/** customer, delivery, restaurant, admin */
	id?:string
},
	/** Streaming cursor of the table "topology_app_type" */
["topology_app_type_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["topology_app_type_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["topology_app_type_stream_cursor_value_input"]: {
	/** customer, delivery, restaurant, admin */
	id?:string
},
	/** update columns of table "topology.app_type" */
["topology_app_type_update_column"]:topology_app_type_update_column,
	["topology_app_type_updates"]: {
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["topology_app_type_set_input"],
	where:PartialObjects["topology_app_type_bool_exp"]
},
	/** columns and relationships of "topology.language" */
["topology_language"]: {
		__typename?: "topology_language";
			id?:string
	},
	/** aggregated selection of "topology.language" */
["topology_language_aggregate"]: {
		__typename?: "topology_language_aggregate";
			aggregate?:PartialObjects["topology_language_aggregate_fields"],
			nodes?:PartialObjects["topology_language"][]
	},
	/** aggregate fields of "topology.language" */
["topology_language_aggregate_fields"]: {
		__typename?: "topology_language_aggregate_fields";
			count?:number,
			max?:PartialObjects["topology_language_max_fields"],
			min?:PartialObjects["topology_language_min_fields"]
	},
	/** Boolean expression to filter rows from the table "topology.language". All fields are combined with a logical 'AND'. */
["topology_language_bool_exp"]: {
	_and?:PartialObjects["topology_language_bool_exp"][],
	_not?:PartialObjects["topology_language_bool_exp"],
	_or?:PartialObjects["topology_language_bool_exp"][],
	id?:PartialObjects["String_comparison_exp"]
},
	/** unique or primary key constraints on table "topology.language" */
["topology_language_constraint"]:topology_language_constraint,
	/** input type for inserting data into table "topology.language" */
["topology_language_insert_input"]: {
	id?:string
},
	/** aggregate max on columns */
["topology_language_max_fields"]: {
		__typename?: "topology_language_max_fields";
			id?:string
	},
	/** aggregate min on columns */
["topology_language_min_fields"]: {
		__typename?: "topology_language_min_fields";
			id?:string
	},
	/** response of any mutation on the table "topology.language" */
["topology_language_mutation_response"]: {
		__typename?: "topology_language_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["topology_language"][]
	},
	/** input type for inserting object relation for remote table "topology.language" */
["topology_language_obj_rel_insert_input"]: {
	data:PartialObjects["topology_language_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["topology_language_on_conflict"]
},
	/** on_conflict condition type for table "topology.language" */
["topology_language_on_conflict"]: {
	constraint:PartialObjects["topology_language_constraint"],
	update_columns:PartialObjects["topology_language_update_column"][],
	where?:PartialObjects["topology_language_bool_exp"]
},
	/** Ordering options when selecting data from "topology.language". */
["topology_language_order_by"]: {
	id?:PartialObjects["order_by"]
},
	/** primary key columns input for table: topology_language */
["topology_language_pk_columns_input"]: {
	id:string
},
	/** select columns of table "topology.language" */
["topology_language_select_column"]:topology_language_select_column,
	/** input type for updating data in table "topology.language" */
["topology_language_set_input"]: {
	id?:string
},
	/** Streaming cursor of the table "topology_language" */
["topology_language_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["topology_language_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["topology_language_stream_cursor_value_input"]: {
	id?:string
},
	/** update columns of table "topology.language" */
["topology_language_update_column"]:topology_language_update_column,
	["topology_language_updates"]: {
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["topology_language_set_input"],
	where:PartialObjects["topology_language_bool_exp"]
},
	/** columns and relationships of "translation" */
["translation"]: {
		__typename?: "translation";
			id?:number,
			/** An object relationship */
	restaurant?:PartialObjects["restaurant"],
			service_provider_id?:number,
			service_provider_type?:string,
			/** An array relationship */
	translations?:PartialObjects["translation_value"][],
			/** An aggregate relationship */
	translations_aggregate?:PartialObjects["translation_value_aggregate"]
	},
	/** aggregated selection of "translation" */
["translation_aggregate"]: {
		__typename?: "translation_aggregate";
			aggregate?:PartialObjects["translation_aggregate_fields"],
			nodes?:PartialObjects["translation"][]
	},
	/** aggregate fields of "translation" */
["translation_aggregate_fields"]: {
		__typename?: "translation_aggregate_fields";
			avg?:PartialObjects["translation_avg_fields"],
			count?:number,
			max?:PartialObjects["translation_max_fields"],
			min?:PartialObjects["translation_min_fields"],
			stddev?:PartialObjects["translation_stddev_fields"],
			stddev_pop?:PartialObjects["translation_stddev_pop_fields"],
			stddev_samp?:PartialObjects["translation_stddev_samp_fields"],
			sum?:PartialObjects["translation_sum_fields"],
			var_pop?:PartialObjects["translation_var_pop_fields"],
			var_samp?:PartialObjects["translation_var_samp_fields"],
			variance?:PartialObjects["translation_variance_fields"]
	},
	/** aggregate avg on columns */
["translation_avg_fields"]: {
		__typename?: "translation_avg_fields";
			id?:number,
			service_provider_id?:number
	},
	/** Boolean expression to filter rows from the table "translation". All fields are combined with a logical 'AND'. */
["translation_bool_exp"]: {
	_and?:PartialObjects["translation_bool_exp"][],
	_not?:PartialObjects["translation_bool_exp"],
	_or?:PartialObjects["translation_bool_exp"][],
	id?:PartialObjects["Int_comparison_exp"],
	restaurant?:PartialObjects["restaurant_bool_exp"],
	service_provider_id?:PartialObjects["Int_comparison_exp"],
	service_provider_type?:PartialObjects["String_comparison_exp"],
	translations?:PartialObjects["translation_value_bool_exp"]
},
	/** unique or primary key constraints on table "translation" */
["translation_constraint"]:translation_constraint,
	/** input type for incrementing numeric columns in table "translation" */
["translation_inc_input"]: {
	id?:number,
	service_provider_id?:number
},
	/** input type for inserting data into table "translation" */
["translation_insert_input"]: {
	id?:number,
	restaurant?:PartialObjects["restaurant_obj_rel_insert_input"],
	service_provider_id?:number,
	service_provider_type?:string,
	translations?:PartialObjects["translation_value_arr_rel_insert_input"]
},
	/** aggregate max on columns */
["translation_max_fields"]: {
		__typename?: "translation_max_fields";
			id?:number,
			service_provider_id?:number,
			service_provider_type?:string
	},
	/** aggregate min on columns */
["translation_min_fields"]: {
		__typename?: "translation_min_fields";
			id?:number,
			service_provider_id?:number,
			service_provider_type?:string
	},
	/** response of any mutation on the table "translation" */
["translation_mutation_response"]: {
		__typename?: "translation_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["translation"][]
	},
	/** input type for inserting object relation for remote table "translation" */
["translation_obj_rel_insert_input"]: {
	data:PartialObjects["translation_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["translation_on_conflict"]
},
	/** on_conflict condition type for table "translation" */
["translation_on_conflict"]: {
	constraint:PartialObjects["translation_constraint"],
	update_columns:PartialObjects["translation_update_column"][],
	where?:PartialObjects["translation_bool_exp"]
},
	/** Ordering options when selecting data from "translation". */
["translation_order_by"]: {
	id?:PartialObjects["order_by"],
	restaurant?:PartialObjects["restaurant_order_by"],
	service_provider_id?:PartialObjects["order_by"],
	service_provider_type?:PartialObjects["order_by"],
	translations_aggregate?:PartialObjects["translation_value_aggregate_order_by"]
},
	/** primary key columns input for table: translation */
["translation_pk_columns_input"]: {
	id:number
},
	/** select columns of table "translation" */
["translation_select_column"]:translation_select_column,
	/** input type for updating data in table "translation" */
["translation_set_input"]: {
	id?:number,
	service_provider_id?:number,
	service_provider_type?:string
},
	/** aggregate stddev on columns */
["translation_stddev_fields"]: {
		__typename?: "translation_stddev_fields";
			id?:number,
			service_provider_id?:number
	},
	/** aggregate stddev_pop on columns */
["translation_stddev_pop_fields"]: {
		__typename?: "translation_stddev_pop_fields";
			id?:number,
			service_provider_id?:number
	},
	/** aggregate stddev_samp on columns */
["translation_stddev_samp_fields"]: {
		__typename?: "translation_stddev_samp_fields";
			id?:number,
			service_provider_id?:number
	},
	/** Streaming cursor of the table "translation" */
["translation_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["translation_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["translation_stream_cursor_value_input"]: {
	id?:number,
	service_provider_id?:number,
	service_provider_type?:string
},
	/** aggregate sum on columns */
["translation_sum_fields"]: {
		__typename?: "translation_sum_fields";
			id?:number,
			service_provider_id?:number
	},
	/** update columns of table "translation" */
["translation_update_column"]:translation_update_column,
	["translation_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["translation_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["translation_set_input"],
	where:PartialObjects["translation_bool_exp"]
},
	/** columns and relationships of "translation_value" */
["translation_value"]: {
		__typename?: "translation_value";
			/** An object relationship */
	language?:PartialObjects["topology_language"],
			language_id?:string,
			/** An object relationship */
	translation_group?:PartialObjects["translation"],
			translation_id?:number,
			value?:string
	},
	/** aggregated selection of "translation_value" */
["translation_value_aggregate"]: {
		__typename?: "translation_value_aggregate";
			aggregate?:PartialObjects["translation_value_aggregate_fields"],
			nodes?:PartialObjects["translation_value"][]
	},
	/** aggregate fields of "translation_value" */
["translation_value_aggregate_fields"]: {
		__typename?: "translation_value_aggregate_fields";
			avg?:PartialObjects["translation_value_avg_fields"],
			count?:number,
			max?:PartialObjects["translation_value_max_fields"],
			min?:PartialObjects["translation_value_min_fields"],
			stddev?:PartialObjects["translation_value_stddev_fields"],
			stddev_pop?:PartialObjects["translation_value_stddev_pop_fields"],
			stddev_samp?:PartialObjects["translation_value_stddev_samp_fields"],
			sum?:PartialObjects["translation_value_sum_fields"],
			var_pop?:PartialObjects["translation_value_var_pop_fields"],
			var_samp?:PartialObjects["translation_value_var_samp_fields"],
			variance?:PartialObjects["translation_value_variance_fields"]
	},
	/** order by aggregate values of table "translation_value" */
["translation_value_aggregate_order_by"]: {
	avg?:PartialObjects["translation_value_avg_order_by"],
	count?:PartialObjects["order_by"],
	max?:PartialObjects["translation_value_max_order_by"],
	min?:PartialObjects["translation_value_min_order_by"],
	stddev?:PartialObjects["translation_value_stddev_order_by"],
	stddev_pop?:PartialObjects["translation_value_stddev_pop_order_by"],
	stddev_samp?:PartialObjects["translation_value_stddev_samp_order_by"],
	sum?:PartialObjects["translation_value_sum_order_by"],
	var_pop?:PartialObjects["translation_value_var_pop_order_by"],
	var_samp?:PartialObjects["translation_value_var_samp_order_by"],
	variance?:PartialObjects["translation_value_variance_order_by"]
},
	/** input type for inserting array relation for remote table "translation_value" */
["translation_value_arr_rel_insert_input"]: {
	data:PartialObjects["translation_value_insert_input"][],
	/** upsert condition */
	on_conflict?:PartialObjects["translation_value_on_conflict"]
},
	/** aggregate avg on columns */
["translation_value_avg_fields"]: {
		__typename?: "translation_value_avg_fields";
			translation_id?:number
	},
	/** order by avg() on columns of table "translation_value" */
["translation_value_avg_order_by"]: {
	translation_id?:PartialObjects["order_by"]
},
	/** Boolean expression to filter rows from the table "translation_value". All fields are combined with a logical 'AND'. */
["translation_value_bool_exp"]: {
	_and?:PartialObjects["translation_value_bool_exp"][],
	_not?:PartialObjects["translation_value_bool_exp"],
	_or?:PartialObjects["translation_value_bool_exp"][],
	language?:PartialObjects["topology_language_bool_exp"],
	language_id?:PartialObjects["String_comparison_exp"],
	translation_group?:PartialObjects["translation_bool_exp"],
	translation_id?:PartialObjects["Int_comparison_exp"],
	value?:PartialObjects["String_comparison_exp"]
},
	/** unique or primary key constraints on table "translation_value" */
["translation_value_constraint"]:translation_value_constraint,
	/** input type for incrementing numeric columns in table "translation_value" */
["translation_value_inc_input"]: {
	translation_id?:number
},
	/** input type for inserting data into table "translation_value" */
["translation_value_insert_input"]: {
	language?:PartialObjects["topology_language_obj_rel_insert_input"],
	language_id?:string,
	translation_group?:PartialObjects["translation_obj_rel_insert_input"],
	translation_id?:number,
	value?:string
},
	/** aggregate max on columns */
["translation_value_max_fields"]: {
		__typename?: "translation_value_max_fields";
			language_id?:string,
			translation_id?:number,
			value?:string
	},
	/** order by max() on columns of table "translation_value" */
["translation_value_max_order_by"]: {
	language_id?:PartialObjects["order_by"],
	translation_id?:PartialObjects["order_by"],
	value?:PartialObjects["order_by"]
},
	/** aggregate min on columns */
["translation_value_min_fields"]: {
		__typename?: "translation_value_min_fields";
			language_id?:string,
			translation_id?:number,
			value?:string
	},
	/** order by min() on columns of table "translation_value" */
["translation_value_min_order_by"]: {
	language_id?:PartialObjects["order_by"],
	translation_id?:PartialObjects["order_by"],
	value?:PartialObjects["order_by"]
},
	/** response of any mutation on the table "translation_value" */
["translation_value_mutation_response"]: {
		__typename?: "translation_value_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["translation_value"][]
	},
	/** on_conflict condition type for table "translation_value" */
["translation_value_on_conflict"]: {
	constraint:PartialObjects["translation_value_constraint"],
	update_columns:PartialObjects["translation_value_update_column"][],
	where?:PartialObjects["translation_value_bool_exp"]
},
	/** Ordering options when selecting data from "translation_value". */
["translation_value_order_by"]: {
	language?:PartialObjects["topology_language_order_by"],
	language_id?:PartialObjects["order_by"],
	translation_group?:PartialObjects["translation_order_by"],
	translation_id?:PartialObjects["order_by"],
	value?:PartialObjects["order_by"]
},
	/** primary key columns input for table: translation_value */
["translation_value_pk_columns_input"]: {
	language_id:string,
	translation_id:number
},
	/** select columns of table "translation_value" */
["translation_value_select_column"]:translation_value_select_column,
	/** input type for updating data in table "translation_value" */
["translation_value_set_input"]: {
	language_id?:string,
	translation_id?:number,
	value?:string
},
	/** aggregate stddev on columns */
["translation_value_stddev_fields"]: {
		__typename?: "translation_value_stddev_fields";
			translation_id?:number
	},
	/** order by stddev() on columns of table "translation_value" */
["translation_value_stddev_order_by"]: {
	translation_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_pop on columns */
["translation_value_stddev_pop_fields"]: {
		__typename?: "translation_value_stddev_pop_fields";
			translation_id?:number
	},
	/** order by stddev_pop() on columns of table "translation_value" */
["translation_value_stddev_pop_order_by"]: {
	translation_id?:PartialObjects["order_by"]
},
	/** aggregate stddev_samp on columns */
["translation_value_stddev_samp_fields"]: {
		__typename?: "translation_value_stddev_samp_fields";
			translation_id?:number
	},
	/** order by stddev_samp() on columns of table "translation_value" */
["translation_value_stddev_samp_order_by"]: {
	translation_id?:PartialObjects["order_by"]
},
	/** Streaming cursor of the table "translation_value" */
["translation_value_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["translation_value_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["translation_value_stream_cursor_value_input"]: {
	language_id?:string,
	translation_id?:number,
	value?:string
},
	/** aggregate sum on columns */
["translation_value_sum_fields"]: {
		__typename?: "translation_value_sum_fields";
			translation_id?:number
	},
	/** order by sum() on columns of table "translation_value" */
["translation_value_sum_order_by"]: {
	translation_id?:PartialObjects["order_by"]
},
	/** update columns of table "translation_value" */
["translation_value_update_column"]:translation_value_update_column,
	["translation_value_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["translation_value_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["translation_value_set_input"],
	where:PartialObjects["translation_value_bool_exp"]
},
	/** aggregate var_pop on columns */
["translation_value_var_pop_fields"]: {
		__typename?: "translation_value_var_pop_fields";
			translation_id?:number
	},
	/** order by var_pop() on columns of table "translation_value" */
["translation_value_var_pop_order_by"]: {
	translation_id?:PartialObjects["order_by"]
},
	/** aggregate var_samp on columns */
["translation_value_var_samp_fields"]: {
		__typename?: "translation_value_var_samp_fields";
			translation_id?:number
	},
	/** order by var_samp() on columns of table "translation_value" */
["translation_value_var_samp_order_by"]: {
	translation_id?:PartialObjects["order_by"]
},
	/** aggregate variance on columns */
["translation_value_variance_fields"]: {
		__typename?: "translation_value_variance_fields";
			translation_id?:number
	},
	/** order by variance() on columns of table "translation_value" */
["translation_value_variance_order_by"]: {
	translation_id?:PartialObjects["order_by"]
},
	/** aggregate var_pop on columns */
["translation_var_pop_fields"]: {
		__typename?: "translation_var_pop_fields";
			id?:number,
			service_provider_id?:number
	},
	/** aggregate var_samp on columns */
["translation_var_samp_fields"]: {
		__typename?: "translation_var_samp_fields";
			id?:number,
			service_provider_id?:number
	},
	/** aggregate variance on columns */
["translation_variance_fields"]: {
		__typename?: "translation_variance_fields";
			id?:number,
			service_provider_id?:number
	},
	/** columns and relationships of "user" */
["user"]: {
		__typename?: "user";
			deleted?:boolean,
			email?:string,
			firebase_id?:string,
			id?:number,
			image?:string,
			language_id?:string,
			name?:string,
			phone?:string
	},
	/** aggregated selection of "user" */
["user_aggregate"]: {
		__typename?: "user_aggregate";
			aggregate?:PartialObjects["user_aggregate_fields"],
			nodes?:PartialObjects["user"][]
	},
	/** aggregate fields of "user" */
["user_aggregate_fields"]: {
		__typename?: "user_aggregate_fields";
			avg?:PartialObjects["user_avg_fields"],
			count?:number,
			max?:PartialObjects["user_max_fields"],
			min?:PartialObjects["user_min_fields"],
			stddev?:PartialObjects["user_stddev_fields"],
			stddev_pop?:PartialObjects["user_stddev_pop_fields"],
			stddev_samp?:PartialObjects["user_stddev_samp_fields"],
			sum?:PartialObjects["user_sum_fields"],
			var_pop?:PartialObjects["user_var_pop_fields"],
			var_samp?:PartialObjects["user_var_samp_fields"],
			variance?:PartialObjects["user_variance_fields"]
	},
	/** aggregate avg on columns */
["user_avg_fields"]: {
		__typename?: "user_avg_fields";
			id?:number
	},
	/** Boolean expression to filter rows from the table "user". All fields are combined with a logical 'AND'. */
["user_bool_exp"]: {
	_and?:PartialObjects["user_bool_exp"][],
	_not?:PartialObjects["user_bool_exp"],
	_or?:PartialObjects["user_bool_exp"][],
	deleted?:PartialObjects["Boolean_comparison_exp"],
	email?:PartialObjects["String_comparison_exp"],
	firebase_id?:PartialObjects["String_comparison_exp"],
	id?:PartialObjects["Int_comparison_exp"],
	image?:PartialObjects["String_comparison_exp"],
	language_id?:PartialObjects["String_comparison_exp"],
	name?:PartialObjects["String_comparison_exp"],
	phone?:PartialObjects["String_comparison_exp"]
},
	/** unique or primary key constraints on table "user" */
["user_constraint"]:user_constraint,
	/** input type for incrementing numeric columns in table "user" */
["user_inc_input"]: {
	id?:number
},
	/** input type for inserting data into table "user" */
["user_insert_input"]: {
	deleted?:boolean,
	email?:string,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	name?:string,
	phone?:string
},
	/** aggregate max on columns */
["user_max_fields"]: {
		__typename?: "user_max_fields";
			email?:string,
			firebase_id?:string,
			id?:number,
			image?:string,
			language_id?:string,
			name?:string,
			phone?:string
	},
	/** aggregate min on columns */
["user_min_fields"]: {
		__typename?: "user_min_fields";
			email?:string,
			firebase_id?:string,
			id?:number,
			image?:string,
			language_id?:string,
			name?:string,
			phone?:string
	},
	/** response of any mutation on the table "user" */
["user_mutation_response"]: {
		__typename?: "user_mutation_response";
			/** number of rows affected by the mutation */
	affected_rows?:number,
			/** data from the rows affected by the mutation */
	returning?:PartialObjects["user"][]
	},
	/** input type for inserting object relation for remote table "user" */
["user_obj_rel_insert_input"]: {
	data:PartialObjects["user_insert_input"],
	/** upsert condition */
	on_conflict?:PartialObjects["user_on_conflict"]
},
	/** on_conflict condition type for table "user" */
["user_on_conflict"]: {
	constraint:PartialObjects["user_constraint"],
	update_columns:PartialObjects["user_update_column"][],
	where?:PartialObjects["user_bool_exp"]
},
	/** Ordering options when selecting data from "user". */
["user_order_by"]: {
	deleted?:PartialObjects["order_by"],
	email?:PartialObjects["order_by"],
	firebase_id?:PartialObjects["order_by"],
	id?:PartialObjects["order_by"],
	image?:PartialObjects["order_by"],
	language_id?:PartialObjects["order_by"],
	name?:PartialObjects["order_by"],
	phone?:PartialObjects["order_by"]
},
	/** primary key columns input for table: user */
["user_pk_columns_input"]: {
	id:number
},
	/** select columns of table "user" */
["user_select_column"]:user_select_column,
	/** input type for updating data in table "user" */
["user_set_input"]: {
	deleted?:boolean,
	email?:string,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	name?:string,
	phone?:string
},
	/** aggregate stddev on columns */
["user_stddev_fields"]: {
		__typename?: "user_stddev_fields";
			id?:number
	},
	/** aggregate stddev_pop on columns */
["user_stddev_pop_fields"]: {
		__typename?: "user_stddev_pop_fields";
			id?:number
	},
	/** aggregate stddev_samp on columns */
["user_stddev_samp_fields"]: {
		__typename?: "user_stddev_samp_fields";
			id?:number
	},
	/** Streaming cursor of the table "user" */
["user_stream_cursor_input"]: {
	/** Stream column input with initial value */
	initial_value:PartialObjects["user_stream_cursor_value_input"],
	/** cursor ordering */
	ordering?:PartialObjects["cursor_ordering"]
},
	/** Initial value of the column from where the streaming should start */
["user_stream_cursor_value_input"]: {
	deleted?:boolean,
	email?:string,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	name?:string,
	phone?:string
},
	/** aggregate sum on columns */
["user_sum_fields"]: {
		__typename?: "user_sum_fields";
			id?:number
	},
	/** update columns of table "user" */
["user_update_column"]:user_update_column,
	["user_updates"]: {
	/** increments the numeric columns with given value of the filtered values */
	_inc?:PartialObjects["user_inc_input"],
	/** sets the columns of the filtered rows to the given values */
	_set?:PartialObjects["user_set_input"],
	where:PartialObjects["user_bool_exp"]
},
	/** aggregate var_pop on columns */
["user_var_pop_fields"]: {
		__typename?: "user_var_pop_fields";
			id?:number
	},
	/** aggregate var_samp on columns */
["user_var_samp_fields"]: {
		__typename?: "user_var_samp_fields";
			id?:number
	},
	/** aggregate variance on columns */
["user_variance_fields"]: {
		__typename?: "user_variance_fields";
			id?:number
	}
  }



/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_comparison_exp = {
		_eq?:boolean,
	_gt?:boolean,
	_gte?:boolean,
	_in?:boolean[],
	_is_null?:boolean,
	_lt?:boolean,
	_lte?:boolean,
	_neq?:boolean,
	_nin?:boolean[]
}

/** columns and relationships of "chat" */
export type chat = {
	__typename?: "chat",
	chat_info?:jsonb,
	/** An array relationship */
	chat_participants:chat_participant[],
	/** An aggregate relationship */
	chat_participants_aggregate:chat_participant_aggregate,
	creation_time:timestamptz,
	id:number,
	messages?:jsonb
}

/** aggregated selection of "chat" */
export type chat_aggregate = {
	__typename?: "chat_aggregate",
	aggregate?:chat_aggregate_fields,
	nodes:chat[]
}

/** aggregate fields of "chat" */
export type chat_aggregate_fields = {
	__typename?: "chat_aggregate_fields",
	avg?:chat_avg_fields,
	count:number,
	max?:chat_max_fields,
	min?:chat_min_fields,
	stddev?:chat_stddev_fields,
	stddev_pop?:chat_stddev_pop_fields,
	stddev_samp?:chat_stddev_samp_fields,
	sum?:chat_sum_fields,
	var_pop?:chat_var_pop_fields,
	var_samp?:chat_var_samp_fields,
	variance?:chat_variance_fields
}

/** append existing jsonb value of filtered columns with new jsonb value */
export type chat_append_input = {
		chat_info?:jsonb,
	messages?:jsonb
}

/** aggregate avg on columns */
export type chat_avg_fields = {
	__typename?: "chat_avg_fields",
	id?:number
}

/** Boolean expression to filter rows from the table "chat". All fields are combined with a logical 'AND'. */
export type chat_bool_exp = {
		_and?:chat_bool_exp[],
	_not?:chat_bool_exp,
	_or?:chat_bool_exp[],
	chat_info?:jsonb_comparison_exp,
	chat_participants?:chat_participant_bool_exp,
	creation_time?:timestamptz_comparison_exp,
	id?:Int_comparison_exp,
	messages?:jsonb_comparison_exp
}

/** unique or primary key constraints on table "chat" */
export enum chat_constraint {
	chat_pkey = "chat_pkey"
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type chat_delete_at_path_input = {
		chat_info?:string[],
	messages?:string[]
}

/** delete the array element with specified index (negative integers count from the
end). throws an error if top level container is not an array */
export type chat_delete_elem_input = {
		chat_info?:number,
	messages?:number
}

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type chat_delete_key_input = {
		chat_info?:string,
	messages?:string
}

/** input type for incrementing numeric columns in table "chat" */
export type chat_inc_input = {
		id?:number
}

/** input type for inserting data into table "chat" */
export type chat_insert_input = {
		chat_info?:jsonb,
	chat_participants?:chat_participant_arr_rel_insert_input,
	creation_time?:timestamptz,
	id?:number,
	messages?:jsonb
}

/** aggregate max on columns */
export type chat_max_fields = {
	__typename?: "chat_max_fields",
	creation_time?:timestamptz,
	id?:number
}

/** aggregate min on columns */
export type chat_min_fields = {
	__typename?: "chat_min_fields",
	creation_time?:timestamptz,
	id?:number
}

/** response of any mutation on the table "chat" */
export type chat_mutation_response = {
	__typename?: "chat_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:chat[]
}

/** input type for inserting object relation for remote table "chat" */
export type chat_obj_rel_insert_input = {
		data:chat_insert_input,
	/** upsert condition */
	on_conflict?:chat_on_conflict
}

/** on_conflict condition type for table "chat" */
export type chat_on_conflict = {
		constraint:chat_constraint,
	update_columns:chat_update_column[],
	where?:chat_bool_exp
}

/** Ordering options when selecting data from "chat". */
export type chat_order_by = {
		chat_info?:order_by,
	chat_participants_aggregate?:chat_participant_aggregate_order_by,
	creation_time?:order_by,
	id?:order_by,
	messages?:order_by
}

/** columns and relationships of "chat_participant" */
export type chat_participant = {
	__typename?: "chat_participant",
	app_type_id:string,
	/** An object relationship */
	chat:chat,
	chat_id:number,
	id:number,
	/** An object relationship */
	notification_info?:notification_info,
	participant_id:number,
	/** An object relationship */
	user:user
}

/** aggregated selection of "chat_participant" */
export type chat_participant_aggregate = {
	__typename?: "chat_participant_aggregate",
	aggregate?:chat_participant_aggregate_fields,
	nodes:chat_participant[]
}

/** aggregate fields of "chat_participant" */
export type chat_participant_aggregate_fields = {
	__typename?: "chat_participant_aggregate_fields",
	avg?:chat_participant_avg_fields,
	count:number,
	max?:chat_participant_max_fields,
	min?:chat_participant_min_fields,
	stddev?:chat_participant_stddev_fields,
	stddev_pop?:chat_participant_stddev_pop_fields,
	stddev_samp?:chat_participant_stddev_samp_fields,
	sum?:chat_participant_sum_fields,
	var_pop?:chat_participant_var_pop_fields,
	var_samp?:chat_participant_var_samp_fields,
	variance?:chat_participant_variance_fields
}

/** order by aggregate values of table "chat_participant" */
export type chat_participant_aggregate_order_by = {
		avg?:chat_participant_avg_order_by,
	count?:order_by,
	max?:chat_participant_max_order_by,
	min?:chat_participant_min_order_by,
	stddev?:chat_participant_stddev_order_by,
	stddev_pop?:chat_participant_stddev_pop_order_by,
	stddev_samp?:chat_participant_stddev_samp_order_by,
	sum?:chat_participant_sum_order_by,
	var_pop?:chat_participant_var_pop_order_by,
	var_samp?:chat_participant_var_samp_order_by,
	variance?:chat_participant_variance_order_by
}

/** input type for inserting array relation for remote table "chat_participant" */
export type chat_participant_arr_rel_insert_input = {
		data:chat_participant_insert_input[],
	/** upsert condition */
	on_conflict?:chat_participant_on_conflict
}

/** aggregate avg on columns */
export type chat_participant_avg_fields = {
	__typename?: "chat_participant_avg_fields",
	chat_id?:number,
	id?:number,
	participant_id?:number
}

/** order by avg() on columns of table "chat_participant" */
export type chat_participant_avg_order_by = {
		chat_id?:order_by,
	id?:order_by,
	participant_id?:order_by
}

/** Boolean expression to filter rows from the table "chat_participant". All fields are combined with a logical 'AND'. */
export type chat_participant_bool_exp = {
		_and?:chat_participant_bool_exp[],
	_not?:chat_participant_bool_exp,
	_or?:chat_participant_bool_exp[],
	app_type_id?:String_comparison_exp,
	chat?:chat_bool_exp,
	chat_id?:Int_comparison_exp,
	id?:Int_comparison_exp,
	notification_info?:notification_info_bool_exp,
	participant_id?:Int_comparison_exp,
	user?:user_bool_exp
}

/** unique or primary key constraints on table "chat_participant" */
export enum chat_participant_constraint {
	chat_participants_pkey = "chat_participants_pkey"
}

/** input type for incrementing numeric columns in table "chat_participant" */
export type chat_participant_inc_input = {
		chat_id?:number,
	id?:number,
	participant_id?:number
}

/** input type for inserting data into table "chat_participant" */
export type chat_participant_insert_input = {
		app_type_id?:string,
	chat?:chat_obj_rel_insert_input,
	chat_id?:number,
	id?:number,
	notification_info?:notification_info_obj_rel_insert_input,
	participant_id?:number,
	user?:user_obj_rel_insert_input
}

/** aggregate max on columns */
export type chat_participant_max_fields = {
	__typename?: "chat_participant_max_fields",
	app_type_id?:string,
	chat_id?:number,
	id?:number,
	participant_id?:number
}

/** order by max() on columns of table "chat_participant" */
export type chat_participant_max_order_by = {
		app_type_id?:order_by,
	chat_id?:order_by,
	id?:order_by,
	participant_id?:order_by
}

/** aggregate min on columns */
export type chat_participant_min_fields = {
	__typename?: "chat_participant_min_fields",
	app_type_id?:string,
	chat_id?:number,
	id?:number,
	participant_id?:number
}

/** order by min() on columns of table "chat_participant" */
export type chat_participant_min_order_by = {
		app_type_id?:order_by,
	chat_id?:order_by,
	id?:order_by,
	participant_id?:order_by
}

/** response of any mutation on the table "chat_participant" */
export type chat_participant_mutation_response = {
	__typename?: "chat_participant_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:chat_participant[]
}

/** on_conflict condition type for table "chat_participant" */
export type chat_participant_on_conflict = {
		constraint:chat_participant_constraint,
	update_columns:chat_participant_update_column[],
	where?:chat_participant_bool_exp
}

/** Ordering options when selecting data from "chat_participant". */
export type chat_participant_order_by = {
		app_type_id?:order_by,
	chat?:chat_order_by,
	chat_id?:order_by,
	id?:order_by,
	notification_info?:notification_info_order_by,
	participant_id?:order_by,
	user?:user_order_by
}

/** primary key columns input for table: chat_participant */
export type chat_participant_pk_columns_input = {
		id:number
}

/** select columns of table "chat_participant" */
export enum chat_participant_select_column {
	app_type_id = "app_type_id",
	chat_id = "chat_id",
	id = "id",
	participant_id = "participant_id"
}

/** input type for updating data in table "chat_participant" */
export type chat_participant_set_input = {
		app_type_id?:string,
	chat_id?:number,
	id?:number,
	participant_id?:number
}

/** aggregate stddev on columns */
export type chat_participant_stddev_fields = {
	__typename?: "chat_participant_stddev_fields",
	chat_id?:number,
	id?:number,
	participant_id?:number
}

/** order by stddev() on columns of table "chat_participant" */
export type chat_participant_stddev_order_by = {
		chat_id?:order_by,
	id?:order_by,
	participant_id?:order_by
}

/** aggregate stddev_pop on columns */
export type chat_participant_stddev_pop_fields = {
	__typename?: "chat_participant_stddev_pop_fields",
	chat_id?:number,
	id?:number,
	participant_id?:number
}

/** order by stddev_pop() on columns of table "chat_participant" */
export type chat_participant_stddev_pop_order_by = {
		chat_id?:order_by,
	id?:order_by,
	participant_id?:order_by
}

/** aggregate stddev_samp on columns */
export type chat_participant_stddev_samp_fields = {
	__typename?: "chat_participant_stddev_samp_fields",
	chat_id?:number,
	id?:number,
	participant_id?:number
}

/** order by stddev_samp() on columns of table "chat_participant" */
export type chat_participant_stddev_samp_order_by = {
		chat_id?:order_by,
	id?:order_by,
	participant_id?:order_by
}

/** Streaming cursor of the table "chat_participant" */
export type chat_participant_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:chat_participant_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type chat_participant_stream_cursor_value_input = {
		app_type_id?:string,
	chat_id?:number,
	id?:number,
	participant_id?:number
}

/** aggregate sum on columns */
export type chat_participant_sum_fields = {
	__typename?: "chat_participant_sum_fields",
	chat_id?:number,
	id?:number,
	participant_id?:number
}

/** order by sum() on columns of table "chat_participant" */
export type chat_participant_sum_order_by = {
		chat_id?:order_by,
	id?:order_by,
	participant_id?:order_by
}

/** update columns of table "chat_participant" */
export enum chat_participant_update_column {
	app_type_id = "app_type_id",
	chat_id = "chat_id",
	id = "id",
	participant_id = "participant_id"
}

export type chat_participant_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:chat_participant_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:chat_participant_set_input,
	where:chat_participant_bool_exp
}

/** aggregate var_pop on columns */
export type chat_participant_var_pop_fields = {
	__typename?: "chat_participant_var_pop_fields",
	chat_id?:number,
	id?:number,
	participant_id?:number
}

/** order by var_pop() on columns of table "chat_participant" */
export type chat_participant_var_pop_order_by = {
		chat_id?:order_by,
	id?:order_by,
	participant_id?:order_by
}

/** aggregate var_samp on columns */
export type chat_participant_var_samp_fields = {
	__typename?: "chat_participant_var_samp_fields",
	chat_id?:number,
	id?:number,
	participant_id?:number
}

/** order by var_samp() on columns of table "chat_participant" */
export type chat_participant_var_samp_order_by = {
		chat_id?:order_by,
	id?:order_by,
	participant_id?:order_by
}

/** aggregate variance on columns */
export type chat_participant_variance_fields = {
	__typename?: "chat_participant_variance_fields",
	chat_id?:number,
	id?:number,
	participant_id?:number
}

/** order by variance() on columns of table "chat_participant" */
export type chat_participant_variance_order_by = {
		chat_id?:order_by,
	id?:order_by,
	participant_id?:order_by
}

/** primary key columns input for table: chat */
export type chat_pk_columns_input = {
		id:number
}

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type chat_prepend_input = {
		chat_info?:jsonb,
	messages?:jsonb
}

/** select columns of table "chat" */
export enum chat_select_column {
	chat_info = "chat_info",
	creation_time = "creation_time",
	id = "id",
	messages = "messages"
}

/** input type for updating data in table "chat" */
export type chat_set_input = {
		chat_info?:jsonb,
	creation_time?:timestamptz,
	id?:number,
	messages?:jsonb
}

/** aggregate stddev on columns */
export type chat_stddev_fields = {
	__typename?: "chat_stddev_fields",
	id?:number
}

/** aggregate stddev_pop on columns */
export type chat_stddev_pop_fields = {
	__typename?: "chat_stddev_pop_fields",
	id?:number
}

/** aggregate stddev_samp on columns */
export type chat_stddev_samp_fields = {
	__typename?: "chat_stddev_samp_fields",
	id?:number
}

/** Streaming cursor of the table "chat" */
export type chat_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:chat_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type chat_stream_cursor_value_input = {
		chat_info?:jsonb,
	creation_time?:timestamptz,
	id?:number,
	messages?:jsonb
}

/** aggregate sum on columns */
export type chat_sum_fields = {
	__typename?: "chat_sum_fields",
	id?:number
}

/** update columns of table "chat" */
export enum chat_update_column {
	chat_info = "chat_info",
	creation_time = "creation_time",
	id = "id",
	messages = "messages"
}

export type chat_updates = {
		/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:chat_append_input,
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:chat_delete_at_path_input,
	/** delete the array element with specified index (negative integers count from
the end). throws an error if top level container is not an array */
	_delete_elem?:chat_delete_elem_input,
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:chat_delete_key_input,
	/** increments the numeric columns with given value of the filtered values */
	_inc?:chat_inc_input,
	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:chat_prepend_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:chat_set_input,
	where:chat_bool_exp
}

/** aggregate var_pop on columns */
export type chat_var_pop_fields = {
	__typename?: "chat_var_pop_fields",
	id?:number
}

/** aggregate var_samp on columns */
export type chat_var_samp_fields = {
	__typename?: "chat_var_samp_fields",
	id?:number
}

/** aggregate variance on columns */
export type chat_variance_fields = {
	__typename?: "chat_variance_fields",
	id?:number
}

/** ordering argument of a cursor */
export enum cursor_ordering {
	ASC = "ASC",
	DESC = "DESC"
}

/** columns and relationships of "customer" */
export type customer = {
	__typename?: "customer",
	app_version:string,
	/** An object relationship */
	cart?:restaurant_cart,
	/** An array relationship */
	deliveries:delivery_order[],
	/** An aggregate relationship */
	deliveries_aggregate:delivery_order_aggregate,
	/** A computed field, executes function "customer_notification_token" */
	notification_token?:string,
	/** An array relationship */
	saved_locations:saved_location[],
	/** An aggregate relationship */
	saved_locations_aggregate:saved_location_aggregate,
	/** An object relationship */
	user:user,
	user_id:number
}

/** aggregated selection of "customer" */
export type customer_aggregate = {
	__typename?: "customer_aggregate",
	aggregate?:customer_aggregate_fields,
	nodes:customer[]
}

/** aggregate fields of "customer" */
export type customer_aggregate_fields = {
	__typename?: "customer_aggregate_fields",
	avg?:customer_avg_fields,
	count:number,
	max?:customer_max_fields,
	min?:customer_min_fields,
	stddev?:customer_stddev_fields,
	stddev_pop?:customer_stddev_pop_fields,
	stddev_samp?:customer_stddev_samp_fields,
	sum?:customer_sum_fields,
	var_pop?:customer_var_pop_fields,
	var_samp?:customer_var_samp_fields,
	variance?:customer_variance_fields
}

/** aggregate avg on columns */
export type customer_avg_fields = {
	__typename?: "customer_avg_fields",
	user_id?:number
}

/** Boolean expression to filter rows from the table "customer". All fields are combined with a logical 'AND'. */
export type customer_bool_exp = {
		_and?:customer_bool_exp[],
	_not?:customer_bool_exp,
	_or?:customer_bool_exp[],
	app_version?:String_comparison_exp,
	cart?:restaurant_cart_bool_exp,
	deliveries?:delivery_order_bool_exp,
	notification_token?:String_comparison_exp,
	saved_locations?:saved_location_bool_exp,
	user?:user_bool_exp,
	user_id?:Int_comparison_exp
}

/** unique or primary key constraints on table "customer" */
export enum customer_constraint {
	customer_pkey = "customer_pkey",
	customer_user_id_key = "customer_user_id_key"
}

/** input type for incrementing numeric columns in table "customer" */
export type customer_inc_input = {
		user_id?:number
}

/** input type for inserting data into table "customer" */
export type customer_insert_input = {
		app_version?:string,
	cart?:restaurant_cart_obj_rel_insert_input,
	deliveries?:delivery_order_arr_rel_insert_input,
	saved_locations?:saved_location_arr_rel_insert_input,
	user?:user_obj_rel_insert_input,
	user_id?:number
}

/** aggregate max on columns */
export type customer_max_fields = {
	__typename?: "customer_max_fields",
	app_version?:string,
	user_id?:number
}

/** aggregate min on columns */
export type customer_min_fields = {
	__typename?: "customer_min_fields",
	app_version?:string,
	user_id?:number
}

/** response of any mutation on the table "customer" */
export type customer_mutation_response = {
	__typename?: "customer_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:customer[]
}

/** input type for inserting object relation for remote table "customer" */
export type customer_obj_rel_insert_input = {
		data:customer_insert_input,
	/** upsert condition */
	on_conflict?:customer_on_conflict
}

/** on_conflict condition type for table "customer" */
export type customer_on_conflict = {
		constraint:customer_constraint,
	update_columns:customer_update_column[],
	where?:customer_bool_exp
}

/** Ordering options when selecting data from "customer". */
export type customer_order_by = {
		app_version?:order_by,
	cart?:restaurant_cart_order_by,
	deliveries_aggregate?:delivery_order_aggregate_order_by,
	notification_token?:order_by,
	saved_locations_aggregate?:saved_location_aggregate_order_by,
	user?:user_order_by,
	user_id?:order_by
}

/** primary key columns input for table: customer */
export type customer_pk_columns_input = {
		user_id:number
}

/** select columns of table "customer" */
export enum customer_select_column {
	app_version = "app_version",
	user_id = "user_id"
}

/** input type for updating data in table "customer" */
export type customer_set_input = {
		app_version?:string,
	user_id?:number
}

/** aggregate stddev on columns */
export type customer_stddev_fields = {
	__typename?: "customer_stddev_fields",
	user_id?:number
}

/** aggregate stddev_pop on columns */
export type customer_stddev_pop_fields = {
	__typename?: "customer_stddev_pop_fields",
	user_id?:number
}

/** aggregate stddev_samp on columns */
export type customer_stddev_samp_fields = {
	__typename?: "customer_stddev_samp_fields",
	user_id?:number
}

/** Streaming cursor of the table "customer" */
export type customer_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:customer_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type customer_stream_cursor_value_input = {
		app_version?:string,
	user_id?:number
}

/** aggregate sum on columns */
export type customer_sum_fields = {
	__typename?: "customer_sum_fields",
	user_id?:number
}

/** update columns of table "customer" */
export enum customer_update_column {
	app_version = "app_version",
	user_id = "user_id"
}

export type customer_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:customer_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:customer_set_input,
	where:customer_bool_exp
}

/** aggregate var_pop on columns */
export type customer_var_pop_fields = {
	__typename?: "customer_var_pop_fields",
	user_id?:number
}

/** aggregate var_samp on columns */
export type customer_var_samp_fields = {
	__typename?: "customer_var_samp_fields",
	user_id?:number
}

/** aggregate variance on columns */
export type customer_variance_fields = {
	__typename?: "customer_variance_fields",
	user_id?:number
}

/** columns and relationships of "deliverer" */
export type deliverer = {
	__typename?: "deliverer",
	app_version?:string,
	current_location?:geography,
	delivery_company_id:number,
	delivery_company_type:string,
	id:number,
	notification_info_id?:number,
	/** A computed field, executes function "driver_notification_token" */
	notification_token?:string,
	online:boolean,
	/** An object relationship */
	restaurant?:restaurant,
	/** awaiting_approval, authorized, banned */
	status:string,
	/** An object relationship */
	user:user,
	user_id:number
}

/** aggregated selection of "deliverer" */
export type deliverer_aggregate = {
	__typename?: "deliverer_aggregate",
	aggregate?:deliverer_aggregate_fields,
	nodes:deliverer[]
}

/** aggregate fields of "deliverer" */
export type deliverer_aggregate_fields = {
	__typename?: "deliverer_aggregate_fields",
	avg?:deliverer_avg_fields,
	count:number,
	max?:deliverer_max_fields,
	min?:deliverer_min_fields,
	stddev?:deliverer_stddev_fields,
	stddev_pop?:deliverer_stddev_pop_fields,
	stddev_samp?:deliverer_stddev_samp_fields,
	sum?:deliverer_sum_fields,
	var_pop?:deliverer_var_pop_fields,
	var_samp?:deliverer_var_samp_fields,
	variance?:deliverer_variance_fields
}

/** aggregate avg on columns */
export type deliverer_avg_fields = {
	__typename?: "deliverer_avg_fields",
	delivery_company_id?:number,
	id?:number,
	notification_info_id?:number,
	user_id?:number
}

/** Boolean expression to filter rows from the table "deliverer". All fields are combined with a logical 'AND'. */
export type deliverer_bool_exp = {
		_and?:deliverer_bool_exp[],
	_not?:deliverer_bool_exp,
	_or?:deliverer_bool_exp[],
	app_version?:String_comparison_exp,
	current_location?:geography_comparison_exp,
	delivery_company_id?:Int_comparison_exp,
	delivery_company_type?:String_comparison_exp,
	id?:Int_comparison_exp,
	notification_info_id?:Int_comparison_exp,
	notification_token?:String_comparison_exp,
	online?:Boolean_comparison_exp,
	restaurant?:restaurant_bool_exp,
	status?:String_comparison_exp,
	user?:user_bool_exp,
	user_id?:Int_comparison_exp
}

/** unique or primary key constraints on table "deliverer" */
export enum deliverer_constraint {
	deliverer_user_id_delivery_company_type_delivery_company_id_key = "deliverer_user_id_delivery_company_type_delivery_company_id_key",
	delivery_company_index = "delivery_company_index",
	driver_pkey = "driver_pkey"
}

/** input type for incrementing numeric columns in table "deliverer" */
export type deliverer_inc_input = {
		delivery_company_id?:number,
	id?:number,
	notification_info_id?:number,
	user_id?:number
}

/** input type for inserting data into table "deliverer" */
export type deliverer_insert_input = {
		app_version?:string,
	current_location?:geography,
	delivery_company_id?:number,
	delivery_company_type?:string,
	id?:number,
	notification_info_id?:number,
	online?:boolean,
	restaurant?:restaurant_obj_rel_insert_input,
	/** awaiting_approval, authorized, banned */
	status?:string,
	user?:user_obj_rel_insert_input,
	user_id?:number
}

/** aggregate max on columns */
export type deliverer_max_fields = {
	__typename?: "deliverer_max_fields",
	app_version?:string,
	delivery_company_id?:number,
	delivery_company_type?:string,
	id?:number,
	notification_info_id?:number,
	/** awaiting_approval, authorized, banned */
	status?:string,
	user_id?:number
}

/** aggregate min on columns */
export type deliverer_min_fields = {
	__typename?: "deliverer_min_fields",
	app_version?:string,
	delivery_company_id?:number,
	delivery_company_type?:string,
	id?:number,
	notification_info_id?:number,
	/** awaiting_approval, authorized, banned */
	status?:string,
	user_id?:number
}

/** response of any mutation on the table "deliverer" */
export type deliverer_mutation_response = {
	__typename?: "deliverer_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:deliverer[]
}

/** input type for inserting object relation for remote table "deliverer" */
export type deliverer_obj_rel_insert_input = {
		data:deliverer_insert_input,
	/** upsert condition */
	on_conflict?:deliverer_on_conflict
}

/** on_conflict condition type for table "deliverer" */
export type deliverer_on_conflict = {
		constraint:deliverer_constraint,
	update_columns:deliverer_update_column[],
	where?:deliverer_bool_exp
}

/** Ordering options when selecting data from "deliverer". */
export type deliverer_order_by = {
		app_version?:order_by,
	current_location?:order_by,
	delivery_company_id?:order_by,
	delivery_company_type?:order_by,
	id?:order_by,
	notification_info_id?:order_by,
	notification_token?:order_by,
	online?:order_by,
	restaurant?:restaurant_order_by,
	status?:order_by,
	user?:user_order_by,
	user_id?:order_by
}

/** primary key columns input for table: deliverer */
export type deliverer_pk_columns_input = {
		id:number
}

/** select columns of table "deliverer" */
export enum deliverer_select_column {
	app_version = "app_version",
	current_location = "current_location",
	delivery_company_id = "delivery_company_id",
	delivery_company_type = "delivery_company_type",
	id = "id",
	notification_info_id = "notification_info_id",
	online = "online",
	status = "status",
	user_id = "user_id"
}

/** input type for updating data in table "deliverer" */
export type deliverer_set_input = {
		app_version?:string,
	current_location?:geography,
	delivery_company_id?:number,
	delivery_company_type?:string,
	id?:number,
	notification_info_id?:number,
	online?:boolean,
	/** awaiting_approval, authorized, banned */
	status?:string,
	user_id?:number
}

/** aggregate stddev on columns */
export type deliverer_stddev_fields = {
	__typename?: "deliverer_stddev_fields",
	delivery_company_id?:number,
	id?:number,
	notification_info_id?:number,
	user_id?:number
}

/** aggregate stddev_pop on columns */
export type deliverer_stddev_pop_fields = {
	__typename?: "deliverer_stddev_pop_fields",
	delivery_company_id?:number,
	id?:number,
	notification_info_id?:number,
	user_id?:number
}

/** aggregate stddev_samp on columns */
export type deliverer_stddev_samp_fields = {
	__typename?: "deliverer_stddev_samp_fields",
	delivery_company_id?:number,
	id?:number,
	notification_info_id?:number,
	user_id?:number
}

/** Streaming cursor of the table "deliverer" */
export type deliverer_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:deliverer_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type deliverer_stream_cursor_value_input = {
		app_version?:string,
	current_location?:geography,
	delivery_company_id?:number,
	delivery_company_type?:string,
	id?:number,
	notification_info_id?:number,
	online?:boolean,
	/** awaiting_approval, authorized, banned */
	status?:string,
	user_id?:number
}

/** aggregate sum on columns */
export type deliverer_sum_fields = {
	__typename?: "deliverer_sum_fields",
	delivery_company_id?:number,
	id?:number,
	notification_info_id?:number,
	user_id?:number
}

/** update columns of table "deliverer" */
export enum deliverer_update_column {
	app_version = "app_version",
	current_location = "current_location",
	delivery_company_id = "delivery_company_id",
	delivery_company_type = "delivery_company_type",
	id = "id",
	notification_info_id = "notification_info_id",
	online = "online",
	status = "status",
	user_id = "user_id"
}

export type deliverer_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:deliverer_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:deliverer_set_input,
	where:deliverer_bool_exp
}

/** aggregate var_pop on columns */
export type deliverer_var_pop_fields = {
	__typename?: "deliverer_var_pop_fields",
	delivery_company_id?:number,
	id?:number,
	notification_info_id?:number,
	user_id?:number
}

/** aggregate var_samp on columns */
export type deliverer_var_samp_fields = {
	__typename?: "deliverer_var_samp_fields",
	delivery_company_id?:number,
	id?:number,
	notification_info_id?:number,
	user_id?:number
}

/** aggregate variance on columns */
export type deliverer_variance_fields = {
	__typename?: "deliverer_variance_fields",
	delivery_company_id?:number,
	id?:number,
	notification_info_id?:number,
	user_id?:number
}

/** columns and relationships of "delivery_order" */
export type delivery_order = {
	__typename?: "delivery_order",
	actual_arrival_at_dropoff_time?:timestamptz,
	actual_arrival_at_pickup_time?:timestamptz,
	actual_delivered_time?:timestamptz,
	actual_package_ready_time?:timestamptz,
	cancellation_time?:timestamptz,
	/** An object relationship */
	chat_with_customer:chat,
	chat_with_customer_id:number,
	/** An object relationship */
	chat_with_service_provider?:chat,
	chat_with_service_provider_id?:number,
	current_gps?:geography,
	customer_id:number,
	/** An object relationship */
	customer_review_by_driver?:review,
	customer_review_by_driver_id?:number,
	/** An object relationship */
	deliverer?:deliverer,
	/** restaurant, delivery */
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	delivery_cost:money,
	/** An object relationship */
	driver_review_by_customer?:review,
	driver_review_by_customer_id?:number,
	/** An object relationship */
	driver_review_by_service_provider?:review,
	driver_review_by_service_provider_id?:number,
	dropoff_address:string,
	dropoff_gps:geography,
	estimated_arrival_at_dropoff_time?:timestamptz,
	estimated_arrival_at_pickup_time?:timestamptz,
	estimated_package_ready_time?:timestamptz,
	id:number,
	/** A computed field, executes function "delivery_notification_token" */
	notification_token?:string,
	order_time:timestamptz,
	package_cost:money,
	payment_type:string,
	pickup_address:string,
	pickup_gps:geography,
	/** An object relationship */
	restaurant?:restaurant,
	service_provider_id?:number,
	/** An object relationship */
	service_provider_review_by_driver?:review,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status:string,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number,
	trip_polyline?:string
}

/** aggregated selection of "delivery_order" */
export type delivery_order_aggregate = {
	__typename?: "delivery_order_aggregate",
	aggregate?:delivery_order_aggregate_fields,
	nodes:delivery_order[]
}

/** aggregate fields of "delivery_order" */
export type delivery_order_aggregate_fields = {
	__typename?: "delivery_order_aggregate_fields",
	avg?:delivery_order_avg_fields,
	count:number,
	max?:delivery_order_max_fields,
	min?:delivery_order_min_fields,
	stddev?:delivery_order_stddev_fields,
	stddev_pop?:delivery_order_stddev_pop_fields,
	stddev_samp?:delivery_order_stddev_samp_fields,
	sum?:delivery_order_sum_fields,
	var_pop?:delivery_order_var_pop_fields,
	var_samp?:delivery_order_var_samp_fields,
	variance?:delivery_order_variance_fields
}

/** order by aggregate values of table "delivery_order" */
export type delivery_order_aggregate_order_by = {
		avg?:delivery_order_avg_order_by,
	count?:order_by,
	max?:delivery_order_max_order_by,
	min?:delivery_order_min_order_by,
	stddev?:delivery_order_stddev_order_by,
	stddev_pop?:delivery_order_stddev_pop_order_by,
	stddev_samp?:delivery_order_stddev_samp_order_by,
	sum?:delivery_order_sum_order_by,
	var_pop?:delivery_order_var_pop_order_by,
	var_samp?:delivery_order_var_samp_order_by,
	variance?:delivery_order_variance_order_by
}

/** input type for inserting array relation for remote table "delivery_order" */
export type delivery_order_arr_rel_insert_input = {
		data:delivery_order_insert_input[],
	/** upsert condition */
	on_conflict?:delivery_order_on_conflict
}

/** aggregate avg on columns */
export type delivery_order_avg_fields = {
	__typename?: "delivery_order_avg_fields",
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	delivery_cost?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	id?:number,
	package_cost?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number
}

/** order by avg() on columns of table "delivery_order" */
export type delivery_order_avg_order_by = {
		chat_with_customer_id?:order_by,
	chat_with_service_provider_id?:order_by,
	customer_id?:order_by,
	customer_review_by_driver_id?:order_by,
	deliverer_id?:order_by,
	delivery_cost?:order_by,
	driver_review_by_customer_id?:order_by,
	driver_review_by_service_provider_id?:order_by,
	id?:order_by,
	package_cost?:order_by,
	service_provider_id?:order_by,
	service_provider_review_by_driver_id?:order_by,
	stripe_payment_id?:order_by,
	/** in meters */
	trip_distance?:order_by,
	/** in seconds */
	trip_duration?:order_by
}

/** Boolean expression to filter rows from the table "delivery_order". All fields are combined with a logical 'AND'. */
export type delivery_order_bool_exp = {
		_and?:delivery_order_bool_exp[],
	_not?:delivery_order_bool_exp,
	_or?:delivery_order_bool_exp[],
	actual_arrival_at_dropoff_time?:timestamptz_comparison_exp,
	actual_arrival_at_pickup_time?:timestamptz_comparison_exp,
	actual_delivered_time?:timestamptz_comparison_exp,
	actual_package_ready_time?:timestamptz_comparison_exp,
	cancellation_time?:timestamptz_comparison_exp,
	chat_with_customer?:chat_bool_exp,
	chat_with_customer_id?:Int_comparison_exp,
	chat_with_service_provider?:chat_bool_exp,
	chat_with_service_provider_id?:Int_comparison_exp,
	current_gps?:geography_comparison_exp,
	customer_id?:Int_comparison_exp,
	customer_review_by_driver?:review_bool_exp,
	customer_review_by_driver_id?:Int_comparison_exp,
	deliverer?:deliverer_bool_exp,
	deliverer_app_type_id?:String_comparison_exp,
	deliverer_id?:Int_comparison_exp,
	delivery_cost?:money_comparison_exp,
	driver_review_by_customer?:review_bool_exp,
	driver_review_by_customer_id?:Int_comparison_exp,
	driver_review_by_service_provider?:review_bool_exp,
	driver_review_by_service_provider_id?:Int_comparison_exp,
	dropoff_address?:String_comparison_exp,
	dropoff_gps?:geography_comparison_exp,
	estimated_arrival_at_dropoff_time?:timestamptz_comparison_exp,
	estimated_arrival_at_pickup_time?:timestamptz_comparison_exp,
	estimated_package_ready_time?:timestamptz_comparison_exp,
	id?:Int_comparison_exp,
	notification_token?:String_comparison_exp,
	order_time?:timestamptz_comparison_exp,
	package_cost?:money_comparison_exp,
	payment_type?:String_comparison_exp,
	pickup_address?:String_comparison_exp,
	pickup_gps?:geography_comparison_exp,
	restaurant?:restaurant_bool_exp,
	service_provider_id?:Int_comparison_exp,
	service_provider_review_by_driver?:review_bool_exp,
	service_provider_review_by_driver_id?:Int_comparison_exp,
	service_provider_type?:String_comparison_exp,
	status?:String_comparison_exp,
	stripe_payment_id?:Int_comparison_exp,
	trip_distance?:Int_comparison_exp,
	trip_duration?:Int_comparison_exp,
	trip_polyline?:String_comparison_exp
}

/** unique or primary key constraints on table "delivery_order" */
export enum delivery_order_constraint {
	delivery_pkey = "delivery_pkey"
}

/** input type for incrementing numeric columns in table "delivery_order" */
export type delivery_order_inc_input = {
		chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	delivery_cost?:money,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	id?:number,
	package_cost?:money,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number
}

/** input type for inserting data into table "delivery_order" */
export type delivery_order_insert_input = {
		actual_arrival_at_dropoff_time?:timestamptz,
	actual_arrival_at_pickup_time?:timestamptz,
	actual_delivered_time?:timestamptz,
	actual_package_ready_time?:timestamptz,
	cancellation_time?:timestamptz,
	chat_with_customer?:chat_obj_rel_insert_input,
	chat_with_customer_id?:number,
	chat_with_service_provider?:chat_obj_rel_insert_input,
	chat_with_service_provider_id?:number,
	current_gps?:geography,
	customer_id?:number,
	customer_review_by_driver?:review_obj_rel_insert_input,
	customer_review_by_driver_id?:number,
	deliverer?:deliverer_obj_rel_insert_input,
	/** restaurant, delivery */
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	delivery_cost?:money,
	driver_review_by_customer?:review_obj_rel_insert_input,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider?:review_obj_rel_insert_input,
	driver_review_by_service_provider_id?:number,
	dropoff_address?:string,
	dropoff_gps?:geography,
	estimated_arrival_at_dropoff_time?:timestamptz,
	estimated_arrival_at_pickup_time?:timestamptz,
	estimated_package_ready_time?:timestamptz,
	id?:number,
	order_time?:timestamptz,
	package_cost?:money,
	payment_type?:string,
	pickup_address?:string,
	pickup_gps?:geography,
	restaurant?:restaurant_obj_rel_insert_input,
	service_provider_id?:number,
	service_provider_review_by_driver?:review_obj_rel_insert_input,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number,
	trip_polyline?:string
}

/** aggregate max on columns */
export type delivery_order_max_fields = {
	__typename?: "delivery_order_max_fields",
	actual_arrival_at_dropoff_time?:timestamptz,
	actual_arrival_at_pickup_time?:timestamptz,
	actual_delivered_time?:timestamptz,
	actual_package_ready_time?:timestamptz,
	cancellation_time?:timestamptz,
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	/** restaurant, delivery */
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	delivery_cost?:money,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	dropoff_address?:string,
	estimated_arrival_at_dropoff_time?:timestamptz,
	estimated_arrival_at_pickup_time?:timestamptz,
	estimated_package_ready_time?:timestamptz,
	id?:number,
	order_time?:timestamptz,
	package_cost?:money,
	payment_type?:string,
	pickup_address?:string,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number,
	trip_polyline?:string
}

/** order by max() on columns of table "delivery_order" */
export type delivery_order_max_order_by = {
		actual_arrival_at_dropoff_time?:order_by,
	actual_arrival_at_pickup_time?:order_by,
	actual_delivered_time?:order_by,
	actual_package_ready_time?:order_by,
	cancellation_time?:order_by,
	chat_with_customer_id?:order_by,
	chat_with_service_provider_id?:order_by,
	customer_id?:order_by,
	customer_review_by_driver_id?:order_by,
	/** restaurant, delivery */
	deliverer_app_type_id?:order_by,
	deliverer_id?:order_by,
	delivery_cost?:order_by,
	driver_review_by_customer_id?:order_by,
	driver_review_by_service_provider_id?:order_by,
	dropoff_address?:order_by,
	estimated_arrival_at_dropoff_time?:order_by,
	estimated_arrival_at_pickup_time?:order_by,
	estimated_package_ready_time?:order_by,
	id?:order_by,
	order_time?:order_by,
	package_cost?:order_by,
	payment_type?:order_by,
	pickup_address?:order_by,
	service_provider_id?:order_by,
	service_provider_review_by_driver_id?:order_by,
	service_provider_type?:order_by,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:order_by,
	stripe_payment_id?:order_by,
	/** in meters */
	trip_distance?:order_by,
	/** in seconds */
	trip_duration?:order_by,
	trip_polyline?:order_by
}

/** aggregate min on columns */
export type delivery_order_min_fields = {
	__typename?: "delivery_order_min_fields",
	actual_arrival_at_dropoff_time?:timestamptz,
	actual_arrival_at_pickup_time?:timestamptz,
	actual_delivered_time?:timestamptz,
	actual_package_ready_time?:timestamptz,
	cancellation_time?:timestamptz,
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	/** restaurant, delivery */
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	delivery_cost?:money,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	dropoff_address?:string,
	estimated_arrival_at_dropoff_time?:timestamptz,
	estimated_arrival_at_pickup_time?:timestamptz,
	estimated_package_ready_time?:timestamptz,
	id?:number,
	order_time?:timestamptz,
	package_cost?:money,
	payment_type?:string,
	pickup_address?:string,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number,
	trip_polyline?:string
}

/** order by min() on columns of table "delivery_order" */
export type delivery_order_min_order_by = {
		actual_arrival_at_dropoff_time?:order_by,
	actual_arrival_at_pickup_time?:order_by,
	actual_delivered_time?:order_by,
	actual_package_ready_time?:order_by,
	cancellation_time?:order_by,
	chat_with_customer_id?:order_by,
	chat_with_service_provider_id?:order_by,
	customer_id?:order_by,
	customer_review_by_driver_id?:order_by,
	/** restaurant, delivery */
	deliverer_app_type_id?:order_by,
	deliverer_id?:order_by,
	delivery_cost?:order_by,
	driver_review_by_customer_id?:order_by,
	driver_review_by_service_provider_id?:order_by,
	dropoff_address?:order_by,
	estimated_arrival_at_dropoff_time?:order_by,
	estimated_arrival_at_pickup_time?:order_by,
	estimated_package_ready_time?:order_by,
	id?:order_by,
	order_time?:order_by,
	package_cost?:order_by,
	payment_type?:order_by,
	pickup_address?:order_by,
	service_provider_id?:order_by,
	service_provider_review_by_driver_id?:order_by,
	service_provider_type?:order_by,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:order_by,
	stripe_payment_id?:order_by,
	/** in meters */
	trip_distance?:order_by,
	/** in seconds */
	trip_duration?:order_by,
	trip_polyline?:order_by
}

/** response of any mutation on the table "delivery_order" */
export type delivery_order_mutation_response = {
	__typename?: "delivery_order_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:delivery_order[]
}

/** input type for inserting object relation for remote table "delivery_order" */
export type delivery_order_obj_rel_insert_input = {
		data:delivery_order_insert_input,
	/** upsert condition */
	on_conflict?:delivery_order_on_conflict
}

/** on_conflict condition type for table "delivery_order" */
export type delivery_order_on_conflict = {
		constraint:delivery_order_constraint,
	update_columns:delivery_order_update_column[],
	where?:delivery_order_bool_exp
}

/** Ordering options when selecting data from "delivery_order". */
export type delivery_order_order_by = {
		actual_arrival_at_dropoff_time?:order_by,
	actual_arrival_at_pickup_time?:order_by,
	actual_delivered_time?:order_by,
	actual_package_ready_time?:order_by,
	cancellation_time?:order_by,
	chat_with_customer?:chat_order_by,
	chat_with_customer_id?:order_by,
	chat_with_service_provider?:chat_order_by,
	chat_with_service_provider_id?:order_by,
	current_gps?:order_by,
	customer_id?:order_by,
	customer_review_by_driver?:review_order_by,
	customer_review_by_driver_id?:order_by,
	deliverer?:deliverer_order_by,
	deliverer_app_type_id?:order_by,
	deliverer_id?:order_by,
	delivery_cost?:order_by,
	driver_review_by_customer?:review_order_by,
	driver_review_by_customer_id?:order_by,
	driver_review_by_service_provider?:review_order_by,
	driver_review_by_service_provider_id?:order_by,
	dropoff_address?:order_by,
	dropoff_gps?:order_by,
	estimated_arrival_at_dropoff_time?:order_by,
	estimated_arrival_at_pickup_time?:order_by,
	estimated_package_ready_time?:order_by,
	id?:order_by,
	notification_token?:order_by,
	order_time?:order_by,
	package_cost?:order_by,
	payment_type?:order_by,
	pickup_address?:order_by,
	pickup_gps?:order_by,
	restaurant?:restaurant_order_by,
	service_provider_id?:order_by,
	service_provider_review_by_driver?:review_order_by,
	service_provider_review_by_driver_id?:order_by,
	service_provider_type?:order_by,
	status?:order_by,
	stripe_payment_id?:order_by,
	trip_distance?:order_by,
	trip_duration?:order_by,
	trip_polyline?:order_by
}

/** primary key columns input for table: delivery_order */
export type delivery_order_pk_columns_input = {
		id:number
}

/** columns and relationships of "delivery_order_public" */
export type delivery_order_public = {
	__typename?: "delivery_order_public",
	actual_arrival_at_dropoff_time?:timestamptz,
	actual_arrival_at_pickup_time?:timestamptz,
	actual_delivered_time?:timestamptz,
	actual_package_ready_time?:timestamptz,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	/** An object relationship */
	deliverer?:deliverer,
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	estimated_arrival_at_dropoff_time?:timestamptz,
	estimated_arrival_at_pickup_time?:timestamptz,
	estimated_package_ready_time?:timestamptz,
	order_time?:timestamptz,
	/** An object relationship */
	restaurant?:restaurant,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	status?:string,
	trip_distance?:number,
	trip_duration?:number
}

/** aggregated selection of "delivery_order_public" */
export type delivery_order_public_aggregate = {
	__typename?: "delivery_order_public_aggregate",
	aggregate?:delivery_order_public_aggregate_fields,
	nodes:delivery_order_public[]
}

/** aggregate fields of "delivery_order_public" */
export type delivery_order_public_aggregate_fields = {
	__typename?: "delivery_order_public_aggregate_fields",
	avg?:delivery_order_public_avg_fields,
	count:number,
	max?:delivery_order_public_max_fields,
	min?:delivery_order_public_min_fields,
	stddev?:delivery_order_public_stddev_fields,
	stddev_pop?:delivery_order_public_stddev_pop_fields,
	stddev_samp?:delivery_order_public_stddev_samp_fields,
	sum?:delivery_order_public_sum_fields,
	var_pop?:delivery_order_public_var_pop_fields,
	var_samp?:delivery_order_public_var_samp_fields,
	variance?:delivery_order_public_variance_fields
}

/** aggregate avg on columns */
export type delivery_order_public_avg_fields = {
	__typename?: "delivery_order_public_avg_fields",
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	trip_distance?:number,
	trip_duration?:number
}

/** Boolean expression to filter rows from the table "delivery_order_public". All fields are combined with a logical 'AND'. */
export type delivery_order_public_bool_exp = {
		_and?:delivery_order_public_bool_exp[],
	_not?:delivery_order_public_bool_exp,
	_or?:delivery_order_public_bool_exp[],
	actual_arrival_at_dropoff_time?:timestamptz_comparison_exp,
	actual_arrival_at_pickup_time?:timestamptz_comparison_exp,
	actual_delivered_time?:timestamptz_comparison_exp,
	actual_package_ready_time?:timestamptz_comparison_exp,
	customer_id?:Int_comparison_exp,
	customer_review_by_driver_id?:Int_comparison_exp,
	deliverer?:deliverer_bool_exp,
	deliverer_app_type_id?:String_comparison_exp,
	deliverer_id?:Int_comparison_exp,
	driver_review_by_customer_id?:Int_comparison_exp,
	driver_review_by_service_provider_id?:Int_comparison_exp,
	estimated_arrival_at_dropoff_time?:timestamptz_comparison_exp,
	estimated_arrival_at_pickup_time?:timestamptz_comparison_exp,
	estimated_package_ready_time?:timestamptz_comparison_exp,
	order_time?:timestamptz_comparison_exp,
	restaurant?:restaurant_bool_exp,
	service_provider_id?:Int_comparison_exp,
	service_provider_review_by_driver_id?:Int_comparison_exp,
	service_provider_type?:String_comparison_exp,
	status?:String_comparison_exp,
	trip_distance?:Int_comparison_exp,
	trip_duration?:Int_comparison_exp
}

/** input type for incrementing numeric columns in table "delivery_order_public" */
export type delivery_order_public_inc_input = {
		customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	trip_distance?:number,
	trip_duration?:number
}

/** input type for inserting data into table "delivery_order_public" */
export type delivery_order_public_insert_input = {
		actual_arrival_at_dropoff_time?:timestamptz,
	actual_arrival_at_pickup_time?:timestamptz,
	actual_delivered_time?:timestamptz,
	actual_package_ready_time?:timestamptz,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer?:deliverer_obj_rel_insert_input,
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	estimated_arrival_at_dropoff_time?:timestamptz,
	estimated_arrival_at_pickup_time?:timestamptz,
	estimated_package_ready_time?:timestamptz,
	order_time?:timestamptz,
	restaurant?:restaurant_obj_rel_insert_input,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	status?:string,
	trip_distance?:number,
	trip_duration?:number
}

/** aggregate max on columns */
export type delivery_order_public_max_fields = {
	__typename?: "delivery_order_public_max_fields",
	actual_arrival_at_dropoff_time?:timestamptz,
	actual_arrival_at_pickup_time?:timestamptz,
	actual_delivered_time?:timestamptz,
	actual_package_ready_time?:timestamptz,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	estimated_arrival_at_dropoff_time?:timestamptz,
	estimated_arrival_at_pickup_time?:timestamptz,
	estimated_package_ready_time?:timestamptz,
	order_time?:timestamptz,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	status?:string,
	trip_distance?:number,
	trip_duration?:number
}

/** aggregate min on columns */
export type delivery_order_public_min_fields = {
	__typename?: "delivery_order_public_min_fields",
	actual_arrival_at_dropoff_time?:timestamptz,
	actual_arrival_at_pickup_time?:timestamptz,
	actual_delivered_time?:timestamptz,
	actual_package_ready_time?:timestamptz,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	estimated_arrival_at_dropoff_time?:timestamptz,
	estimated_arrival_at_pickup_time?:timestamptz,
	estimated_package_ready_time?:timestamptz,
	order_time?:timestamptz,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	status?:string,
	trip_distance?:number,
	trip_duration?:number
}

/** response of any mutation on the table "delivery_order_public" */
export type delivery_order_public_mutation_response = {
	__typename?: "delivery_order_public_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:delivery_order_public[]
}

/** Ordering options when selecting data from "delivery_order_public". */
export type delivery_order_public_order_by = {
		actual_arrival_at_dropoff_time?:order_by,
	actual_arrival_at_pickup_time?:order_by,
	actual_delivered_time?:order_by,
	actual_package_ready_time?:order_by,
	customer_id?:order_by,
	customer_review_by_driver_id?:order_by,
	deliverer?:deliverer_order_by,
	deliverer_app_type_id?:order_by,
	deliverer_id?:order_by,
	driver_review_by_customer_id?:order_by,
	driver_review_by_service_provider_id?:order_by,
	estimated_arrival_at_dropoff_time?:order_by,
	estimated_arrival_at_pickup_time?:order_by,
	estimated_package_ready_time?:order_by,
	order_time?:order_by,
	restaurant?:restaurant_order_by,
	service_provider_id?:order_by,
	service_provider_review_by_driver_id?:order_by,
	service_provider_type?:order_by,
	status?:order_by,
	trip_distance?:order_by,
	trip_duration?:order_by
}

/** select columns of table "delivery_order_public" */
export enum delivery_order_public_select_column {
	actual_arrival_at_dropoff_time = "actual_arrival_at_dropoff_time",
	actual_arrival_at_pickup_time = "actual_arrival_at_pickup_time",
	actual_delivered_time = "actual_delivered_time",
	actual_package_ready_time = "actual_package_ready_time",
	customer_id = "customer_id",
	customer_review_by_driver_id = "customer_review_by_driver_id",
	deliverer_app_type_id = "deliverer_app_type_id",
	deliverer_id = "deliverer_id",
	driver_review_by_customer_id = "driver_review_by_customer_id",
	driver_review_by_service_provider_id = "driver_review_by_service_provider_id",
	estimated_arrival_at_dropoff_time = "estimated_arrival_at_dropoff_time",
	estimated_arrival_at_pickup_time = "estimated_arrival_at_pickup_time",
	estimated_package_ready_time = "estimated_package_ready_time",
	order_time = "order_time",
	service_provider_id = "service_provider_id",
	service_provider_review_by_driver_id = "service_provider_review_by_driver_id",
	service_provider_type = "service_provider_type",
	status = "status",
	trip_distance = "trip_distance",
	trip_duration = "trip_duration"
}

/** input type for updating data in table "delivery_order_public" */
export type delivery_order_public_set_input = {
		actual_arrival_at_dropoff_time?:timestamptz,
	actual_arrival_at_pickup_time?:timestamptz,
	actual_delivered_time?:timestamptz,
	actual_package_ready_time?:timestamptz,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	estimated_arrival_at_dropoff_time?:timestamptz,
	estimated_arrival_at_pickup_time?:timestamptz,
	estimated_package_ready_time?:timestamptz,
	order_time?:timestamptz,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	status?:string,
	trip_distance?:number,
	trip_duration?:number
}

/** aggregate stddev on columns */
export type delivery_order_public_stddev_fields = {
	__typename?: "delivery_order_public_stddev_fields",
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	trip_distance?:number,
	trip_duration?:number
}

/** aggregate stddev_pop on columns */
export type delivery_order_public_stddev_pop_fields = {
	__typename?: "delivery_order_public_stddev_pop_fields",
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	trip_distance?:number,
	trip_duration?:number
}

/** aggregate stddev_samp on columns */
export type delivery_order_public_stddev_samp_fields = {
	__typename?: "delivery_order_public_stddev_samp_fields",
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	trip_distance?:number,
	trip_duration?:number
}

/** Streaming cursor of the table "delivery_order_public" */
export type delivery_order_public_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:delivery_order_public_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type delivery_order_public_stream_cursor_value_input = {
		actual_arrival_at_dropoff_time?:timestamptz,
	actual_arrival_at_pickup_time?:timestamptz,
	actual_delivered_time?:timestamptz,
	actual_package_ready_time?:timestamptz,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	estimated_arrival_at_dropoff_time?:timestamptz,
	estimated_arrival_at_pickup_time?:timestamptz,
	estimated_package_ready_time?:timestamptz,
	order_time?:timestamptz,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	status?:string,
	trip_distance?:number,
	trip_duration?:number
}

/** aggregate sum on columns */
export type delivery_order_public_sum_fields = {
	__typename?: "delivery_order_public_sum_fields",
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	trip_distance?:number,
	trip_duration?:number
}

export type delivery_order_public_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:delivery_order_public_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:delivery_order_public_set_input,
	where:delivery_order_public_bool_exp
}

/** aggregate var_pop on columns */
export type delivery_order_public_var_pop_fields = {
	__typename?: "delivery_order_public_var_pop_fields",
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	trip_distance?:number,
	trip_duration?:number
}

/** aggregate var_samp on columns */
export type delivery_order_public_var_samp_fields = {
	__typename?: "delivery_order_public_var_samp_fields",
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	trip_distance?:number,
	trip_duration?:number
}

/** aggregate variance on columns */
export type delivery_order_public_variance_fields = {
	__typename?: "delivery_order_public_variance_fields",
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	trip_distance?:number,
	trip_duration?:number
}

/** select columns of table "delivery_order" */
export enum delivery_order_select_column {
	actual_arrival_at_dropoff_time = "actual_arrival_at_dropoff_time",
	actual_arrival_at_pickup_time = "actual_arrival_at_pickup_time",
	actual_delivered_time = "actual_delivered_time",
	actual_package_ready_time = "actual_package_ready_time",
	cancellation_time = "cancellation_time",
	chat_with_customer_id = "chat_with_customer_id",
	chat_with_service_provider_id = "chat_with_service_provider_id",
	current_gps = "current_gps",
	customer_id = "customer_id",
	customer_review_by_driver_id = "customer_review_by_driver_id",
	deliverer_app_type_id = "deliverer_app_type_id",
	deliverer_id = "deliverer_id",
	delivery_cost = "delivery_cost",
	driver_review_by_customer_id = "driver_review_by_customer_id",
	driver_review_by_service_provider_id = "driver_review_by_service_provider_id",
	dropoff_address = "dropoff_address",
	dropoff_gps = "dropoff_gps",
	estimated_arrival_at_dropoff_time = "estimated_arrival_at_dropoff_time",
	estimated_arrival_at_pickup_time = "estimated_arrival_at_pickup_time",
	estimated_package_ready_time = "estimated_package_ready_time",
	id = "id",
	order_time = "order_time",
	package_cost = "package_cost",
	payment_type = "payment_type",
	pickup_address = "pickup_address",
	pickup_gps = "pickup_gps",
	service_provider_id = "service_provider_id",
	service_provider_review_by_driver_id = "service_provider_review_by_driver_id",
	service_provider_type = "service_provider_type",
	status = "status",
	stripe_payment_id = "stripe_payment_id",
	trip_distance = "trip_distance",
	trip_duration = "trip_duration",
	trip_polyline = "trip_polyline"
}

/** input type for updating data in table "delivery_order" */
export type delivery_order_set_input = {
		actual_arrival_at_dropoff_time?:timestamptz,
	actual_arrival_at_pickup_time?:timestamptz,
	actual_delivered_time?:timestamptz,
	actual_package_ready_time?:timestamptz,
	cancellation_time?:timestamptz,
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	current_gps?:geography,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	/** restaurant, delivery */
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	delivery_cost?:money,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	dropoff_address?:string,
	dropoff_gps?:geography,
	estimated_arrival_at_dropoff_time?:timestamptz,
	estimated_arrival_at_pickup_time?:timestamptz,
	estimated_package_ready_time?:timestamptz,
	id?:number,
	order_time?:timestamptz,
	package_cost?:money,
	payment_type?:string,
	pickup_address?:string,
	pickup_gps?:geography,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number,
	trip_polyline?:string
}

/** aggregate stddev on columns */
export type delivery_order_stddev_fields = {
	__typename?: "delivery_order_stddev_fields",
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	delivery_cost?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	id?:number,
	package_cost?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number
}

/** order by stddev() on columns of table "delivery_order" */
export type delivery_order_stddev_order_by = {
		chat_with_customer_id?:order_by,
	chat_with_service_provider_id?:order_by,
	customer_id?:order_by,
	customer_review_by_driver_id?:order_by,
	deliverer_id?:order_by,
	delivery_cost?:order_by,
	driver_review_by_customer_id?:order_by,
	driver_review_by_service_provider_id?:order_by,
	id?:order_by,
	package_cost?:order_by,
	service_provider_id?:order_by,
	service_provider_review_by_driver_id?:order_by,
	stripe_payment_id?:order_by,
	/** in meters */
	trip_distance?:order_by,
	/** in seconds */
	trip_duration?:order_by
}

/** aggregate stddev_pop on columns */
export type delivery_order_stddev_pop_fields = {
	__typename?: "delivery_order_stddev_pop_fields",
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	delivery_cost?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	id?:number,
	package_cost?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number
}

/** order by stddev_pop() on columns of table "delivery_order" */
export type delivery_order_stddev_pop_order_by = {
		chat_with_customer_id?:order_by,
	chat_with_service_provider_id?:order_by,
	customer_id?:order_by,
	customer_review_by_driver_id?:order_by,
	deliverer_id?:order_by,
	delivery_cost?:order_by,
	driver_review_by_customer_id?:order_by,
	driver_review_by_service_provider_id?:order_by,
	id?:order_by,
	package_cost?:order_by,
	service_provider_id?:order_by,
	service_provider_review_by_driver_id?:order_by,
	stripe_payment_id?:order_by,
	/** in meters */
	trip_distance?:order_by,
	/** in seconds */
	trip_duration?:order_by
}

/** aggregate stddev_samp on columns */
export type delivery_order_stddev_samp_fields = {
	__typename?: "delivery_order_stddev_samp_fields",
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	delivery_cost?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	id?:number,
	package_cost?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number
}

/** order by stddev_samp() on columns of table "delivery_order" */
export type delivery_order_stddev_samp_order_by = {
		chat_with_customer_id?:order_by,
	chat_with_service_provider_id?:order_by,
	customer_id?:order_by,
	customer_review_by_driver_id?:order_by,
	deliverer_id?:order_by,
	delivery_cost?:order_by,
	driver_review_by_customer_id?:order_by,
	driver_review_by_service_provider_id?:order_by,
	id?:order_by,
	package_cost?:order_by,
	service_provider_id?:order_by,
	service_provider_review_by_driver_id?:order_by,
	stripe_payment_id?:order_by,
	/** in meters */
	trip_distance?:order_by,
	/** in seconds */
	trip_duration?:order_by
}

/** Streaming cursor of the table "delivery_order" */
export type delivery_order_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:delivery_order_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type delivery_order_stream_cursor_value_input = {
		actual_arrival_at_dropoff_time?:timestamptz,
	actual_arrival_at_pickup_time?:timestamptz,
	actual_delivered_time?:timestamptz,
	actual_package_ready_time?:timestamptz,
	cancellation_time?:timestamptz,
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	current_gps?:geography,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	/** restaurant, delivery */
	deliverer_app_type_id?:string,
	deliverer_id?:number,
	delivery_cost?:money,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	dropoff_address?:string,
	dropoff_gps?:geography,
	estimated_arrival_at_dropoff_time?:timestamptz,
	estimated_arrival_at_pickup_time?:timestamptz,
	estimated_package_ready_time?:timestamptz,
	id?:number,
	order_time?:timestamptz,
	package_cost?:money,
	payment_type?:string,
	pickup_address?:string,
	pickup_gps?:geography,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	service_provider_type?:string,
	/** orderReceived, packageReady, atPickup, onTheWayToDropoff, atDropoff,
delivered, cancelledByCustomer, cancelledByDeliverer,
cancelledByServiceProvider */
	status?:string,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number,
	trip_polyline?:string
}

/** aggregate sum on columns */
export type delivery_order_sum_fields = {
	__typename?: "delivery_order_sum_fields",
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	delivery_cost?:money,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	id?:number,
	package_cost?:money,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number
}

/** order by sum() on columns of table "delivery_order" */
export type delivery_order_sum_order_by = {
		chat_with_customer_id?:order_by,
	chat_with_service_provider_id?:order_by,
	customer_id?:order_by,
	customer_review_by_driver_id?:order_by,
	deliverer_id?:order_by,
	delivery_cost?:order_by,
	driver_review_by_customer_id?:order_by,
	driver_review_by_service_provider_id?:order_by,
	id?:order_by,
	package_cost?:order_by,
	service_provider_id?:order_by,
	service_provider_review_by_driver_id?:order_by,
	stripe_payment_id?:order_by,
	/** in meters */
	trip_distance?:order_by,
	/** in seconds */
	trip_duration?:order_by
}

/** update columns of table "delivery_order" */
export enum delivery_order_update_column {
	actual_arrival_at_dropoff_time = "actual_arrival_at_dropoff_time",
	actual_arrival_at_pickup_time = "actual_arrival_at_pickup_time",
	actual_delivered_time = "actual_delivered_time",
	actual_package_ready_time = "actual_package_ready_time",
	cancellation_time = "cancellation_time",
	chat_with_customer_id = "chat_with_customer_id",
	chat_with_service_provider_id = "chat_with_service_provider_id",
	current_gps = "current_gps",
	customer_id = "customer_id",
	customer_review_by_driver_id = "customer_review_by_driver_id",
	deliverer_app_type_id = "deliverer_app_type_id",
	deliverer_id = "deliverer_id",
	delivery_cost = "delivery_cost",
	driver_review_by_customer_id = "driver_review_by_customer_id",
	driver_review_by_service_provider_id = "driver_review_by_service_provider_id",
	dropoff_address = "dropoff_address",
	dropoff_gps = "dropoff_gps",
	estimated_arrival_at_dropoff_time = "estimated_arrival_at_dropoff_time",
	estimated_arrival_at_pickup_time = "estimated_arrival_at_pickup_time",
	estimated_package_ready_time = "estimated_package_ready_time",
	id = "id",
	order_time = "order_time",
	package_cost = "package_cost",
	payment_type = "payment_type",
	pickup_address = "pickup_address",
	pickup_gps = "pickup_gps",
	service_provider_id = "service_provider_id",
	service_provider_review_by_driver_id = "service_provider_review_by_driver_id",
	service_provider_type = "service_provider_type",
	status = "status",
	stripe_payment_id = "stripe_payment_id",
	trip_distance = "trip_distance",
	trip_duration = "trip_duration",
	trip_polyline = "trip_polyline"
}

export type delivery_order_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:delivery_order_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:delivery_order_set_input,
	where:delivery_order_bool_exp
}

/** aggregate var_pop on columns */
export type delivery_order_var_pop_fields = {
	__typename?: "delivery_order_var_pop_fields",
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	delivery_cost?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	id?:number,
	package_cost?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number
}

/** order by var_pop() on columns of table "delivery_order" */
export type delivery_order_var_pop_order_by = {
		chat_with_customer_id?:order_by,
	chat_with_service_provider_id?:order_by,
	customer_id?:order_by,
	customer_review_by_driver_id?:order_by,
	deliverer_id?:order_by,
	delivery_cost?:order_by,
	driver_review_by_customer_id?:order_by,
	driver_review_by_service_provider_id?:order_by,
	id?:order_by,
	package_cost?:order_by,
	service_provider_id?:order_by,
	service_provider_review_by_driver_id?:order_by,
	stripe_payment_id?:order_by,
	/** in meters */
	trip_distance?:order_by,
	/** in seconds */
	trip_duration?:order_by
}

/** aggregate var_samp on columns */
export type delivery_order_var_samp_fields = {
	__typename?: "delivery_order_var_samp_fields",
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	delivery_cost?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	id?:number,
	package_cost?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number
}

/** order by var_samp() on columns of table "delivery_order" */
export type delivery_order_var_samp_order_by = {
		chat_with_customer_id?:order_by,
	chat_with_service_provider_id?:order_by,
	customer_id?:order_by,
	customer_review_by_driver_id?:order_by,
	deliverer_id?:order_by,
	delivery_cost?:order_by,
	driver_review_by_customer_id?:order_by,
	driver_review_by_service_provider_id?:order_by,
	id?:order_by,
	package_cost?:order_by,
	service_provider_id?:order_by,
	service_provider_review_by_driver_id?:order_by,
	stripe_payment_id?:order_by,
	/** in meters */
	trip_distance?:order_by,
	/** in seconds */
	trip_duration?:order_by
}

/** aggregate variance on columns */
export type delivery_order_variance_fields = {
	__typename?: "delivery_order_variance_fields",
	chat_with_customer_id?:number,
	chat_with_service_provider_id?:number,
	customer_id?:number,
	customer_review_by_driver_id?:number,
	deliverer_id?:number,
	delivery_cost?:number,
	driver_review_by_customer_id?:number,
	driver_review_by_service_provider_id?:number,
	id?:number,
	package_cost?:number,
	service_provider_id?:number,
	service_provider_review_by_driver_id?:number,
	stripe_payment_id?:number,
	/** in meters */
	trip_distance?:number,
	/** in seconds */
	trip_duration?:number
}

/** order by variance() on columns of table "delivery_order" */
export type delivery_order_variance_order_by = {
		chat_with_customer_id?:order_by,
	chat_with_service_provider_id?:order_by,
	customer_id?:order_by,
	customer_review_by_driver_id?:order_by,
	deliverer_id?:order_by,
	delivery_cost?:order_by,
	driver_review_by_customer_id?:order_by,
	driver_review_by_service_provider_id?:order_by,
	id?:order_by,
	package_cost?:order_by,
	service_provider_id?:order_by,
	service_provider_review_by_driver_id?:order_by,
	stripe_payment_id?:order_by,
	/** in meters */
	trip_distance?:order_by,
	/** in seconds */
	trip_duration?:order_by
}

export type float8 = any

/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
export type float8_comparison_exp = {
		_eq?:float8,
	_gt?:float8,
	_gte?:float8,
	_in?:float8[],
	_is_null?:boolean,
	_lt?:float8,
	_lte?:float8,
	_neq?:float8,
	_nin?:float8[]
}

export type geography = any

export type geography_cast_exp = {
		geometry?:geometry_comparison_exp
}

/** Boolean expression to compare columns of type "geography". All fields are combined with logical 'AND'. */
export type geography_comparison_exp = {
		_cast?:geography_cast_exp,
	_eq?:geography,
	_gt?:geography,
	_gte?:geography,
	_in?:geography[],
	_is_null?:boolean,
	_lt?:geography,
	_lte?:geography,
	_neq?:geography,
	_nin?:geography[],
	/** is the column within a given distance from the given geography value */
	_st_d_within?:st_d_within_geography_input,
	/** does the column spatially intersect the given geography value */
	_st_intersects?:geography
}

export type geometry = any

export type geometry_cast_exp = {
		geography?:geography_comparison_exp
}

/** Boolean expression to compare columns of type "geometry". All fields are combined with logical 'AND'. */
export type geometry_comparison_exp = {
		_cast?:geometry_cast_exp,
	_eq?:geometry,
	_gt?:geometry,
	_gte?:geometry,
	_in?:geometry[],
	_is_null?:boolean,
	_lt?:geometry,
	_lte?:geometry,
	_neq?:geometry,
	_nin?:geometry[],
	/** is the column within a given 3D distance from the given geometry value */
	_st_3d_d_within?:st_d_within_input,
	/** does the column spatially intersect the given geometry value in 3D */
	_st_3d_intersects?:geometry,
	/** does the column contain the given geometry value */
	_st_contains?:geometry,
	/** does the column cross the given geometry value */
	_st_crosses?:geometry,
	/** is the column within a given distance from the given geometry value */
	_st_d_within?:st_d_within_input,
	/** is the column equal to given geometry value (directionality is ignored) */
	_st_equals?:geometry,
	/** does the column spatially intersect the given geometry value */
	_st_intersects?:geometry,
	/** does the column 'spatially overlap' (intersect but not completely contain) the given geometry value */
	_st_overlaps?:geometry,
	/** does the column have atleast one point in common with the given geometry value */
	_st_touches?:geometry,
	/** is the column contained in the given geometry value */
	_st_within?:geometry
}

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_comparison_exp = {
		_eq?:number,
	_gt?:number,
	_gte?:number,
	_in?:number[],
	_is_null?:boolean,
	_lt?:number,
	_lte?:number,
	_neq?:number,
	_nin?:number[]
}

export type json = any

/** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
export type json_comparison_exp = {
		_eq?:json,
	_gt?:json,
	_gte?:json,
	_in?:json[],
	_is_null?:boolean,
	_lt?:json,
	_lte?:json,
	_neq?:json,
	_nin?:json[]
}

export type jsonb = any

export type jsonb_cast_exp = {
		String?:String_comparison_exp
}

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type jsonb_comparison_exp = {
		_cast?:jsonb_cast_exp,
	/** is the column contained in the given json value */
	_contained_in?:jsonb,
	/** does the column contain the given json value at the top level */
	_contains?:jsonb,
	_eq?:jsonb,
	_gt?:jsonb,
	_gte?:jsonb,
	/** does the string exist as a top-level key in the column */
	_has_key?:string,
	/** do all of these strings exist as top-level keys in the column */
	_has_keys_all?:string[],
	/** do any of these strings exist as top-level keys in the column */
	_has_keys_any?:string[],
	_in?:jsonb[],
	_is_null?:boolean,
	_lt?:jsonb,
	_lte?:jsonb,
	_neq?:jsonb,
	_nin?:jsonb[]
}

/** columns and relationships of "mez_admin" */
export type mez_admin = {
	__typename?: "mez_admin",
	/** A computed field, executes function "mez_admin_notification_token" */
	notification_token?:string,
	/** An object relationship */
	user?:user,
	user_id:number,
	version?:string
}

/** aggregated selection of "mez_admin" */
export type mez_admin_aggregate = {
	__typename?: "mez_admin_aggregate",
	aggregate?:mez_admin_aggregate_fields,
	nodes:mez_admin[]
}

/** aggregate fields of "mez_admin" */
export type mez_admin_aggregate_fields = {
	__typename?: "mez_admin_aggregate_fields",
	avg?:mez_admin_avg_fields,
	count:number,
	max?:mez_admin_max_fields,
	min?:mez_admin_min_fields,
	stddev?:mez_admin_stddev_fields,
	stddev_pop?:mez_admin_stddev_pop_fields,
	stddev_samp?:mez_admin_stddev_samp_fields,
	sum?:mez_admin_sum_fields,
	var_pop?:mez_admin_var_pop_fields,
	var_samp?:mez_admin_var_samp_fields,
	variance?:mez_admin_variance_fields
}

/** aggregate avg on columns */
export type mez_admin_avg_fields = {
	__typename?: "mez_admin_avg_fields",
	user_id?:number
}

/** Boolean expression to filter rows from the table "mez_admin". All fields are combined with a logical 'AND'. */
export type mez_admin_bool_exp = {
		_and?:mez_admin_bool_exp[],
	_not?:mez_admin_bool_exp,
	_or?:mez_admin_bool_exp[],
	notification_token?:String_comparison_exp,
	user?:user_bool_exp,
	user_id?:Int_comparison_exp,
	version?:String_comparison_exp
}

/** unique or primary key constraints on table "mez_admin" */
export enum mez_admin_constraint {
	mez_admin_pkey = "mez_admin_pkey"
}

/** input type for incrementing numeric columns in table "mez_admin" */
export type mez_admin_inc_input = {
		user_id?:number
}

/** input type for inserting data into table "mez_admin" */
export type mez_admin_insert_input = {
		user?:user_obj_rel_insert_input,
	user_id?:number,
	version?:string
}

/** aggregate max on columns */
export type mez_admin_max_fields = {
	__typename?: "mez_admin_max_fields",
	user_id?:number,
	version?:string
}

/** aggregate min on columns */
export type mez_admin_min_fields = {
	__typename?: "mez_admin_min_fields",
	user_id?:number,
	version?:string
}

/** response of any mutation on the table "mez_admin" */
export type mez_admin_mutation_response = {
	__typename?: "mez_admin_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:mez_admin[]
}

/** on_conflict condition type for table "mez_admin" */
export type mez_admin_on_conflict = {
		constraint:mez_admin_constraint,
	update_columns:mez_admin_update_column[],
	where?:mez_admin_bool_exp
}

/** Ordering options when selecting data from "mez_admin". */
export type mez_admin_order_by = {
		notification_token?:order_by,
	user?:user_order_by,
	user_id?:order_by,
	version?:order_by
}

/** primary key columns input for table: mez_admin */
export type mez_admin_pk_columns_input = {
		user_id:number
}

/** select columns of table "mez_admin" */
export enum mez_admin_select_column {
	user_id = "user_id",
	version = "version"
}

/** input type for updating data in table "mez_admin" */
export type mez_admin_set_input = {
		user_id?:number,
	version?:string
}

/** aggregate stddev on columns */
export type mez_admin_stddev_fields = {
	__typename?: "mez_admin_stddev_fields",
	user_id?:number
}

/** aggregate stddev_pop on columns */
export type mez_admin_stddev_pop_fields = {
	__typename?: "mez_admin_stddev_pop_fields",
	user_id?:number
}

/** aggregate stddev_samp on columns */
export type mez_admin_stddev_samp_fields = {
	__typename?: "mez_admin_stddev_samp_fields",
	user_id?:number
}

/** Streaming cursor of the table "mez_admin" */
export type mez_admin_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:mez_admin_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type mez_admin_stream_cursor_value_input = {
		user_id?:number,
	version?:string
}

/** aggregate sum on columns */
export type mez_admin_sum_fields = {
	__typename?: "mez_admin_sum_fields",
	user_id?:number
}

/** update columns of table "mez_admin" */
export enum mez_admin_update_column {
	user_id = "user_id",
	version = "version"
}

export type mez_admin_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:mez_admin_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:mez_admin_set_input,
	where:mez_admin_bool_exp
}

/** aggregate var_pop on columns */
export type mez_admin_var_pop_fields = {
	__typename?: "mez_admin_var_pop_fields",
	user_id?:number
}

/** aggregate var_samp on columns */
export type mez_admin_var_samp_fields = {
	__typename?: "mez_admin_var_samp_fields",
	user_id?:number
}

/** aggregate variance on columns */
export type mez_admin_variance_fields = {
	__typename?: "mez_admin_variance_fields",
	user_id?:number
}

export type money = any

/** Boolean expression to compare columns of type "money". All fields are combined with logical 'AND'. */
export type money_comparison_exp = {
		_eq?:money,
	_gt?:money,
	_gte?:money,
	_in?:money[],
	_is_null?:boolean,
	_lt?:money,
	_lte?:money,
	_neq?:money,
	_nin?:money[]
}

/** mutation root */
export type mutation_root = {
	__typename?: "mutation_root",
	/** delete data from the table: "chat" */
	delete_chat?:chat_mutation_response,
	/** delete single row from the table: "chat" */
	delete_chat_by_pk?:chat,
	/** delete data from the table: "chat_participant" */
	delete_chat_participant?:chat_participant_mutation_response,
	/** delete single row from the table: "chat_participant" */
	delete_chat_participant_by_pk?:chat_participant,
	/** delete data from the table: "customer" */
	delete_customer?:customer_mutation_response,
	/** delete single row from the table: "customer" */
	delete_customer_by_pk?:customer,
	/** delete data from the table: "deliverer" */
	delete_deliverer?:deliverer_mutation_response,
	/** delete single row from the table: "deliverer" */
	delete_deliverer_by_pk?:deliverer,
	/** delete data from the table: "delivery_order" */
	delete_delivery_order?:delivery_order_mutation_response,
	/** delete single row from the table: "delivery_order" */
	delete_delivery_order_by_pk?:delivery_order,
	/** delete data from the table: "delivery_order_public" */
	delete_delivery_order_public?:delivery_order_public_mutation_response,
	/** delete data from the table: "mez_admin" */
	delete_mez_admin?:mez_admin_mutation_response,
	/** delete single row from the table: "mez_admin" */
	delete_mez_admin_by_pk?:mez_admin,
	/** delete data from the table: "notification_info" */
	delete_notification_info?:notification_info_mutation_response,
	/** delete single row from the table: "notification_info" */
	delete_notification_info_by_pk?:notification_info,
	/** delete data from the table: "restaurant" */
	delete_restaurant?:restaurant_mutation_response,
	/** delete single row from the table: "restaurant" */
	delete_restaurant_by_pk?:restaurant,
	/** delete data from the table: "restaurant_cart" */
	delete_restaurant_cart?:restaurant_cart_mutation_response,
	/** delete single row from the table: "restaurant_cart" */
	delete_restaurant_cart_by_pk?:restaurant_cart,
	/** delete data from the table: "restaurant_cart_item" */
	delete_restaurant_cart_item?:restaurant_cart_item_mutation_response,
	/** delete single row from the table: "restaurant_cart_item" */
	delete_restaurant_cart_item_by_pk?:restaurant_cart_item,
	/** delete data from the table: "restaurant_category" */
	delete_restaurant_category?:restaurant_category_mutation_response,
	/** delete single row from the table: "restaurant_category" */
	delete_restaurant_category_by_pk?:restaurant_category,
	/** delete data from the table: "restaurant_choice" */
	delete_restaurant_choice?:restaurant_choice_mutation_response,
	/** delete single row from the table: "restaurant_choice" */
	delete_restaurant_choice_by_pk?:restaurant_choice,
	/** delete data from the table: "restaurant_item" */
	delete_restaurant_item?:restaurant_item_mutation_response,
	/** delete single row from the table: "restaurant_item" */
	delete_restaurant_item_by_pk?:restaurant_item,
	/** delete data from the table: "restaurant_item_option_map" */
	delete_restaurant_item_option_map?:restaurant_item_option_map_mutation_response,
	/** delete single row from the table: "restaurant_item_option_map" */
	delete_restaurant_item_option_map_by_pk?:restaurant_item_option_map,
	/** delete data from the table: "restaurant_operator" */
	delete_restaurant_operator?:restaurant_operator_mutation_response,
	/** delete single row from the table: "restaurant_operator" */
	delete_restaurant_operator_by_pk?:restaurant_operator,
	/** delete data from the table: "restaurant_option" */
	delete_restaurant_option?:restaurant_option_mutation_response,
	/** delete single row from the table: "restaurant_option" */
	delete_restaurant_option_by_pk?:restaurant_option,
	/** delete data from the table: "restaurant_option_choice_map" */
	delete_restaurant_option_choice_map?:restaurant_option_choice_map_mutation_response,
	/** delete single row from the table: "restaurant_option_choice_map" */
	delete_restaurant_option_choice_map_by_pk?:restaurant_option_choice_map,
	/** delete data from the table: "restaurant_order" */
	delete_restaurant_order?:restaurant_order_mutation_response,
	/** delete single row from the table: "restaurant_order" */
	delete_restaurant_order_by_pk?:restaurant_order,
	/** delete data from the table: "restaurant_order_item" */
	delete_restaurant_order_item?:restaurant_order_item_mutation_response,
	/** delete single row from the table: "restaurant_order_item" */
	delete_restaurant_order_item_by_pk?:restaurant_order_item,
	/** delete data from the table: "restaurant_order_public" */
	delete_restaurant_order_public?:restaurant_order_public_mutation_response,
	/** delete data from the table: "review" */
	delete_review?:review_mutation_response,
	/** delete single row from the table: "review" */
	delete_review_by_pk?:review,
	/** delete data from the table: "saved_location" */
	delete_saved_location?:saved_location_mutation_response,
	/** delete single row from the table: "saved_location" */
	delete_saved_location_by_pk?:saved_location,
	/** delete data from the table: "service_provider_payment_info" */
	delete_service_provider_payment_info?:service_provider_payment_info_mutation_response,
	/** delete single row from the table: "service_provider_payment_info" */
	delete_service_provider_payment_info_by_pk?:service_provider_payment_info,
	/** delete data from the table: "stripe_info" */
	delete_stripe_info?:stripe_info_mutation_response,
	/** delete single row from the table: "stripe_info" */
	delete_stripe_info_by_pk?:stripe_info,
	/** delete data from the table: "topology.app_type" */
	delete_topology_app_type?:topology_app_type_mutation_response,
	/** delete single row from the table: "topology.app_type" */
	delete_topology_app_type_by_pk?:topology_app_type,
	/** delete data from the table: "topology.language" */
	delete_topology_language?:topology_language_mutation_response,
	/** delete single row from the table: "topology.language" */
	delete_topology_language_by_pk?:topology_language,
	/** delete data from the table: "translation" */
	delete_translation?:translation_mutation_response,
	/** delete single row from the table: "translation" */
	delete_translation_by_pk?:translation,
	/** delete data from the table: "translation_value" */
	delete_translation_value?:translation_value_mutation_response,
	/** delete single row from the table: "translation_value" */
	delete_translation_value_by_pk?:translation_value,
	/** delete data from the table: "user" */
	delete_user?:user_mutation_response,
	/** delete single row from the table: "user" */
	delete_user_by_pk?:user,
	/** insert data into the table: "chat" */
	insert_chat?:chat_mutation_response,
	/** insert a single row into the table: "chat" */
	insert_chat_one?:chat,
	/** insert data into the table: "chat_participant" */
	insert_chat_participant?:chat_participant_mutation_response,
	/** insert a single row into the table: "chat_participant" */
	insert_chat_participant_one?:chat_participant,
	/** insert data into the table: "customer" */
	insert_customer?:customer_mutation_response,
	/** insert a single row into the table: "customer" */
	insert_customer_one?:customer,
	/** insert data into the table: "deliverer" */
	insert_deliverer?:deliverer_mutation_response,
	/** insert a single row into the table: "deliverer" */
	insert_deliverer_one?:deliverer,
	/** insert data into the table: "delivery_order" */
	insert_delivery_order?:delivery_order_mutation_response,
	/** insert a single row into the table: "delivery_order" */
	insert_delivery_order_one?:delivery_order,
	/** insert data into the table: "delivery_order_public" */
	insert_delivery_order_public?:delivery_order_public_mutation_response,
	/** insert a single row into the table: "delivery_order_public" */
	insert_delivery_order_public_one?:delivery_order_public,
	/** insert data into the table: "mez_admin" */
	insert_mez_admin?:mez_admin_mutation_response,
	/** insert a single row into the table: "mez_admin" */
	insert_mez_admin_one?:mez_admin,
	/** insert data into the table: "notification_info" */
	insert_notification_info?:notification_info_mutation_response,
	/** insert a single row into the table: "notification_info" */
	insert_notification_info_one?:notification_info,
	/** insert data into the table: "restaurant" */
	insert_restaurant?:restaurant_mutation_response,
	/** insert data into the table: "restaurant_cart" */
	insert_restaurant_cart?:restaurant_cart_mutation_response,
	/** insert data into the table: "restaurant_cart_item" */
	insert_restaurant_cart_item?:restaurant_cart_item_mutation_response,
	/** insert a single row into the table: "restaurant_cart_item" */
	insert_restaurant_cart_item_one?:restaurant_cart_item,
	/** insert a single row into the table: "restaurant_cart" */
	insert_restaurant_cart_one?:restaurant_cart,
	/** insert data into the table: "restaurant_category" */
	insert_restaurant_category?:restaurant_category_mutation_response,
	/** insert a single row into the table: "restaurant_category" */
	insert_restaurant_category_one?:restaurant_category,
	/** insert data into the table: "restaurant_choice" */
	insert_restaurant_choice?:restaurant_choice_mutation_response,
	/** insert a single row into the table: "restaurant_choice" */
	insert_restaurant_choice_one?:restaurant_choice,
	/** insert data into the table: "restaurant_item" */
	insert_restaurant_item?:restaurant_item_mutation_response,
	/** insert a single row into the table: "restaurant_item" */
	insert_restaurant_item_one?:restaurant_item,
	/** insert data into the table: "restaurant_item_option_map" */
	insert_restaurant_item_option_map?:restaurant_item_option_map_mutation_response,
	/** insert a single row into the table: "restaurant_item_option_map" */
	insert_restaurant_item_option_map_one?:restaurant_item_option_map,
	/** insert a single row into the table: "restaurant" */
	insert_restaurant_one?:restaurant,
	/** insert data into the table: "restaurant_operator" */
	insert_restaurant_operator?:restaurant_operator_mutation_response,
	/** insert a single row into the table: "restaurant_operator" */
	insert_restaurant_operator_one?:restaurant_operator,
	/** insert data into the table: "restaurant_option" */
	insert_restaurant_option?:restaurant_option_mutation_response,
	/** insert data into the table: "restaurant_option_choice_map" */
	insert_restaurant_option_choice_map?:restaurant_option_choice_map_mutation_response,
	/** insert a single row into the table: "restaurant_option_choice_map" */
	insert_restaurant_option_choice_map_one?:restaurant_option_choice_map,
	/** insert a single row into the table: "restaurant_option" */
	insert_restaurant_option_one?:restaurant_option,
	/** insert data into the table: "restaurant_order" */
	insert_restaurant_order?:restaurant_order_mutation_response,
	/** insert data into the table: "restaurant_order_item" */
	insert_restaurant_order_item?:restaurant_order_item_mutation_response,
	/** insert a single row into the table: "restaurant_order_item" */
	insert_restaurant_order_item_one?:restaurant_order_item,
	/** insert a single row into the table: "restaurant_order" */
	insert_restaurant_order_one?:restaurant_order,
	/** insert data into the table: "restaurant_order_public" */
	insert_restaurant_order_public?:restaurant_order_public_mutation_response,
	/** insert a single row into the table: "restaurant_order_public" */
	insert_restaurant_order_public_one?:restaurant_order_public,
	/** insert data into the table: "review" */
	insert_review?:review_mutation_response,
	/** insert a single row into the table: "review" */
	insert_review_one?:review,
	/** insert data into the table: "saved_location" */
	insert_saved_location?:saved_location_mutation_response,
	/** insert a single row into the table: "saved_location" */
	insert_saved_location_one?:saved_location,
	/** insert data into the table: "service_provider_payment_info" */
	insert_service_provider_payment_info?:service_provider_payment_info_mutation_response,
	/** insert a single row into the table: "service_provider_payment_info" */
	insert_service_provider_payment_info_one?:service_provider_payment_info,
	/** insert data into the table: "stripe_info" */
	insert_stripe_info?:stripe_info_mutation_response,
	/** insert a single row into the table: "stripe_info" */
	insert_stripe_info_one?:stripe_info,
	/** insert data into the table: "topology.app_type" */
	insert_topology_app_type?:topology_app_type_mutation_response,
	/** insert a single row into the table: "topology.app_type" */
	insert_topology_app_type_one?:topology_app_type,
	/** insert data into the table: "topology.language" */
	insert_topology_language?:topology_language_mutation_response,
	/** insert a single row into the table: "topology.language" */
	insert_topology_language_one?:topology_language,
	/** insert data into the table: "translation" */
	insert_translation?:translation_mutation_response,
	/** insert a single row into the table: "translation" */
	insert_translation_one?:translation,
	/** insert data into the table: "translation_value" */
	insert_translation_value?:translation_value_mutation_response,
	/** insert a single row into the table: "translation_value" */
	insert_translation_value_one?:translation_value,
	/** insert data into the table: "user" */
	insert_user?:user_mutation_response,
	/** insert a single row into the table: "user" */
	insert_user_one?:user,
	/** update data of the table: "chat" */
	update_chat?:chat_mutation_response,
	/** update single row of the table: "chat" */
	update_chat_by_pk?:chat,
	/** update multiples rows of table: "chat" */
	update_chat_many?:(chat_mutation_response | undefined)[],
	/** update data of the table: "chat_participant" */
	update_chat_participant?:chat_participant_mutation_response,
	/** update single row of the table: "chat_participant" */
	update_chat_participant_by_pk?:chat_participant,
	/** update multiples rows of table: "chat_participant" */
	update_chat_participant_many?:(chat_participant_mutation_response | undefined)[],
	/** update data of the table: "customer" */
	update_customer?:customer_mutation_response,
	/** update single row of the table: "customer" */
	update_customer_by_pk?:customer,
	/** update multiples rows of table: "customer" */
	update_customer_many?:(customer_mutation_response | undefined)[],
	/** update data of the table: "deliverer" */
	update_deliverer?:deliverer_mutation_response,
	/** update single row of the table: "deliverer" */
	update_deliverer_by_pk?:deliverer,
	/** update multiples rows of table: "deliverer" */
	update_deliverer_many?:(deliverer_mutation_response | undefined)[],
	/** update data of the table: "delivery_order" */
	update_delivery_order?:delivery_order_mutation_response,
	/** update single row of the table: "delivery_order" */
	update_delivery_order_by_pk?:delivery_order,
	/** update multiples rows of table: "delivery_order" */
	update_delivery_order_many?:(delivery_order_mutation_response | undefined)[],
	/** update data of the table: "delivery_order_public" */
	update_delivery_order_public?:delivery_order_public_mutation_response,
	/** update multiples rows of table: "delivery_order_public" */
	update_delivery_order_public_many?:(delivery_order_public_mutation_response | undefined)[],
	/** update data of the table: "mez_admin" */
	update_mez_admin?:mez_admin_mutation_response,
	/** update single row of the table: "mez_admin" */
	update_mez_admin_by_pk?:mez_admin,
	/** update multiples rows of table: "mez_admin" */
	update_mez_admin_many?:(mez_admin_mutation_response | undefined)[],
	/** update data of the table: "notification_info" */
	update_notification_info?:notification_info_mutation_response,
	/** update single row of the table: "notification_info" */
	update_notification_info_by_pk?:notification_info,
	/** update multiples rows of table: "notification_info" */
	update_notification_info_many?:(notification_info_mutation_response | undefined)[],
	/** update data of the table: "restaurant" */
	update_restaurant?:restaurant_mutation_response,
	/** update single row of the table: "restaurant" */
	update_restaurant_by_pk?:restaurant,
	/** update data of the table: "restaurant_cart" */
	update_restaurant_cart?:restaurant_cart_mutation_response,
	/** update single row of the table: "restaurant_cart" */
	update_restaurant_cart_by_pk?:restaurant_cart,
	/** update data of the table: "restaurant_cart_item" */
	update_restaurant_cart_item?:restaurant_cart_item_mutation_response,
	/** update single row of the table: "restaurant_cart_item" */
	update_restaurant_cart_item_by_pk?:restaurant_cart_item,
	/** update multiples rows of table: "restaurant_cart_item" */
	update_restaurant_cart_item_many?:(restaurant_cart_item_mutation_response | undefined)[],
	/** update multiples rows of table: "restaurant_cart" */
	update_restaurant_cart_many?:(restaurant_cart_mutation_response | undefined)[],
	/** update data of the table: "restaurant_category" */
	update_restaurant_category?:restaurant_category_mutation_response,
	/** update single row of the table: "restaurant_category" */
	update_restaurant_category_by_pk?:restaurant_category,
	/** update multiples rows of table: "restaurant_category" */
	update_restaurant_category_many?:(restaurant_category_mutation_response | undefined)[],
	/** update data of the table: "restaurant_choice" */
	update_restaurant_choice?:restaurant_choice_mutation_response,
	/** update single row of the table: "restaurant_choice" */
	update_restaurant_choice_by_pk?:restaurant_choice,
	/** update multiples rows of table: "restaurant_choice" */
	update_restaurant_choice_many?:(restaurant_choice_mutation_response | undefined)[],
	/** update data of the table: "restaurant_item" */
	update_restaurant_item?:restaurant_item_mutation_response,
	/** update single row of the table: "restaurant_item" */
	update_restaurant_item_by_pk?:restaurant_item,
	/** update multiples rows of table: "restaurant_item" */
	update_restaurant_item_many?:(restaurant_item_mutation_response | undefined)[],
	/** update data of the table: "restaurant_item_option_map" */
	update_restaurant_item_option_map?:restaurant_item_option_map_mutation_response,
	/** update single row of the table: "restaurant_item_option_map" */
	update_restaurant_item_option_map_by_pk?:restaurant_item_option_map,
	/** update multiples rows of table: "restaurant_item_option_map" */
	update_restaurant_item_option_map_many?:(restaurant_item_option_map_mutation_response | undefined)[],
	/** update multiples rows of table: "restaurant" */
	update_restaurant_many?:(restaurant_mutation_response | undefined)[],
	/** update data of the table: "restaurant_operator" */
	update_restaurant_operator?:restaurant_operator_mutation_response,
	/** update single row of the table: "restaurant_operator" */
	update_restaurant_operator_by_pk?:restaurant_operator,
	/** update multiples rows of table: "restaurant_operator" */
	update_restaurant_operator_many?:(restaurant_operator_mutation_response | undefined)[],
	/** update data of the table: "restaurant_option" */
	update_restaurant_option?:restaurant_option_mutation_response,
	/** update single row of the table: "restaurant_option" */
	update_restaurant_option_by_pk?:restaurant_option,
	/** update data of the table: "restaurant_option_choice_map" */
	update_restaurant_option_choice_map?:restaurant_option_choice_map_mutation_response,
	/** update single row of the table: "restaurant_option_choice_map" */
	update_restaurant_option_choice_map_by_pk?:restaurant_option_choice_map,
	/** update multiples rows of table: "restaurant_option_choice_map" */
	update_restaurant_option_choice_map_many?:(restaurant_option_choice_map_mutation_response | undefined)[],
	/** update multiples rows of table: "restaurant_option" */
	update_restaurant_option_many?:(restaurant_option_mutation_response | undefined)[],
	/** update data of the table: "restaurant_order" */
	update_restaurant_order?:restaurant_order_mutation_response,
	/** update single row of the table: "restaurant_order" */
	update_restaurant_order_by_pk?:restaurant_order,
	/** update data of the table: "restaurant_order_item" */
	update_restaurant_order_item?:restaurant_order_item_mutation_response,
	/** update single row of the table: "restaurant_order_item" */
	update_restaurant_order_item_by_pk?:restaurant_order_item,
	/** update multiples rows of table: "restaurant_order_item" */
	update_restaurant_order_item_many?:(restaurant_order_item_mutation_response | undefined)[],
	/** update multiples rows of table: "restaurant_order" */
	update_restaurant_order_many?:(restaurant_order_mutation_response | undefined)[],
	/** update data of the table: "restaurant_order_public" */
	update_restaurant_order_public?:restaurant_order_public_mutation_response,
	/** update multiples rows of table: "restaurant_order_public" */
	update_restaurant_order_public_many?:(restaurant_order_public_mutation_response | undefined)[],
	/** update data of the table: "review" */
	update_review?:review_mutation_response,
	/** update single row of the table: "review" */
	update_review_by_pk?:review,
	/** update multiples rows of table: "review" */
	update_review_many?:(review_mutation_response | undefined)[],
	/** update data of the table: "saved_location" */
	update_saved_location?:saved_location_mutation_response,
	/** update single row of the table: "saved_location" */
	update_saved_location_by_pk?:saved_location,
	/** update multiples rows of table: "saved_location" */
	update_saved_location_many?:(saved_location_mutation_response | undefined)[],
	/** update data of the table: "service_provider_payment_info" */
	update_service_provider_payment_info?:service_provider_payment_info_mutation_response,
	/** update single row of the table: "service_provider_payment_info" */
	update_service_provider_payment_info_by_pk?:service_provider_payment_info,
	/** update multiples rows of table: "service_provider_payment_info" */
	update_service_provider_payment_info_many?:(service_provider_payment_info_mutation_response | undefined)[],
	/** update data of the table: "stripe_info" */
	update_stripe_info?:stripe_info_mutation_response,
	/** update single row of the table: "stripe_info" */
	update_stripe_info_by_pk?:stripe_info,
	/** update multiples rows of table: "stripe_info" */
	update_stripe_info_many?:(stripe_info_mutation_response | undefined)[],
	/** update data of the table: "topology.app_type" */
	update_topology_app_type?:topology_app_type_mutation_response,
	/** update single row of the table: "topology.app_type" */
	update_topology_app_type_by_pk?:topology_app_type,
	/** update multiples rows of table: "topology.app_type" */
	update_topology_app_type_many?:(topology_app_type_mutation_response | undefined)[],
	/** update data of the table: "topology.language" */
	update_topology_language?:topology_language_mutation_response,
	/** update single row of the table: "topology.language" */
	update_topology_language_by_pk?:topology_language,
	/** update multiples rows of table: "topology.language" */
	update_topology_language_many?:(topology_language_mutation_response | undefined)[],
	/** update data of the table: "translation" */
	update_translation?:translation_mutation_response,
	/** update single row of the table: "translation" */
	update_translation_by_pk?:translation,
	/** update multiples rows of table: "translation" */
	update_translation_many?:(translation_mutation_response | undefined)[],
	/** update data of the table: "translation_value" */
	update_translation_value?:translation_value_mutation_response,
	/** update single row of the table: "translation_value" */
	update_translation_value_by_pk?:translation_value,
	/** update multiples rows of table: "translation_value" */
	update_translation_value_many?:(translation_value_mutation_response | undefined)[],
	/** update data of the table: "user" */
	update_user?:user_mutation_response,
	/** update single row of the table: "user" */
	update_user_by_pk?:user,
	/** update multiples rows of table: "user" */
	update_user_many?:(user_mutation_response | undefined)[]
}

/** columns and relationships of "notification_info" */
export type notification_info = {
	__typename?: "notification_info",
	app_type_id:string,
	id:number,
	token:string,
	user_id:number
}

/** aggregated selection of "notification_info" */
export type notification_info_aggregate = {
	__typename?: "notification_info_aggregate",
	aggregate?:notification_info_aggregate_fields,
	nodes:notification_info[]
}

/** aggregate fields of "notification_info" */
export type notification_info_aggregate_fields = {
	__typename?: "notification_info_aggregate_fields",
	avg?:notification_info_avg_fields,
	count:number,
	max?:notification_info_max_fields,
	min?:notification_info_min_fields,
	stddev?:notification_info_stddev_fields,
	stddev_pop?:notification_info_stddev_pop_fields,
	stddev_samp?:notification_info_stddev_samp_fields,
	sum?:notification_info_sum_fields,
	var_pop?:notification_info_var_pop_fields,
	var_samp?:notification_info_var_samp_fields,
	variance?:notification_info_variance_fields
}

/** aggregate avg on columns */
export type notification_info_avg_fields = {
	__typename?: "notification_info_avg_fields",
	id?:number,
	user_id?:number
}

/** Boolean expression to filter rows from the table "notification_info". All fields are combined with a logical 'AND'. */
export type notification_info_bool_exp = {
		_and?:notification_info_bool_exp[],
	_not?:notification_info_bool_exp,
	_or?:notification_info_bool_exp[],
	app_type_id?:String_comparison_exp,
	id?:Int_comparison_exp,
	token?:String_comparison_exp,
	user_id?:Int_comparison_exp
}

/** unique or primary key constraints on table "notification_info" */
export enum notification_info_constraint {
	notification_info_app_type_id_user_id_key = "notification_info_app_type_id_user_id_key",
	notification_info_pkey = "notification_info_pkey",
	notification_info_user_id_app_type_id_key = "notification_info_user_id_app_type_id_key"
}

/** input type for incrementing numeric columns in table "notification_info" */
export type notification_info_inc_input = {
		id?:number,
	user_id?:number
}

/** input type for inserting data into table "notification_info" */
export type notification_info_insert_input = {
		app_type_id?:string,
	id?:number,
	token?:string,
	user_id?:number
}

/** aggregate max on columns */
export type notification_info_max_fields = {
	__typename?: "notification_info_max_fields",
	app_type_id?:string,
	id?:number,
	token?:string,
	user_id?:number
}

/** aggregate min on columns */
export type notification_info_min_fields = {
	__typename?: "notification_info_min_fields",
	app_type_id?:string,
	id?:number,
	token?:string,
	user_id?:number
}

/** response of any mutation on the table "notification_info" */
export type notification_info_mutation_response = {
	__typename?: "notification_info_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:notification_info[]
}

/** input type for inserting object relation for remote table "notification_info" */
export type notification_info_obj_rel_insert_input = {
		data:notification_info_insert_input,
	/** upsert condition */
	on_conflict?:notification_info_on_conflict
}

/** on_conflict condition type for table "notification_info" */
export type notification_info_on_conflict = {
		constraint:notification_info_constraint,
	update_columns:notification_info_update_column[],
	where?:notification_info_bool_exp
}

/** Ordering options when selecting data from "notification_info". */
export type notification_info_order_by = {
		app_type_id?:order_by,
	id?:order_by,
	token?:order_by,
	user_id?:order_by
}

/** primary key columns input for table: notification_info */
export type notification_info_pk_columns_input = {
		id:number
}

/** select columns of table "notification_info" */
export enum notification_info_select_column {
	app_type_id = "app_type_id",
	id = "id",
	token = "token",
	user_id = "user_id"
}

/** input type for updating data in table "notification_info" */
export type notification_info_set_input = {
		app_type_id?:string,
	id?:number,
	token?:string,
	user_id?:number
}

/** aggregate stddev on columns */
export type notification_info_stddev_fields = {
	__typename?: "notification_info_stddev_fields",
	id?:number,
	user_id?:number
}

/** aggregate stddev_pop on columns */
export type notification_info_stddev_pop_fields = {
	__typename?: "notification_info_stddev_pop_fields",
	id?:number,
	user_id?:number
}

/** aggregate stddev_samp on columns */
export type notification_info_stddev_samp_fields = {
	__typename?: "notification_info_stddev_samp_fields",
	id?:number,
	user_id?:number
}

/** Streaming cursor of the table "notification_info" */
export type notification_info_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:notification_info_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type notification_info_stream_cursor_value_input = {
		app_type_id?:string,
	id?:number,
	token?:string,
	user_id?:number
}

/** aggregate sum on columns */
export type notification_info_sum_fields = {
	__typename?: "notification_info_sum_fields",
	id?:number,
	user_id?:number
}

/** update columns of table "notification_info" */
export enum notification_info_update_column {
	app_type_id = "app_type_id",
	id = "id",
	token = "token",
	user_id = "user_id"
}

export type notification_info_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:notification_info_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:notification_info_set_input,
	where:notification_info_bool_exp
}

/** aggregate var_pop on columns */
export type notification_info_var_pop_fields = {
	__typename?: "notification_info_var_pop_fields",
	id?:number,
	user_id?:number
}

/** aggregate var_samp on columns */
export type notification_info_var_samp_fields = {
	__typename?: "notification_info_var_samp_fields",
	id?:number,
	user_id?:number
}

/** aggregate variance on columns */
export type notification_info_variance_fields = {
	__typename?: "notification_info_variance_fields",
	id?:number,
	user_id?:number
}

/** column ordering options */
export enum order_by {
	asc = "asc",
	asc_nulls_first = "asc_nulls_first",
	asc_nulls_last = "asc_nulls_last",
	desc = "desc",
	desc_nulls_first = "desc_nulls_first",
	desc_nulls_last = "desc_nulls_last"
}

export type query_root = {
	__typename?: "query_root",
	/** fetch data from the table: "chat" */
	chat:chat[],
	/** fetch aggregated fields from the table: "chat" */
	chat_aggregate:chat_aggregate,
	/** fetch data from the table: "chat" using primary key columns */
	chat_by_pk?:chat,
	/** fetch data from the table: "chat_participant" */
	chat_participant:chat_participant[],
	/** fetch aggregated fields from the table: "chat_participant" */
	chat_participant_aggregate:chat_participant_aggregate,
	/** fetch data from the table: "chat_participant" using primary key columns */
	chat_participant_by_pk?:chat_participant,
	/** fetch data from the table: "customer" */
	customer:customer[],
	/** fetch aggregated fields from the table: "customer" */
	customer_aggregate:customer_aggregate,
	/** fetch data from the table: "customer" using primary key columns */
	customer_by_pk?:customer,
	/** fetch data from the table: "deliverer" */
	deliverer:deliverer[],
	/** fetch aggregated fields from the table: "deliverer" */
	deliverer_aggregate:deliverer_aggregate,
	/** fetch data from the table: "deliverer" using primary key columns */
	deliverer_by_pk?:deliverer,
	/** fetch data from the table: "delivery_order" */
	delivery_order:delivery_order[],
	/** fetch aggregated fields from the table: "delivery_order" */
	delivery_order_aggregate:delivery_order_aggregate,
	/** fetch data from the table: "delivery_order" using primary key columns */
	delivery_order_by_pk?:delivery_order,
	/** fetch data from the table: "delivery_order_public" */
	delivery_order_public:delivery_order_public[],
	/** fetch aggregated fields from the table: "delivery_order_public" */
	delivery_order_public_aggregate:delivery_order_public_aggregate,
	/** fetch data from the table: "mez_admin" */
	mez_admin:mez_admin[],
	/** fetch aggregated fields from the table: "mez_admin" */
	mez_admin_aggregate:mez_admin_aggregate,
	/** fetch data from the table: "mez_admin" using primary key columns */
	mez_admin_by_pk?:mez_admin,
	/** fetch data from the table: "notification_info" */
	notification_info:notification_info[],
	/** fetch aggregated fields from the table: "notification_info" */
	notification_info_aggregate:notification_info_aggregate,
	/** fetch data from the table: "notification_info" using primary key columns */
	notification_info_by_pk?:notification_info,
	/** fetch data from the table: "restaurant" */
	restaurant:restaurant[],
	/** fetch aggregated fields from the table: "restaurant" */
	restaurant_aggregate:restaurant_aggregate,
	/** fetch data from the table: "restaurant" using primary key columns */
	restaurant_by_pk?:restaurant,
	/** fetch data from the table: "restaurant_cart" */
	restaurant_cart:restaurant_cart[],
	/** fetch aggregated fields from the table: "restaurant_cart" */
	restaurant_cart_aggregate:restaurant_cart_aggregate,
	/** fetch data from the table: "restaurant_cart" using primary key columns */
	restaurant_cart_by_pk?:restaurant_cart,
	/** fetch data from the table: "restaurant_cart_item" */
	restaurant_cart_item:restaurant_cart_item[],
	/** fetch aggregated fields from the table: "restaurant_cart_item" */
	restaurant_cart_item_aggregate:restaurant_cart_item_aggregate,
	/** fetch data from the table: "restaurant_cart_item" using primary key columns */
	restaurant_cart_item_by_pk?:restaurant_cart_item,
	/** fetch data from the table: "restaurant_category" */
	restaurant_category:restaurant_category[],
	/** fetch aggregated fields from the table: "restaurant_category" */
	restaurant_category_aggregate:restaurant_category_aggregate,
	/** fetch data from the table: "restaurant_category" using primary key columns */
	restaurant_category_by_pk?:restaurant_category,
	/** fetch data from the table: "restaurant_choice" */
	restaurant_choice:restaurant_choice[],
	/** fetch aggregated fields from the table: "restaurant_choice" */
	restaurant_choice_aggregate:restaurant_choice_aggregate,
	/** fetch data from the table: "restaurant_choice" using primary key columns */
	restaurant_choice_by_pk?:restaurant_choice,
	/** fetch data from the table: "restaurant_item" */
	restaurant_item:restaurant_item[],
	/** fetch aggregated fields from the table: "restaurant_item" */
	restaurant_item_aggregate:restaurant_item_aggregate,
	/** fetch data from the table: "restaurant_item" using primary key columns */
	restaurant_item_by_pk?:restaurant_item,
	/** fetch data from the table: "restaurant_item_option_map" */
	restaurant_item_option_map:restaurant_item_option_map[],
	/** fetch aggregated fields from the table: "restaurant_item_option_map" */
	restaurant_item_option_map_aggregate:restaurant_item_option_map_aggregate,
	/** fetch data from the table: "restaurant_item_option_map" using primary key columns */
	restaurant_item_option_map_by_pk?:restaurant_item_option_map,
	/** fetch data from the table: "restaurant_operator" */
	restaurant_operator:restaurant_operator[],
	/** fetch aggregated fields from the table: "restaurant_operator" */
	restaurant_operator_aggregate:restaurant_operator_aggregate,
	/** fetch data from the table: "restaurant_operator" using primary key columns */
	restaurant_operator_by_pk?:restaurant_operator,
	/** fetch data from the table: "restaurant_option" */
	restaurant_option:restaurant_option[],
	/** fetch aggregated fields from the table: "restaurant_option" */
	restaurant_option_aggregate:restaurant_option_aggregate,
	/** fetch data from the table: "restaurant_option" using primary key columns */
	restaurant_option_by_pk?:restaurant_option,
	/** fetch data from the table: "restaurant_option_choice_map" */
	restaurant_option_choice_map:restaurant_option_choice_map[],
	/** fetch aggregated fields from the table: "restaurant_option_choice_map" */
	restaurant_option_choice_map_aggregate:restaurant_option_choice_map_aggregate,
	/** fetch data from the table: "restaurant_option_choice_map" using primary key columns */
	restaurant_option_choice_map_by_pk?:restaurant_option_choice_map,
	/** fetch data from the table: "restaurant_order" */
	restaurant_order:restaurant_order[],
	/** fetch aggregated fields from the table: "restaurant_order" */
	restaurant_order_aggregate:restaurant_order_aggregate,
	/** fetch data from the table: "restaurant_order" using primary key columns */
	restaurant_order_by_pk?:restaurant_order,
	/** fetch data from the table: "restaurant_order_item" */
	restaurant_order_item:restaurant_order_item[],
	/** fetch aggregated fields from the table: "restaurant_order_item" */
	restaurant_order_item_aggregate:restaurant_order_item_aggregate,
	/** fetch data from the table: "restaurant_order_item" using primary key columns */
	restaurant_order_item_by_pk?:restaurant_order_item,
	/** fetch data from the table: "restaurant_order_public" */
	restaurant_order_public:restaurant_order_public[],
	/** fetch aggregated fields from the table: "restaurant_order_public" */
	restaurant_order_public_aggregate:restaurant_order_public_aggregate,
	/** fetch data from the table: "review" */
	review:review[],
	/** fetch aggregated fields from the table: "review" */
	review_aggregate:review_aggregate,
	/** fetch data from the table: "review" using primary key columns */
	review_by_pk?:review,
	/** fetch data from the table: "saved_location" */
	saved_location:saved_location[],
	/** fetch aggregated fields from the table: "saved_location" */
	saved_location_aggregate:saved_location_aggregate,
	/** fetch data from the table: "saved_location" using primary key columns */
	saved_location_by_pk?:saved_location,
	/** fetch data from the table: "service_provider_payment_info" */
	service_provider_payment_info:service_provider_payment_info[],
	/** fetch aggregated fields from the table: "service_provider_payment_info" */
	service_provider_payment_info_aggregate:service_provider_payment_info_aggregate,
	/** fetch data from the table: "service_provider_payment_info" using primary key columns */
	service_provider_payment_info_by_pk?:service_provider_payment_info,
	/** fetch data from the table: "stripe_info" */
	stripe_info:stripe_info[],
	/** fetch aggregated fields from the table: "stripe_info" */
	stripe_info_aggregate:stripe_info_aggregate,
	/** fetch data from the table: "stripe_info" using primary key columns */
	stripe_info_by_pk?:stripe_info,
	/** fetch data from the table: "topology.app_type" */
	topology_app_type:topology_app_type[],
	/** fetch aggregated fields from the table: "topology.app_type" */
	topology_app_type_aggregate:topology_app_type_aggregate,
	/** fetch data from the table: "topology.app_type" using primary key columns */
	topology_app_type_by_pk?:topology_app_type,
	/** fetch data from the table: "topology.language" */
	topology_language:topology_language[],
	/** fetch aggregated fields from the table: "topology.language" */
	topology_language_aggregate:topology_language_aggregate,
	/** fetch data from the table: "topology.language" using primary key columns */
	topology_language_by_pk?:topology_language,
	/** fetch data from the table: "translation" */
	translation:translation[],
	/** fetch aggregated fields from the table: "translation" */
	translation_aggregate:translation_aggregate,
	/** fetch data from the table: "translation" using primary key columns */
	translation_by_pk?:translation,
	/** fetch data from the table: "translation_value" */
	translation_value:translation_value[],
	/** fetch aggregated fields from the table: "translation_value" */
	translation_value_aggregate:translation_value_aggregate,
	/** fetch data from the table: "translation_value" using primary key columns */
	translation_value_by_pk?:translation_value,
	/** fetch data from the table: "user" */
	user:user[],
	/** fetch aggregated fields from the table: "user" */
	user_aggregate:user_aggregate,
	/** fetch data from the table: "user" using primary key columns */
	user_by_pk?:user
}

/** columns and relationships of "restaurant" */
export type restaurant = {
	__typename?: "restaurant",
	approved:boolean,
	/** An array relationship */
	categories:restaurant_category[],
	/** An aggregate relationship */
	categories_aggregate:restaurant_category_aggregate,
	/** An object relationship */
	description?:translation,
	description_id?:number,
	firebase_id?:string,
	id:number,
	image:string,
	language_id:string,
	location_gps:geography,
	location_text:string,
	name:string,
	/** open, closed_temporarily, closed_indefinitely */
	open_status:string,
	/** An array relationship */
	orders:restaurant_order[],
	/** An aggregate relationship */
	orders_aggregate:restaurant_order_aggregate,
	/** An object relationship */
	payment_info?:service_provider_payment_info,
	payment_info_id?:number,
	/** An array relationship */
	restaurant_operators:restaurant_operator[],
	/** An aggregate relationship */
	restaurant_operators_aggregate:restaurant_operator_aggregate,
	schedule_id:number,
	self_delivery:boolean,
	service_provider_type:string,
	/** A computed field, executes function "special_items" */
	specials?:restaurant_item[]
}

/** aggregated selection of "restaurant" */
export type restaurant_aggregate = {
	__typename?: "restaurant_aggregate",
	aggregate?:restaurant_aggregate_fields,
	nodes:restaurant[]
}

/** aggregate fields of "restaurant" */
export type restaurant_aggregate_fields = {
	__typename?: "restaurant_aggregate_fields",
	avg?:restaurant_avg_fields,
	count:number,
	max?:restaurant_max_fields,
	min?:restaurant_min_fields,
	stddev?:restaurant_stddev_fields,
	stddev_pop?:restaurant_stddev_pop_fields,
	stddev_samp?:restaurant_stddev_samp_fields,
	sum?:restaurant_sum_fields,
	var_pop?:restaurant_var_pop_fields,
	var_samp?:restaurant_var_samp_fields,
	variance?:restaurant_variance_fields
}

/** aggregate avg on columns */
export type restaurant_avg_fields = {
	__typename?: "restaurant_avg_fields",
	description_id?:number,
	id?:number,
	payment_info_id?:number,
	schedule_id?:number
}

/** Boolean expression to filter rows from the table "restaurant". All fields are combined with a logical 'AND'. */
export type restaurant_bool_exp = {
		_and?:restaurant_bool_exp[],
	_not?:restaurant_bool_exp,
	_or?:restaurant_bool_exp[],
	approved?:Boolean_comparison_exp,
	categories?:restaurant_category_bool_exp,
	description?:translation_bool_exp,
	description_id?:Int_comparison_exp,
	firebase_id?:String_comparison_exp,
	id?:Int_comparison_exp,
	image?:String_comparison_exp,
	language_id?:String_comparison_exp,
	location_gps?:geography_comparison_exp,
	location_text?:String_comparison_exp,
	name?:String_comparison_exp,
	open_status?:String_comparison_exp,
	orders?:restaurant_order_bool_exp,
	payment_info?:service_provider_payment_info_bool_exp,
	payment_info_id?:Int_comparison_exp,
	restaurant_operators?:restaurant_operator_bool_exp,
	schedule_id?:Int_comparison_exp,
	self_delivery?:Boolean_comparison_exp,
	service_provider_type?:String_comparison_exp,
	specials?:restaurant_item_bool_exp
}

/** columns and relationships of "restaurant_cart" */
export type restaurant_cart = {
	__typename?: "restaurant_cart",
	/** A computed field, executes function "cost" */
	cost?:money,
	/** An object relationship */
	customer:customer,
	customer_id:number,
	/** An array relationship */
	items:restaurant_cart_item[],
	/** An aggregate relationship */
	items_aggregate:restaurant_cart_item_aggregate,
	/** An object relationship */
	restaurant?:restaurant,
	restaurant_id?:number
}

/** aggregated selection of "restaurant_cart" */
export type restaurant_cart_aggregate = {
	__typename?: "restaurant_cart_aggregate",
	aggregate?:restaurant_cart_aggregate_fields,
	nodes:restaurant_cart[]
}

/** aggregate fields of "restaurant_cart" */
export type restaurant_cart_aggregate_fields = {
	__typename?: "restaurant_cart_aggregate_fields",
	avg?:restaurant_cart_avg_fields,
	count:number,
	max?:restaurant_cart_max_fields,
	min?:restaurant_cart_min_fields,
	stddev?:restaurant_cart_stddev_fields,
	stddev_pop?:restaurant_cart_stddev_pop_fields,
	stddev_samp?:restaurant_cart_stddev_samp_fields,
	sum?:restaurant_cart_sum_fields,
	var_pop?:restaurant_cart_var_pop_fields,
	var_samp?:restaurant_cart_var_samp_fields,
	variance?:restaurant_cart_variance_fields
}

/** aggregate avg on columns */
export type restaurant_cart_avg_fields = {
	__typename?: "restaurant_cart_avg_fields",
	customer_id?:number,
	restaurant_id?:number
}

/** Boolean expression to filter rows from the table "restaurant_cart". All fields are combined with a logical 'AND'. */
export type restaurant_cart_bool_exp = {
		_and?:restaurant_cart_bool_exp[],
	_not?:restaurant_cart_bool_exp,
	_or?:restaurant_cart_bool_exp[],
	cost?:money_comparison_exp,
	customer?:customer_bool_exp,
	customer_id?:Int_comparison_exp,
	items?:restaurant_cart_item_bool_exp,
	restaurant?:restaurant_bool_exp,
	restaurant_id?:Int_comparison_exp
}

/** unique or primary key constraints on table "restaurant_cart" */
export enum restaurant_cart_constraint {
	restaurant_cart_pkey1 = "restaurant_cart_pkey1"
}

/** input type for incrementing numeric columns in table "restaurant_cart" */
export type restaurant_cart_inc_input = {
		customer_id?:number,
	restaurant_id?:number
}

/** input type for inserting data into table "restaurant_cart" */
export type restaurant_cart_insert_input = {
		customer?:customer_obj_rel_insert_input,
	customer_id?:number,
	items?:restaurant_cart_item_arr_rel_insert_input,
	restaurant?:restaurant_obj_rel_insert_input,
	restaurant_id?:number
}

/** columns and relationships of "restaurant_cart_item" */
export type restaurant_cart_item = {
	__typename?: "restaurant_cart_item",
	cost_per_one:money,
	customer_id:number,
	id:number,
	note?:string,
	quantity:number,
	/** An object relationship */
	restaurant_cart:restaurant_cart,
	/** An object relationship */
	restaurant_item:restaurant_item,
	restaurant_item_id:number,
	/** {<option-id>:[<choice-id>] */
	selected_options:json
}

/** aggregated selection of "restaurant_cart_item" */
export type restaurant_cart_item_aggregate = {
	__typename?: "restaurant_cart_item_aggregate",
	aggregate?:restaurant_cart_item_aggregate_fields,
	nodes:restaurant_cart_item[]
}

/** aggregate fields of "restaurant_cart_item" */
export type restaurant_cart_item_aggregate_fields = {
	__typename?: "restaurant_cart_item_aggregate_fields",
	avg?:restaurant_cart_item_avg_fields,
	count:number,
	max?:restaurant_cart_item_max_fields,
	min?:restaurant_cart_item_min_fields,
	stddev?:restaurant_cart_item_stddev_fields,
	stddev_pop?:restaurant_cart_item_stddev_pop_fields,
	stddev_samp?:restaurant_cart_item_stddev_samp_fields,
	sum?:restaurant_cart_item_sum_fields,
	var_pop?:restaurant_cart_item_var_pop_fields,
	var_samp?:restaurant_cart_item_var_samp_fields,
	variance?:restaurant_cart_item_variance_fields
}

/** order by aggregate values of table "restaurant_cart_item" */
export type restaurant_cart_item_aggregate_order_by = {
		avg?:restaurant_cart_item_avg_order_by,
	count?:order_by,
	max?:restaurant_cart_item_max_order_by,
	min?:restaurant_cart_item_min_order_by,
	stddev?:restaurant_cart_item_stddev_order_by,
	stddev_pop?:restaurant_cart_item_stddev_pop_order_by,
	stddev_samp?:restaurant_cart_item_stddev_samp_order_by,
	sum?:restaurant_cart_item_sum_order_by,
	var_pop?:restaurant_cart_item_var_pop_order_by,
	var_samp?:restaurant_cart_item_var_samp_order_by,
	variance?:restaurant_cart_item_variance_order_by
}

/** input type for inserting array relation for remote table "restaurant_cart_item" */
export type restaurant_cart_item_arr_rel_insert_input = {
		data:restaurant_cart_item_insert_input[],
	/** upsert condition */
	on_conflict?:restaurant_cart_item_on_conflict
}

/** aggregate avg on columns */
export type restaurant_cart_item_avg_fields = {
	__typename?: "restaurant_cart_item_avg_fields",
	cost_per_one?:number,
	customer_id?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number
}

/** order by avg() on columns of table "restaurant_cart_item" */
export type restaurant_cart_item_avg_order_by = {
		cost_per_one?:order_by,
	customer_id?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by
}

/** Boolean expression to filter rows from the table "restaurant_cart_item". All fields are combined with a logical 'AND'. */
export type restaurant_cart_item_bool_exp = {
		_and?:restaurant_cart_item_bool_exp[],
	_not?:restaurant_cart_item_bool_exp,
	_or?:restaurant_cart_item_bool_exp[],
	cost_per_one?:money_comparison_exp,
	customer_id?:Int_comparison_exp,
	id?:Int_comparison_exp,
	note?:String_comparison_exp,
	quantity?:Int_comparison_exp,
	restaurant_cart?:restaurant_cart_bool_exp,
	restaurant_item?:restaurant_item_bool_exp,
	restaurant_item_id?:Int_comparison_exp,
	selected_options?:json_comparison_exp
}

/** unique or primary key constraints on table "restaurant_cart_item" */
export enum restaurant_cart_item_constraint {
	restaurant_cart_pkey = "restaurant_cart_pkey"
}

/** input type for incrementing numeric columns in table "restaurant_cart_item" */
export type restaurant_cart_item_inc_input = {
		cost_per_one?:money,
	customer_id?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number
}

/** input type for inserting data into table "restaurant_cart_item" */
export type restaurant_cart_item_insert_input = {
		cost_per_one?:money,
	customer_id?:number,
	id?:number,
	note?:string,
	quantity?:number,
	restaurant_cart?:restaurant_cart_obj_rel_insert_input,
	restaurant_item?:restaurant_item_obj_rel_insert_input,
	restaurant_item_id?:number,
	/** {<option-id>:[<choice-id>] */
	selected_options?:json
}

/** aggregate max on columns */
export type restaurant_cart_item_max_fields = {
	__typename?: "restaurant_cart_item_max_fields",
	cost_per_one?:money,
	customer_id?:number,
	id?:number,
	note?:string,
	quantity?:number,
	restaurant_item_id?:number
}

/** order by max() on columns of table "restaurant_cart_item" */
export type restaurant_cart_item_max_order_by = {
		cost_per_one?:order_by,
	customer_id?:order_by,
	id?:order_by,
	note?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by
}

/** aggregate min on columns */
export type restaurant_cart_item_min_fields = {
	__typename?: "restaurant_cart_item_min_fields",
	cost_per_one?:money,
	customer_id?:number,
	id?:number,
	note?:string,
	quantity?:number,
	restaurant_item_id?:number
}

/** order by min() on columns of table "restaurant_cart_item" */
export type restaurant_cart_item_min_order_by = {
		cost_per_one?:order_by,
	customer_id?:order_by,
	id?:order_by,
	note?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by
}

/** response of any mutation on the table "restaurant_cart_item" */
export type restaurant_cart_item_mutation_response = {
	__typename?: "restaurant_cart_item_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant_cart_item[]
}

/** on_conflict condition type for table "restaurant_cart_item" */
export type restaurant_cart_item_on_conflict = {
		constraint:restaurant_cart_item_constraint,
	update_columns:restaurant_cart_item_update_column[],
	where?:restaurant_cart_item_bool_exp
}

/** Ordering options when selecting data from "restaurant_cart_item". */
export type restaurant_cart_item_order_by = {
		cost_per_one?:order_by,
	customer_id?:order_by,
	id?:order_by,
	note?:order_by,
	quantity?:order_by,
	restaurant_cart?:restaurant_cart_order_by,
	restaurant_item?:restaurant_item_order_by,
	restaurant_item_id?:order_by,
	selected_options?:order_by
}

/** primary key columns input for table: restaurant_cart_item */
export type restaurant_cart_item_pk_columns_input = {
		id:number
}

/** select columns of table "restaurant_cart_item" */
export enum restaurant_cart_item_select_column {
	cost_per_one = "cost_per_one",
	customer_id = "customer_id",
	id = "id",
	note = "note",
	quantity = "quantity",
	restaurant_item_id = "restaurant_item_id",
	selected_options = "selected_options"
}

/** input type for updating data in table "restaurant_cart_item" */
export type restaurant_cart_item_set_input = {
		cost_per_one?:money,
	customer_id?:number,
	id?:number,
	note?:string,
	quantity?:number,
	restaurant_item_id?:number,
	/** {<option-id>:[<choice-id>] */
	selected_options?:json
}

/** aggregate stddev on columns */
export type restaurant_cart_item_stddev_fields = {
	__typename?: "restaurant_cart_item_stddev_fields",
	cost_per_one?:number,
	customer_id?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number
}

/** order by stddev() on columns of table "restaurant_cart_item" */
export type restaurant_cart_item_stddev_order_by = {
		cost_per_one?:order_by,
	customer_id?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by
}

/** aggregate stddev_pop on columns */
export type restaurant_cart_item_stddev_pop_fields = {
	__typename?: "restaurant_cart_item_stddev_pop_fields",
	cost_per_one?:number,
	customer_id?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number
}

/** order by stddev_pop() on columns of table "restaurant_cart_item" */
export type restaurant_cart_item_stddev_pop_order_by = {
		cost_per_one?:order_by,
	customer_id?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by
}

/** aggregate stddev_samp on columns */
export type restaurant_cart_item_stddev_samp_fields = {
	__typename?: "restaurant_cart_item_stddev_samp_fields",
	cost_per_one?:number,
	customer_id?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number
}

/** order by stddev_samp() on columns of table "restaurant_cart_item" */
export type restaurant_cart_item_stddev_samp_order_by = {
		cost_per_one?:order_by,
	customer_id?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by
}

/** Streaming cursor of the table "restaurant_cart_item" */
export type restaurant_cart_item_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_cart_item_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_cart_item_stream_cursor_value_input = {
		cost_per_one?:money,
	customer_id?:number,
	id?:number,
	note?:string,
	quantity?:number,
	restaurant_item_id?:number,
	/** {<option-id>:[<choice-id>] */
	selected_options?:json
}

/** aggregate sum on columns */
export type restaurant_cart_item_sum_fields = {
	__typename?: "restaurant_cart_item_sum_fields",
	cost_per_one?:money,
	customer_id?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number
}

/** order by sum() on columns of table "restaurant_cart_item" */
export type restaurant_cart_item_sum_order_by = {
		cost_per_one?:order_by,
	customer_id?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by
}

/** update columns of table "restaurant_cart_item" */
export enum restaurant_cart_item_update_column {
	cost_per_one = "cost_per_one",
	customer_id = "customer_id",
	id = "id",
	note = "note",
	quantity = "quantity",
	restaurant_item_id = "restaurant_item_id",
	selected_options = "selected_options"
}

export type restaurant_cart_item_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_cart_item_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_cart_item_set_input,
	where:restaurant_cart_item_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_cart_item_var_pop_fields = {
	__typename?: "restaurant_cart_item_var_pop_fields",
	cost_per_one?:number,
	customer_id?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number
}

/** order by var_pop() on columns of table "restaurant_cart_item" */
export type restaurant_cart_item_var_pop_order_by = {
		cost_per_one?:order_by,
	customer_id?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by
}

/** aggregate var_samp on columns */
export type restaurant_cart_item_var_samp_fields = {
	__typename?: "restaurant_cart_item_var_samp_fields",
	cost_per_one?:number,
	customer_id?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number
}

/** order by var_samp() on columns of table "restaurant_cart_item" */
export type restaurant_cart_item_var_samp_order_by = {
		cost_per_one?:order_by,
	customer_id?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by
}

/** aggregate variance on columns */
export type restaurant_cart_item_variance_fields = {
	__typename?: "restaurant_cart_item_variance_fields",
	cost_per_one?:number,
	customer_id?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number
}

/** order by variance() on columns of table "restaurant_cart_item" */
export type restaurant_cart_item_variance_order_by = {
		cost_per_one?:order_by,
	customer_id?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by
}

/** aggregate max on columns */
export type restaurant_cart_max_fields = {
	__typename?: "restaurant_cart_max_fields",
	customer_id?:number,
	restaurant_id?:number
}

/** aggregate min on columns */
export type restaurant_cart_min_fields = {
	__typename?: "restaurant_cart_min_fields",
	customer_id?:number,
	restaurant_id?:number
}

/** response of any mutation on the table "restaurant_cart" */
export type restaurant_cart_mutation_response = {
	__typename?: "restaurant_cart_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant_cart[]
}

/** input type for inserting object relation for remote table "restaurant_cart" */
export type restaurant_cart_obj_rel_insert_input = {
		data:restaurant_cart_insert_input,
	/** upsert condition */
	on_conflict?:restaurant_cart_on_conflict
}

/** on_conflict condition type for table "restaurant_cart" */
export type restaurant_cart_on_conflict = {
		constraint:restaurant_cart_constraint,
	update_columns:restaurant_cart_update_column[],
	where?:restaurant_cart_bool_exp
}

/** Ordering options when selecting data from "restaurant_cart". */
export type restaurant_cart_order_by = {
		cost?:order_by,
	customer?:customer_order_by,
	customer_id?:order_by,
	items_aggregate?:restaurant_cart_item_aggregate_order_by,
	restaurant?:restaurant_order_by,
	restaurant_id?:order_by
}

/** primary key columns input for table: restaurant_cart */
export type restaurant_cart_pk_columns_input = {
		customer_id:number
}

/** select columns of table "restaurant_cart" */
export enum restaurant_cart_select_column {
	customer_id = "customer_id",
	restaurant_id = "restaurant_id"
}

/** input type for updating data in table "restaurant_cart" */
export type restaurant_cart_set_input = {
		customer_id?:number,
	restaurant_id?:number
}

/** aggregate stddev on columns */
export type restaurant_cart_stddev_fields = {
	__typename?: "restaurant_cart_stddev_fields",
	customer_id?:number,
	restaurant_id?:number
}

/** aggregate stddev_pop on columns */
export type restaurant_cart_stddev_pop_fields = {
	__typename?: "restaurant_cart_stddev_pop_fields",
	customer_id?:number,
	restaurant_id?:number
}

/** aggregate stddev_samp on columns */
export type restaurant_cart_stddev_samp_fields = {
	__typename?: "restaurant_cart_stddev_samp_fields",
	customer_id?:number,
	restaurant_id?:number
}

/** Streaming cursor of the table "restaurant_cart" */
export type restaurant_cart_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_cart_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_cart_stream_cursor_value_input = {
		customer_id?:number,
	restaurant_id?:number
}

/** aggregate sum on columns */
export type restaurant_cart_sum_fields = {
	__typename?: "restaurant_cart_sum_fields",
	customer_id?:number,
	restaurant_id?:number
}

/** update columns of table "restaurant_cart" */
export enum restaurant_cart_update_column {
	customer_id = "customer_id",
	restaurant_id = "restaurant_id"
}

export type restaurant_cart_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_cart_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_cart_set_input,
	where:restaurant_cart_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_cart_var_pop_fields = {
	__typename?: "restaurant_cart_var_pop_fields",
	customer_id?:number,
	restaurant_id?:number
}

/** aggregate var_samp on columns */
export type restaurant_cart_var_samp_fields = {
	__typename?: "restaurant_cart_var_samp_fields",
	customer_id?:number,
	restaurant_id?:number
}

/** aggregate variance on columns */
export type restaurant_cart_variance_fields = {
	__typename?: "restaurant_cart_variance_fields",
	customer_id?:number,
	restaurant_id?:number
}

/** columns and relationships of "restaurant_category" */
export type restaurant_category = {
	__typename?: "restaurant_category",
	/** An object relationship */
	description?:translation,
	description_id?:number,
	id:number,
	/** An array relationship */
	items:restaurant_item[],
	/** An aggregate relationship */
	items_aggregate:restaurant_item_aggregate,
	/** An object relationship */
	name:translation,
	name_id:number,
	position:number,
	/** An object relationship */
	restaurant:restaurant,
	restaurant_id:number,
	schedule_id?:number
}

/** aggregated selection of "restaurant_category" */
export type restaurant_category_aggregate = {
	__typename?: "restaurant_category_aggregate",
	aggregate?:restaurant_category_aggregate_fields,
	nodes:restaurant_category[]
}

/** aggregate fields of "restaurant_category" */
export type restaurant_category_aggregate_fields = {
	__typename?: "restaurant_category_aggregate_fields",
	avg?:restaurant_category_avg_fields,
	count:number,
	max?:restaurant_category_max_fields,
	min?:restaurant_category_min_fields,
	stddev?:restaurant_category_stddev_fields,
	stddev_pop?:restaurant_category_stddev_pop_fields,
	stddev_samp?:restaurant_category_stddev_samp_fields,
	sum?:restaurant_category_sum_fields,
	var_pop?:restaurant_category_var_pop_fields,
	var_samp?:restaurant_category_var_samp_fields,
	variance?:restaurant_category_variance_fields
}

/** order by aggregate values of table "restaurant_category" */
export type restaurant_category_aggregate_order_by = {
		avg?:restaurant_category_avg_order_by,
	count?:order_by,
	max?:restaurant_category_max_order_by,
	min?:restaurant_category_min_order_by,
	stddev?:restaurant_category_stddev_order_by,
	stddev_pop?:restaurant_category_stddev_pop_order_by,
	stddev_samp?:restaurant_category_stddev_samp_order_by,
	sum?:restaurant_category_sum_order_by,
	var_pop?:restaurant_category_var_pop_order_by,
	var_samp?:restaurant_category_var_samp_order_by,
	variance?:restaurant_category_variance_order_by
}

/** input type for inserting array relation for remote table "restaurant_category" */
export type restaurant_category_arr_rel_insert_input = {
		data:restaurant_category_insert_input[],
	/** upsert condition */
	on_conflict?:restaurant_category_on_conflict
}

/** aggregate avg on columns */
export type restaurant_category_avg_fields = {
	__typename?: "restaurant_category_avg_fields",
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** order by avg() on columns of table "restaurant_category" */
export type restaurant_category_avg_order_by = {
		description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by,
	schedule_id?:order_by
}

/** Boolean expression to filter rows from the table "restaurant_category". All fields are combined with a logical 'AND'. */
export type restaurant_category_bool_exp = {
		_and?:restaurant_category_bool_exp[],
	_not?:restaurant_category_bool_exp,
	_or?:restaurant_category_bool_exp[],
	description?:translation_bool_exp,
	description_id?:Int_comparison_exp,
	id?:Int_comparison_exp,
	items?:restaurant_item_bool_exp,
	name?:translation_bool_exp,
	name_id?:Int_comparison_exp,
	position?:Int_comparison_exp,
	restaurant?:restaurant_bool_exp,
	restaurant_id?:Int_comparison_exp,
	schedule_id?:Int_comparison_exp
}

/** unique or primary key constraints on table "restaurant_category" */
export enum restaurant_category_constraint {
	restaurant_category_pkey = "restaurant_category_pkey"
}

/** input type for incrementing numeric columns in table "restaurant_category" */
export type restaurant_category_inc_input = {
		description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** input type for inserting data into table "restaurant_category" */
export type restaurant_category_insert_input = {
		description?:translation_obj_rel_insert_input,
	description_id?:number,
	id?:number,
	items?:restaurant_item_arr_rel_insert_input,
	name?:translation_obj_rel_insert_input,
	name_id?:number,
	position?:number,
	restaurant?:restaurant_obj_rel_insert_input,
	restaurant_id?:number,
	schedule_id?:number
}

/** aggregate max on columns */
export type restaurant_category_max_fields = {
	__typename?: "restaurant_category_max_fields",
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** order by max() on columns of table "restaurant_category" */
export type restaurant_category_max_order_by = {
		description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by,
	schedule_id?:order_by
}

/** aggregate min on columns */
export type restaurant_category_min_fields = {
	__typename?: "restaurant_category_min_fields",
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** order by min() on columns of table "restaurant_category" */
export type restaurant_category_min_order_by = {
		description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by,
	schedule_id?:order_by
}

/** response of any mutation on the table "restaurant_category" */
export type restaurant_category_mutation_response = {
	__typename?: "restaurant_category_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant_category[]
}

/** input type for inserting object relation for remote table "restaurant_category" */
export type restaurant_category_obj_rel_insert_input = {
		data:restaurant_category_insert_input,
	/** upsert condition */
	on_conflict?:restaurant_category_on_conflict
}

/** on_conflict condition type for table "restaurant_category" */
export type restaurant_category_on_conflict = {
		constraint:restaurant_category_constraint,
	update_columns:restaurant_category_update_column[],
	where?:restaurant_category_bool_exp
}

/** Ordering options when selecting data from "restaurant_category". */
export type restaurant_category_order_by = {
		description?:translation_order_by,
	description_id?:order_by,
	id?:order_by,
	items_aggregate?:restaurant_item_aggregate_order_by,
	name?:translation_order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant?:restaurant_order_by,
	restaurant_id?:order_by,
	schedule_id?:order_by
}

/** primary key columns input for table: restaurant_category */
export type restaurant_category_pk_columns_input = {
		id:number
}

/** select columns of table "restaurant_category" */
export enum restaurant_category_select_column {
	description_id = "description_id",
	id = "id",
	name_id = "name_id",
	position = "position",
	restaurant_id = "restaurant_id",
	schedule_id = "schedule_id"
}

/** input type for updating data in table "restaurant_category" */
export type restaurant_category_set_input = {
		description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** aggregate stddev on columns */
export type restaurant_category_stddev_fields = {
	__typename?: "restaurant_category_stddev_fields",
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** order by stddev() on columns of table "restaurant_category" */
export type restaurant_category_stddev_order_by = {
		description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by,
	schedule_id?:order_by
}

/** aggregate stddev_pop on columns */
export type restaurant_category_stddev_pop_fields = {
	__typename?: "restaurant_category_stddev_pop_fields",
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** order by stddev_pop() on columns of table "restaurant_category" */
export type restaurant_category_stddev_pop_order_by = {
		description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by,
	schedule_id?:order_by
}

/** aggregate stddev_samp on columns */
export type restaurant_category_stddev_samp_fields = {
	__typename?: "restaurant_category_stddev_samp_fields",
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** order by stddev_samp() on columns of table "restaurant_category" */
export type restaurant_category_stddev_samp_order_by = {
		description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by,
	schedule_id?:order_by
}

/** Streaming cursor of the table "restaurant_category" */
export type restaurant_category_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_category_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_category_stream_cursor_value_input = {
		description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** aggregate sum on columns */
export type restaurant_category_sum_fields = {
	__typename?: "restaurant_category_sum_fields",
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** order by sum() on columns of table "restaurant_category" */
export type restaurant_category_sum_order_by = {
		description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by,
	schedule_id?:order_by
}

/** update columns of table "restaurant_category" */
export enum restaurant_category_update_column {
	description_id = "description_id",
	id = "id",
	name_id = "name_id",
	position = "position",
	restaurant_id = "restaurant_id",
	schedule_id = "schedule_id"
}

export type restaurant_category_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_category_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_category_set_input,
	where:restaurant_category_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_category_var_pop_fields = {
	__typename?: "restaurant_category_var_pop_fields",
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** order by var_pop() on columns of table "restaurant_category" */
export type restaurant_category_var_pop_order_by = {
		description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by,
	schedule_id?:order_by
}

/** aggregate var_samp on columns */
export type restaurant_category_var_samp_fields = {
	__typename?: "restaurant_category_var_samp_fields",
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** order by var_samp() on columns of table "restaurant_category" */
export type restaurant_category_var_samp_order_by = {
		description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by,
	schedule_id?:order_by
}

/** aggregate variance on columns */
export type restaurant_category_variance_fields = {
	__typename?: "restaurant_category_variance_fields",
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	schedule_id?:number
}

/** order by variance() on columns of table "restaurant_category" */
export type restaurant_category_variance_order_by = {
		description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by,
	schedule_id?:order_by
}

/** columns and relationships of "restaurant_choice" */
export type restaurant_choice = {
	__typename?: "restaurant_choice",
	available:boolean,
	cost:money,
	id:number,
	/** An object relationship */
	name:translation,
	name_id:number,
	/** An array relationship */
	options:restaurant_option_choice_map[],
	/** An aggregate relationship */
	options_aggregate:restaurant_option_choice_map_aggregate,
	/** An object relationship */
	restaurant:restaurant,
	restaurant_id:number
}

/** aggregated selection of "restaurant_choice" */
export type restaurant_choice_aggregate = {
	__typename?: "restaurant_choice_aggregate",
	aggregate?:restaurant_choice_aggregate_fields,
	nodes:restaurant_choice[]
}

/** aggregate fields of "restaurant_choice" */
export type restaurant_choice_aggregate_fields = {
	__typename?: "restaurant_choice_aggregate_fields",
	avg?:restaurant_choice_avg_fields,
	count:number,
	max?:restaurant_choice_max_fields,
	min?:restaurant_choice_min_fields,
	stddev?:restaurant_choice_stddev_fields,
	stddev_pop?:restaurant_choice_stddev_pop_fields,
	stddev_samp?:restaurant_choice_stddev_samp_fields,
	sum?:restaurant_choice_sum_fields,
	var_pop?:restaurant_choice_var_pop_fields,
	var_samp?:restaurant_choice_var_samp_fields,
	variance?:restaurant_choice_variance_fields
}

/** order by aggregate values of table "restaurant_choice" */
export type restaurant_choice_aggregate_order_by = {
		avg?:restaurant_choice_avg_order_by,
	count?:order_by,
	max?:restaurant_choice_max_order_by,
	min?:restaurant_choice_min_order_by,
	stddev?:restaurant_choice_stddev_order_by,
	stddev_pop?:restaurant_choice_stddev_pop_order_by,
	stddev_samp?:restaurant_choice_stddev_samp_order_by,
	sum?:restaurant_choice_sum_order_by,
	var_pop?:restaurant_choice_var_pop_order_by,
	var_samp?:restaurant_choice_var_samp_order_by,
	variance?:restaurant_choice_variance_order_by
}

/** input type for inserting array relation for remote table "restaurant_choice" */
export type restaurant_choice_arr_rel_insert_input = {
		data:restaurant_choice_insert_input[],
	/** upsert condition */
	on_conflict?:restaurant_choice_on_conflict
}

/** aggregate avg on columns */
export type restaurant_choice_avg_fields = {
	__typename?: "restaurant_choice_avg_fields",
	cost?:number,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** order by avg() on columns of table "restaurant_choice" */
export type restaurant_choice_avg_order_by = {
		cost?:order_by,
	id?:order_by,
	name_id?:order_by,
	restaurant_id?:order_by
}

/** Boolean expression to filter rows from the table "restaurant_choice". All fields are combined with a logical 'AND'. */
export type restaurant_choice_bool_exp = {
		_and?:restaurant_choice_bool_exp[],
	_not?:restaurant_choice_bool_exp,
	_or?:restaurant_choice_bool_exp[],
	available?:Boolean_comparison_exp,
	cost?:money_comparison_exp,
	id?:Int_comparison_exp,
	name?:translation_bool_exp,
	name_id?:Int_comparison_exp,
	options?:restaurant_option_choice_map_bool_exp,
	restaurant?:restaurant_bool_exp,
	restaurant_id?:Int_comparison_exp
}

/** unique or primary key constraints on table "restaurant_choice" */
export enum restaurant_choice_constraint {
	restaurant_choice_pkey = "restaurant_choice_pkey"
}

/** input type for incrementing numeric columns in table "restaurant_choice" */
export type restaurant_choice_inc_input = {
		cost?:money,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** input type for inserting data into table "restaurant_choice" */
export type restaurant_choice_insert_input = {
		available?:boolean,
	cost?:money,
	id?:number,
	name?:translation_obj_rel_insert_input,
	name_id?:number,
	options?:restaurant_option_choice_map_arr_rel_insert_input,
	restaurant?:restaurant_obj_rel_insert_input,
	restaurant_id?:number
}

/** aggregate max on columns */
export type restaurant_choice_max_fields = {
	__typename?: "restaurant_choice_max_fields",
	cost?:money,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** order by max() on columns of table "restaurant_choice" */
export type restaurant_choice_max_order_by = {
		cost?:order_by,
	id?:order_by,
	name_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate min on columns */
export type restaurant_choice_min_fields = {
	__typename?: "restaurant_choice_min_fields",
	cost?:money,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** order by min() on columns of table "restaurant_choice" */
export type restaurant_choice_min_order_by = {
		cost?:order_by,
	id?:order_by,
	name_id?:order_by,
	restaurant_id?:order_by
}

/** response of any mutation on the table "restaurant_choice" */
export type restaurant_choice_mutation_response = {
	__typename?: "restaurant_choice_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant_choice[]
}

/** on_conflict condition type for table "restaurant_choice" */
export type restaurant_choice_on_conflict = {
		constraint:restaurant_choice_constraint,
	update_columns:restaurant_choice_update_column[],
	where?:restaurant_choice_bool_exp
}

/** Ordering options when selecting data from "restaurant_choice". */
export type restaurant_choice_order_by = {
		available?:order_by,
	cost?:order_by,
	id?:order_by,
	name?:translation_order_by,
	name_id?:order_by,
	options_aggregate?:restaurant_option_choice_map_aggregate_order_by,
	restaurant?:restaurant_order_by,
	restaurant_id?:order_by
}

/** primary key columns input for table: restaurant_choice */
export type restaurant_choice_pk_columns_input = {
		id:number
}

/** select columns of table "restaurant_choice" */
export enum restaurant_choice_select_column {
	available = "available",
	cost = "cost",
	id = "id",
	name_id = "name_id",
	restaurant_id = "restaurant_id"
}

/** input type for updating data in table "restaurant_choice" */
export type restaurant_choice_set_input = {
		available?:boolean,
	cost?:money,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** aggregate stddev on columns */
export type restaurant_choice_stddev_fields = {
	__typename?: "restaurant_choice_stddev_fields",
	cost?:number,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** order by stddev() on columns of table "restaurant_choice" */
export type restaurant_choice_stddev_order_by = {
		cost?:order_by,
	id?:order_by,
	name_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate stddev_pop on columns */
export type restaurant_choice_stddev_pop_fields = {
	__typename?: "restaurant_choice_stddev_pop_fields",
	cost?:number,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** order by stddev_pop() on columns of table "restaurant_choice" */
export type restaurant_choice_stddev_pop_order_by = {
		cost?:order_by,
	id?:order_by,
	name_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate stddev_samp on columns */
export type restaurant_choice_stddev_samp_fields = {
	__typename?: "restaurant_choice_stddev_samp_fields",
	cost?:number,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** order by stddev_samp() on columns of table "restaurant_choice" */
export type restaurant_choice_stddev_samp_order_by = {
		cost?:order_by,
	id?:order_by,
	name_id?:order_by,
	restaurant_id?:order_by
}

/** Streaming cursor of the table "restaurant_choice" */
export type restaurant_choice_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_choice_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_choice_stream_cursor_value_input = {
		available?:boolean,
	cost?:money,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** aggregate sum on columns */
export type restaurant_choice_sum_fields = {
	__typename?: "restaurant_choice_sum_fields",
	cost?:money,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** order by sum() on columns of table "restaurant_choice" */
export type restaurant_choice_sum_order_by = {
		cost?:order_by,
	id?:order_by,
	name_id?:order_by,
	restaurant_id?:order_by
}

/** update columns of table "restaurant_choice" */
export enum restaurant_choice_update_column {
	available = "available",
	cost = "cost",
	id = "id",
	name_id = "name_id",
	restaurant_id = "restaurant_id"
}

export type restaurant_choice_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_choice_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_choice_set_input,
	where:restaurant_choice_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_choice_var_pop_fields = {
	__typename?: "restaurant_choice_var_pop_fields",
	cost?:number,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** order by var_pop() on columns of table "restaurant_choice" */
export type restaurant_choice_var_pop_order_by = {
		cost?:order_by,
	id?:order_by,
	name_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate var_samp on columns */
export type restaurant_choice_var_samp_fields = {
	__typename?: "restaurant_choice_var_samp_fields",
	cost?:number,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** order by var_samp() on columns of table "restaurant_choice" */
export type restaurant_choice_var_samp_order_by = {
		cost?:order_by,
	id?:order_by,
	name_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate variance on columns */
export type restaurant_choice_variance_fields = {
	__typename?: "restaurant_choice_variance_fields",
	cost?:number,
	id?:number,
	name_id?:number,
	restaurant_id?:number
}

/** order by variance() on columns of table "restaurant_choice" */
export type restaurant_choice_variance_order_by = {
		cost?:order_by,
	id?:order_by,
	name_id?:order_by,
	restaurant_id?:order_by
}

/** unique or primary key constraints on table "restaurant" */
export enum restaurant_constraint {
	restaurant_firebase_id_key = "restaurant_firebase_id_key",
	restaurant_payment_info_id_key = "restaurant_payment_info_id_key",
	restaurant_pkey = "restaurant_pkey"
}

/** input type for incrementing numeric columns in table "restaurant" */
export type restaurant_inc_input = {
		description_id?:number,
	id?:number,
	payment_info_id?:number,
	schedule_id?:number
}

/** input type for inserting data into table "restaurant" */
export type restaurant_insert_input = {
		approved?:boolean,
	categories?:restaurant_category_arr_rel_insert_input,
	description?:translation_obj_rel_insert_input,
	description_id?:number,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	location_gps?:geography,
	location_text?:string,
	name?:string,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
	orders?:restaurant_order_arr_rel_insert_input,
	payment_info?:service_provider_payment_info_obj_rel_insert_input,
	payment_info_id?:number,
	restaurant_operators?:restaurant_operator_arr_rel_insert_input,
	schedule_id?:number,
	self_delivery?:boolean,
	service_provider_type?:string
}

/** columns and relationships of "restaurant_item" */
export type restaurant_item = {
	__typename?: "restaurant_item",
	archived:boolean,
	available:boolean,
	/** An object relationship */
	category?:restaurant_category,
	category_id?:number,
	cost:money,
	/** An object relationship */
	description?:translation,
	description_id?:number,
	id:number,
	/** daily, special */
	item_type:string,
	/** An object relationship */
	name:translation,
	name_id:number,
	/** An array relationship */
	options:restaurant_item_option_map[],
	/** An aggregate relationship */
	options_aggregate:restaurant_item_option_map_aggregate,
	position:number,
	/** An object relationship */
	restaurant?:restaurant,
	restaurant_id:number,
	special_period_end?:timestamptz,
	special_period_start?:timestamptz
}

/** aggregated selection of "restaurant_item" */
export type restaurant_item_aggregate = {
	__typename?: "restaurant_item_aggregate",
	aggregate?:restaurant_item_aggregate_fields,
	nodes:restaurant_item[]
}

/** aggregate fields of "restaurant_item" */
export type restaurant_item_aggregate_fields = {
	__typename?: "restaurant_item_aggregate_fields",
	avg?:restaurant_item_avg_fields,
	count:number,
	max?:restaurant_item_max_fields,
	min?:restaurant_item_min_fields,
	stddev?:restaurant_item_stddev_fields,
	stddev_pop?:restaurant_item_stddev_pop_fields,
	stddev_samp?:restaurant_item_stddev_samp_fields,
	sum?:restaurant_item_sum_fields,
	var_pop?:restaurant_item_var_pop_fields,
	var_samp?:restaurant_item_var_samp_fields,
	variance?:restaurant_item_variance_fields
}

/** order by aggregate values of table "restaurant_item" */
export type restaurant_item_aggregate_order_by = {
		avg?:restaurant_item_avg_order_by,
	count?:order_by,
	max?:restaurant_item_max_order_by,
	min?:restaurant_item_min_order_by,
	stddev?:restaurant_item_stddev_order_by,
	stddev_pop?:restaurant_item_stddev_pop_order_by,
	stddev_samp?:restaurant_item_stddev_samp_order_by,
	sum?:restaurant_item_sum_order_by,
	var_pop?:restaurant_item_var_pop_order_by,
	var_samp?:restaurant_item_var_samp_order_by,
	variance?:restaurant_item_variance_order_by
}

/** input type for inserting array relation for remote table "restaurant_item" */
export type restaurant_item_arr_rel_insert_input = {
		data:restaurant_item_insert_input[],
	/** upsert condition */
	on_conflict?:restaurant_item_on_conflict
}

/** aggregate avg on columns */
export type restaurant_item_avg_fields = {
	__typename?: "restaurant_item_avg_fields",
	category_id?:number,
	cost?:number,
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by avg() on columns of table "restaurant_item" */
export type restaurant_item_avg_order_by = {
		category_id?:order_by,
	cost?:order_by,
	description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** Boolean expression to filter rows from the table "restaurant_item". All fields are combined with a logical 'AND'. */
export type restaurant_item_bool_exp = {
		_and?:restaurant_item_bool_exp[],
	_not?:restaurant_item_bool_exp,
	_or?:restaurant_item_bool_exp[],
	archived?:Boolean_comparison_exp,
	available?:Boolean_comparison_exp,
	category?:restaurant_category_bool_exp,
	category_id?:Int_comparison_exp,
	cost?:money_comparison_exp,
	description?:translation_bool_exp,
	description_id?:Int_comparison_exp,
	id?:Int_comparison_exp,
	item_type?:String_comparison_exp,
	name?:translation_bool_exp,
	name_id?:Int_comparison_exp,
	options?:restaurant_item_option_map_bool_exp,
	position?:Int_comparison_exp,
	restaurant?:restaurant_bool_exp,
	restaurant_id?:Int_comparison_exp,
	special_period_end?:timestamptz_comparison_exp,
	special_period_start?:timestamptz_comparison_exp
}

/** unique or primary key constraints on table "restaurant_item" */
export enum restaurant_item_constraint {
	restaurant_item_pkey = "restaurant_item_pkey"
}

/** input type for incrementing numeric columns in table "restaurant_item" */
export type restaurant_item_inc_input = {
		category_id?:number,
	cost?:money,
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** input type for inserting data into table "restaurant_item" */
export type restaurant_item_insert_input = {
		archived?:boolean,
	available?:boolean,
	category?:restaurant_category_obj_rel_insert_input,
	category_id?:number,
	cost?:money,
	description?:translation_obj_rel_insert_input,
	description_id?:number,
	id?:number,
	/** daily, special */
	item_type?:string,
	name?:translation_obj_rel_insert_input,
	name_id?:number,
	options?:restaurant_item_option_map_arr_rel_insert_input,
	position?:number,
	restaurant?:restaurant_obj_rel_insert_input,
	restaurant_id?:number,
	special_period_end?:timestamptz,
	special_period_start?:timestamptz
}

/** aggregate max on columns */
export type restaurant_item_max_fields = {
	__typename?: "restaurant_item_max_fields",
	category_id?:number,
	cost?:money,
	description_id?:number,
	id?:number,
	/** daily, special */
	item_type?:string,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	special_period_end?:timestamptz,
	special_period_start?:timestamptz
}

/** order by max() on columns of table "restaurant_item" */
export type restaurant_item_max_order_by = {
		category_id?:order_by,
	cost?:order_by,
	description_id?:order_by,
	id?:order_by,
	/** daily, special */
	item_type?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by,
	special_period_end?:order_by,
	special_period_start?:order_by
}

/** aggregate min on columns */
export type restaurant_item_min_fields = {
	__typename?: "restaurant_item_min_fields",
	category_id?:number,
	cost?:money,
	description_id?:number,
	id?:number,
	/** daily, special */
	item_type?:string,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	special_period_end?:timestamptz,
	special_period_start?:timestamptz
}

/** order by min() on columns of table "restaurant_item" */
export type restaurant_item_min_order_by = {
		category_id?:order_by,
	cost?:order_by,
	description_id?:order_by,
	id?:order_by,
	/** daily, special */
	item_type?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by,
	special_period_end?:order_by,
	special_period_start?:order_by
}

/** response of any mutation on the table "restaurant_item" */
export type restaurant_item_mutation_response = {
	__typename?: "restaurant_item_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant_item[]
}

/** input type for inserting object relation for remote table "restaurant_item" */
export type restaurant_item_obj_rel_insert_input = {
		data:restaurant_item_insert_input,
	/** upsert condition */
	on_conflict?:restaurant_item_on_conflict
}

/** on_conflict condition type for table "restaurant_item" */
export type restaurant_item_on_conflict = {
		constraint:restaurant_item_constraint,
	update_columns:restaurant_item_update_column[],
	where?:restaurant_item_bool_exp
}

/** columns and relationships of "restaurant_item_option_map" */
export type restaurant_item_option_map = {
	__typename?: "restaurant_item_option_map",
	id:number,
	item_id:number,
	/** An array relationship */
	item_options:restaurant_option[],
	/** An aggregate relationship */
	item_options_aggregate:restaurant_option_aggregate,
	option_id:number,
	/** An object relationship */
	restaurant?:restaurant,
	restaurant_id:number
}

/** aggregated selection of "restaurant_item_option_map" */
export type restaurant_item_option_map_aggregate = {
	__typename?: "restaurant_item_option_map_aggregate",
	aggregate?:restaurant_item_option_map_aggregate_fields,
	nodes:restaurant_item_option_map[]
}

/** aggregate fields of "restaurant_item_option_map" */
export type restaurant_item_option_map_aggregate_fields = {
	__typename?: "restaurant_item_option_map_aggregate_fields",
	avg?:restaurant_item_option_map_avg_fields,
	count:number,
	max?:restaurant_item_option_map_max_fields,
	min?:restaurant_item_option_map_min_fields,
	stddev?:restaurant_item_option_map_stddev_fields,
	stddev_pop?:restaurant_item_option_map_stddev_pop_fields,
	stddev_samp?:restaurant_item_option_map_stddev_samp_fields,
	sum?:restaurant_item_option_map_sum_fields,
	var_pop?:restaurant_item_option_map_var_pop_fields,
	var_samp?:restaurant_item_option_map_var_samp_fields,
	variance?:restaurant_item_option_map_variance_fields
}

/** order by aggregate values of table "restaurant_item_option_map" */
export type restaurant_item_option_map_aggregate_order_by = {
		avg?:restaurant_item_option_map_avg_order_by,
	count?:order_by,
	max?:restaurant_item_option_map_max_order_by,
	min?:restaurant_item_option_map_min_order_by,
	stddev?:restaurant_item_option_map_stddev_order_by,
	stddev_pop?:restaurant_item_option_map_stddev_pop_order_by,
	stddev_samp?:restaurant_item_option_map_stddev_samp_order_by,
	sum?:restaurant_item_option_map_sum_order_by,
	var_pop?:restaurant_item_option_map_var_pop_order_by,
	var_samp?:restaurant_item_option_map_var_samp_order_by,
	variance?:restaurant_item_option_map_variance_order_by
}

/** input type for inserting array relation for remote table "restaurant_item_option_map" */
export type restaurant_item_option_map_arr_rel_insert_input = {
		data:restaurant_item_option_map_insert_input[],
	/** upsert condition */
	on_conflict?:restaurant_item_option_map_on_conflict
}

/** aggregate avg on columns */
export type restaurant_item_option_map_avg_fields = {
	__typename?: "restaurant_item_option_map_avg_fields",
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by avg() on columns of table "restaurant_item_option_map" */
export type restaurant_item_option_map_avg_order_by = {
		id?:order_by,
	item_id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** Boolean expression to filter rows from the table "restaurant_item_option_map". All fields are combined with a logical 'AND'. */
export type restaurant_item_option_map_bool_exp = {
		_and?:restaurant_item_option_map_bool_exp[],
	_not?:restaurant_item_option_map_bool_exp,
	_or?:restaurant_item_option_map_bool_exp[],
	id?:Int_comparison_exp,
	item_id?:Int_comparison_exp,
	item_options?:restaurant_option_bool_exp,
	option_id?:Int_comparison_exp,
	restaurant?:restaurant_bool_exp,
	restaurant_id?:Int_comparison_exp
}

/** unique or primary key constraints on table "restaurant_item_option_map" */
export enum restaurant_item_option_map_constraint {
	restaurant_item_option_map_item_id_option_id_key = "restaurant_item_option_map_item_id_option_id_key",
	restaurant_item_option_map_pkey = "restaurant_item_option_map_pkey"
}

/** input type for incrementing numeric columns in table "restaurant_item_option_map" */
export type restaurant_item_option_map_inc_input = {
		id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** input type for inserting data into table "restaurant_item_option_map" */
export type restaurant_item_option_map_insert_input = {
		id?:number,
	item_id?:number,
	item_options?:restaurant_option_arr_rel_insert_input,
	option_id?:number,
	restaurant?:restaurant_obj_rel_insert_input,
	restaurant_id?:number
}

/** aggregate max on columns */
export type restaurant_item_option_map_max_fields = {
	__typename?: "restaurant_item_option_map_max_fields",
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by max() on columns of table "restaurant_item_option_map" */
export type restaurant_item_option_map_max_order_by = {
		id?:order_by,
	item_id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate min on columns */
export type restaurant_item_option_map_min_fields = {
	__typename?: "restaurant_item_option_map_min_fields",
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by min() on columns of table "restaurant_item_option_map" */
export type restaurant_item_option_map_min_order_by = {
		id?:order_by,
	item_id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** response of any mutation on the table "restaurant_item_option_map" */
export type restaurant_item_option_map_mutation_response = {
	__typename?: "restaurant_item_option_map_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant_item_option_map[]
}

/** on_conflict condition type for table "restaurant_item_option_map" */
export type restaurant_item_option_map_on_conflict = {
		constraint:restaurant_item_option_map_constraint,
	update_columns:restaurant_item_option_map_update_column[],
	where?:restaurant_item_option_map_bool_exp
}

/** Ordering options when selecting data from "restaurant_item_option_map". */
export type restaurant_item_option_map_order_by = {
		id?:order_by,
	item_id?:order_by,
	item_options_aggregate?:restaurant_option_aggregate_order_by,
	option_id?:order_by,
	restaurant?:restaurant_order_by,
	restaurant_id?:order_by
}

/** primary key columns input for table: restaurant_item_option_map */
export type restaurant_item_option_map_pk_columns_input = {
		id:number
}

/** select columns of table "restaurant_item_option_map" */
export enum restaurant_item_option_map_select_column {
	id = "id",
	item_id = "item_id",
	option_id = "option_id",
	restaurant_id = "restaurant_id"
}

/** input type for updating data in table "restaurant_item_option_map" */
export type restaurant_item_option_map_set_input = {
		id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** aggregate stddev on columns */
export type restaurant_item_option_map_stddev_fields = {
	__typename?: "restaurant_item_option_map_stddev_fields",
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by stddev() on columns of table "restaurant_item_option_map" */
export type restaurant_item_option_map_stddev_order_by = {
		id?:order_by,
	item_id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate stddev_pop on columns */
export type restaurant_item_option_map_stddev_pop_fields = {
	__typename?: "restaurant_item_option_map_stddev_pop_fields",
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by stddev_pop() on columns of table "restaurant_item_option_map" */
export type restaurant_item_option_map_stddev_pop_order_by = {
		id?:order_by,
	item_id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate stddev_samp on columns */
export type restaurant_item_option_map_stddev_samp_fields = {
	__typename?: "restaurant_item_option_map_stddev_samp_fields",
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by stddev_samp() on columns of table "restaurant_item_option_map" */
export type restaurant_item_option_map_stddev_samp_order_by = {
		id?:order_by,
	item_id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** Streaming cursor of the table "restaurant_item_option_map" */
export type restaurant_item_option_map_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_item_option_map_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_item_option_map_stream_cursor_value_input = {
		id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** aggregate sum on columns */
export type restaurant_item_option_map_sum_fields = {
	__typename?: "restaurant_item_option_map_sum_fields",
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by sum() on columns of table "restaurant_item_option_map" */
export type restaurant_item_option_map_sum_order_by = {
		id?:order_by,
	item_id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** update columns of table "restaurant_item_option_map" */
export enum restaurant_item_option_map_update_column {
	id = "id",
	item_id = "item_id",
	option_id = "option_id",
	restaurant_id = "restaurant_id"
}

export type restaurant_item_option_map_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_item_option_map_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_item_option_map_set_input,
	where:restaurant_item_option_map_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_item_option_map_var_pop_fields = {
	__typename?: "restaurant_item_option_map_var_pop_fields",
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by var_pop() on columns of table "restaurant_item_option_map" */
export type restaurant_item_option_map_var_pop_order_by = {
		id?:order_by,
	item_id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate var_samp on columns */
export type restaurant_item_option_map_var_samp_fields = {
	__typename?: "restaurant_item_option_map_var_samp_fields",
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by var_samp() on columns of table "restaurant_item_option_map" */
export type restaurant_item_option_map_var_samp_order_by = {
		id?:order_by,
	item_id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate variance on columns */
export type restaurant_item_option_map_variance_fields = {
	__typename?: "restaurant_item_option_map_variance_fields",
	id?:number,
	item_id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by variance() on columns of table "restaurant_item_option_map" */
export type restaurant_item_option_map_variance_order_by = {
		id?:order_by,
	item_id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** Ordering options when selecting data from "restaurant_item". */
export type restaurant_item_order_by = {
		archived?:order_by,
	available?:order_by,
	category?:restaurant_category_order_by,
	category_id?:order_by,
	cost?:order_by,
	description?:translation_order_by,
	description_id?:order_by,
	id?:order_by,
	item_type?:order_by,
	name?:translation_order_by,
	name_id?:order_by,
	options_aggregate?:restaurant_item_option_map_aggregate_order_by,
	position?:order_by,
	restaurant?:restaurant_order_by,
	restaurant_id?:order_by,
	special_period_end?:order_by,
	special_period_start?:order_by
}

/** primary key columns input for table: restaurant_item */
export type restaurant_item_pk_columns_input = {
		id:number
}

/** select columns of table "restaurant_item" */
export enum restaurant_item_select_column {
	archived = "archived",
	available = "available",
	category_id = "category_id",
	cost = "cost",
	description_id = "description_id",
	id = "id",
	item_type = "item_type",
	name_id = "name_id",
	position = "position",
	restaurant_id = "restaurant_id",
	special_period_end = "special_period_end",
	special_period_start = "special_period_start"
}

/** input type for updating data in table "restaurant_item" */
export type restaurant_item_set_input = {
		archived?:boolean,
	available?:boolean,
	category_id?:number,
	cost?:money,
	description_id?:number,
	id?:number,
	/** daily, special */
	item_type?:string,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	special_period_end?:timestamptz,
	special_period_start?:timestamptz
}

/** aggregate stddev on columns */
export type restaurant_item_stddev_fields = {
	__typename?: "restaurant_item_stddev_fields",
	category_id?:number,
	cost?:number,
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by stddev() on columns of table "restaurant_item" */
export type restaurant_item_stddev_order_by = {
		category_id?:order_by,
	cost?:order_by,
	description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** aggregate stddev_pop on columns */
export type restaurant_item_stddev_pop_fields = {
	__typename?: "restaurant_item_stddev_pop_fields",
	category_id?:number,
	cost?:number,
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by stddev_pop() on columns of table "restaurant_item" */
export type restaurant_item_stddev_pop_order_by = {
		category_id?:order_by,
	cost?:order_by,
	description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** aggregate stddev_samp on columns */
export type restaurant_item_stddev_samp_fields = {
	__typename?: "restaurant_item_stddev_samp_fields",
	category_id?:number,
	cost?:number,
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by stddev_samp() on columns of table "restaurant_item" */
export type restaurant_item_stddev_samp_order_by = {
		category_id?:order_by,
	cost?:order_by,
	description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** Streaming cursor of the table "restaurant_item" */
export type restaurant_item_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_item_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_item_stream_cursor_value_input = {
		archived?:boolean,
	available?:boolean,
	category_id?:number,
	cost?:money,
	description_id?:number,
	id?:number,
	/** daily, special */
	item_type?:string,
	name_id?:number,
	position?:number,
	restaurant_id?:number,
	special_period_end?:timestamptz,
	special_period_start?:timestamptz
}

/** aggregate sum on columns */
export type restaurant_item_sum_fields = {
	__typename?: "restaurant_item_sum_fields",
	category_id?:number,
	cost?:money,
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by sum() on columns of table "restaurant_item" */
export type restaurant_item_sum_order_by = {
		category_id?:order_by,
	cost?:order_by,
	description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** update columns of table "restaurant_item" */
export enum restaurant_item_update_column {
	archived = "archived",
	available = "available",
	category_id = "category_id",
	cost = "cost",
	description_id = "description_id",
	id = "id",
	item_type = "item_type",
	name_id = "name_id",
	position = "position",
	restaurant_id = "restaurant_id",
	special_period_end = "special_period_end",
	special_period_start = "special_period_start"
}

export type restaurant_item_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_item_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_item_set_input,
	where:restaurant_item_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_item_var_pop_fields = {
	__typename?: "restaurant_item_var_pop_fields",
	category_id?:number,
	cost?:number,
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by var_pop() on columns of table "restaurant_item" */
export type restaurant_item_var_pop_order_by = {
		category_id?:order_by,
	cost?:order_by,
	description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** aggregate var_samp on columns */
export type restaurant_item_var_samp_fields = {
	__typename?: "restaurant_item_var_samp_fields",
	category_id?:number,
	cost?:number,
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by var_samp() on columns of table "restaurant_item" */
export type restaurant_item_var_samp_order_by = {
		category_id?:order_by,
	cost?:order_by,
	description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** aggregate variance on columns */
export type restaurant_item_variance_fields = {
	__typename?: "restaurant_item_variance_fields",
	category_id?:number,
	cost?:number,
	description_id?:number,
	id?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by variance() on columns of table "restaurant_item" */
export type restaurant_item_variance_order_by = {
		category_id?:order_by,
	cost?:order_by,
	description_id?:order_by,
	id?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** aggregate max on columns */
export type restaurant_max_fields = {
	__typename?: "restaurant_max_fields",
	description_id?:number,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	location_text?:string,
	name?:string,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
	payment_info_id?:number,
	schedule_id?:number,
	service_provider_type?:string
}

/** aggregate min on columns */
export type restaurant_min_fields = {
	__typename?: "restaurant_min_fields",
	description_id?:number,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	location_text?:string,
	name?:string,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
	payment_info_id?:number,
	schedule_id?:number,
	service_provider_type?:string
}

/** response of any mutation on the table "restaurant" */
export type restaurant_mutation_response = {
	__typename?: "restaurant_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant[]
}

/** input type for inserting object relation for remote table "restaurant" */
export type restaurant_obj_rel_insert_input = {
		data:restaurant_insert_input,
	/** upsert condition */
	on_conflict?:restaurant_on_conflict
}

/** on_conflict condition type for table "restaurant" */
export type restaurant_on_conflict = {
		constraint:restaurant_constraint,
	update_columns:restaurant_update_column[],
	where?:restaurant_bool_exp
}

/** columns and relationships of "restaurant_operator" */
export type restaurant_operator = {
	__typename?: "restaurant_operator",
	app_version?:string,
	current_gps?:geography,
	id:number,
	/** A computed field, executes function "restaurant_operator_notification_token" */
	notification_token?:string,
	owner:boolean,
	/** An object relationship */
	restaurant?:restaurant,
	restaurant_id:number,
	/** awaiting_approval,authorized,banned */
	status:string,
	/** An object relationship */
	user:user,
	user_id:number
}

/** aggregated selection of "restaurant_operator" */
export type restaurant_operator_aggregate = {
	__typename?: "restaurant_operator_aggregate",
	aggregate?:restaurant_operator_aggregate_fields,
	nodes:restaurant_operator[]
}

/** aggregate fields of "restaurant_operator" */
export type restaurant_operator_aggregate_fields = {
	__typename?: "restaurant_operator_aggregate_fields",
	avg?:restaurant_operator_avg_fields,
	count:number,
	max?:restaurant_operator_max_fields,
	min?:restaurant_operator_min_fields,
	stddev?:restaurant_operator_stddev_fields,
	stddev_pop?:restaurant_operator_stddev_pop_fields,
	stddev_samp?:restaurant_operator_stddev_samp_fields,
	sum?:restaurant_operator_sum_fields,
	var_pop?:restaurant_operator_var_pop_fields,
	var_samp?:restaurant_operator_var_samp_fields,
	variance?:restaurant_operator_variance_fields
}

/** order by aggregate values of table "restaurant_operator" */
export type restaurant_operator_aggregate_order_by = {
		avg?:restaurant_operator_avg_order_by,
	count?:order_by,
	max?:restaurant_operator_max_order_by,
	min?:restaurant_operator_min_order_by,
	stddev?:restaurant_operator_stddev_order_by,
	stddev_pop?:restaurant_operator_stddev_pop_order_by,
	stddev_samp?:restaurant_operator_stddev_samp_order_by,
	sum?:restaurant_operator_sum_order_by,
	var_pop?:restaurant_operator_var_pop_order_by,
	var_samp?:restaurant_operator_var_samp_order_by,
	variance?:restaurant_operator_variance_order_by
}

/** input type for inserting array relation for remote table "restaurant_operator" */
export type restaurant_operator_arr_rel_insert_input = {
		data:restaurant_operator_insert_input[],
	/** upsert condition */
	on_conflict?:restaurant_operator_on_conflict
}

/** aggregate avg on columns */
export type restaurant_operator_avg_fields = {
	__typename?: "restaurant_operator_avg_fields",
	id?:number,
	restaurant_id?:number,
	user_id?:number
}

/** order by avg() on columns of table "restaurant_operator" */
export type restaurant_operator_avg_order_by = {
		id?:order_by,
	restaurant_id?:order_by,
	user_id?:order_by
}

/** Boolean expression to filter rows from the table "restaurant_operator". All fields are combined with a logical 'AND'. */
export type restaurant_operator_bool_exp = {
		_and?:restaurant_operator_bool_exp[],
	_not?:restaurant_operator_bool_exp,
	_or?:restaurant_operator_bool_exp[],
	app_version?:String_comparison_exp,
	current_gps?:geography_comparison_exp,
	id?:Int_comparison_exp,
	notification_token?:String_comparison_exp,
	owner?:Boolean_comparison_exp,
	restaurant?:restaurant_bool_exp,
	restaurant_id?:Int_comparison_exp,
	status?:String_comparison_exp,
	user?:user_bool_exp,
	user_id?:Int_comparison_exp
}

/** unique or primary key constraints on table "restaurant_operator" */
export enum restaurant_operator_constraint {
	restaurant_operator_pkey = "restaurant_operator_pkey"
}

/** input type for incrementing numeric columns in table "restaurant_operator" */
export type restaurant_operator_inc_input = {
		id?:number,
	restaurant_id?:number,
	user_id?:number
}

/** input type for inserting data into table "restaurant_operator" */
export type restaurant_operator_insert_input = {
		app_version?:string,
	current_gps?:geography,
	id?:number,
	owner?:boolean,
	restaurant?:restaurant_obj_rel_insert_input,
	restaurant_id?:number,
	/** awaiting_approval,authorized,banned */
	status?:string,
	user?:user_obj_rel_insert_input,
	user_id?:number
}

/** aggregate max on columns */
export type restaurant_operator_max_fields = {
	__typename?: "restaurant_operator_max_fields",
	app_version?:string,
	id?:number,
	restaurant_id?:number,
	/** awaiting_approval,authorized,banned */
	status?:string,
	user_id?:number
}

/** order by max() on columns of table "restaurant_operator" */
export type restaurant_operator_max_order_by = {
		app_version?:order_by,
	id?:order_by,
	restaurant_id?:order_by,
	/** awaiting_approval,authorized,banned */
	status?:order_by,
	user_id?:order_by
}

/** aggregate min on columns */
export type restaurant_operator_min_fields = {
	__typename?: "restaurant_operator_min_fields",
	app_version?:string,
	id?:number,
	restaurant_id?:number,
	/** awaiting_approval,authorized,banned */
	status?:string,
	user_id?:number
}

/** order by min() on columns of table "restaurant_operator" */
export type restaurant_operator_min_order_by = {
		app_version?:order_by,
	id?:order_by,
	restaurant_id?:order_by,
	/** awaiting_approval,authorized,banned */
	status?:order_by,
	user_id?:order_by
}

/** response of any mutation on the table "restaurant_operator" */
export type restaurant_operator_mutation_response = {
	__typename?: "restaurant_operator_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant_operator[]
}

/** on_conflict condition type for table "restaurant_operator" */
export type restaurant_operator_on_conflict = {
		constraint:restaurant_operator_constraint,
	update_columns:restaurant_operator_update_column[],
	where?:restaurant_operator_bool_exp
}

/** Ordering options when selecting data from "restaurant_operator". */
export type restaurant_operator_order_by = {
		app_version?:order_by,
	current_gps?:order_by,
	id?:order_by,
	notification_token?:order_by,
	owner?:order_by,
	restaurant?:restaurant_order_by,
	restaurant_id?:order_by,
	status?:order_by,
	user?:user_order_by,
	user_id?:order_by
}

/** primary key columns input for table: restaurant_operator */
export type restaurant_operator_pk_columns_input = {
		id:number
}

/** select columns of table "restaurant_operator" */
export enum restaurant_operator_select_column {
	app_version = "app_version",
	current_gps = "current_gps",
	id = "id",
	owner = "owner",
	restaurant_id = "restaurant_id",
	status = "status",
	user_id = "user_id"
}

/** input type for updating data in table "restaurant_operator" */
export type restaurant_operator_set_input = {
		app_version?:string,
	current_gps?:geography,
	id?:number,
	owner?:boolean,
	restaurant_id?:number,
	/** awaiting_approval,authorized,banned */
	status?:string,
	user_id?:number
}

/** aggregate stddev on columns */
export type restaurant_operator_stddev_fields = {
	__typename?: "restaurant_operator_stddev_fields",
	id?:number,
	restaurant_id?:number,
	user_id?:number
}

/** order by stddev() on columns of table "restaurant_operator" */
export type restaurant_operator_stddev_order_by = {
		id?:order_by,
	restaurant_id?:order_by,
	user_id?:order_by
}

/** aggregate stddev_pop on columns */
export type restaurant_operator_stddev_pop_fields = {
	__typename?: "restaurant_operator_stddev_pop_fields",
	id?:number,
	restaurant_id?:number,
	user_id?:number
}

/** order by stddev_pop() on columns of table "restaurant_operator" */
export type restaurant_operator_stddev_pop_order_by = {
		id?:order_by,
	restaurant_id?:order_by,
	user_id?:order_by
}

/** aggregate stddev_samp on columns */
export type restaurant_operator_stddev_samp_fields = {
	__typename?: "restaurant_operator_stddev_samp_fields",
	id?:number,
	restaurant_id?:number,
	user_id?:number
}

/** order by stddev_samp() on columns of table "restaurant_operator" */
export type restaurant_operator_stddev_samp_order_by = {
		id?:order_by,
	restaurant_id?:order_by,
	user_id?:order_by
}

/** Streaming cursor of the table "restaurant_operator" */
export type restaurant_operator_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_operator_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_operator_stream_cursor_value_input = {
		app_version?:string,
	current_gps?:geography,
	id?:number,
	owner?:boolean,
	restaurant_id?:number,
	/** awaiting_approval,authorized,banned */
	status?:string,
	user_id?:number
}

/** aggregate sum on columns */
export type restaurant_operator_sum_fields = {
	__typename?: "restaurant_operator_sum_fields",
	id?:number,
	restaurant_id?:number,
	user_id?:number
}

/** order by sum() on columns of table "restaurant_operator" */
export type restaurant_operator_sum_order_by = {
		id?:order_by,
	restaurant_id?:order_by,
	user_id?:order_by
}

/** update columns of table "restaurant_operator" */
export enum restaurant_operator_update_column {
	app_version = "app_version",
	current_gps = "current_gps",
	id = "id",
	owner = "owner",
	restaurant_id = "restaurant_id",
	status = "status",
	user_id = "user_id"
}

export type restaurant_operator_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_operator_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_operator_set_input,
	where:restaurant_operator_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_operator_var_pop_fields = {
	__typename?: "restaurant_operator_var_pop_fields",
	id?:number,
	restaurant_id?:number,
	user_id?:number
}

/** order by var_pop() on columns of table "restaurant_operator" */
export type restaurant_operator_var_pop_order_by = {
		id?:order_by,
	restaurant_id?:order_by,
	user_id?:order_by
}

/** aggregate var_samp on columns */
export type restaurant_operator_var_samp_fields = {
	__typename?: "restaurant_operator_var_samp_fields",
	id?:number,
	restaurant_id?:number,
	user_id?:number
}

/** order by var_samp() on columns of table "restaurant_operator" */
export type restaurant_operator_var_samp_order_by = {
		id?:order_by,
	restaurant_id?:order_by,
	user_id?:order_by
}

/** aggregate variance on columns */
export type restaurant_operator_variance_fields = {
	__typename?: "restaurant_operator_variance_fields",
	id?:number,
	restaurant_id?:number,
	user_id?:number
}

/** order by variance() on columns of table "restaurant_operator" */
export type restaurant_operator_variance_order_by = {
		id?:order_by,
	restaurant_id?:order_by,
	user_id?:order_by
}

/** columns and relationships of "restaurant_option" */
export type restaurant_option = {
	__typename?: "restaurant_option",
	/** An array relationship */
	choices:restaurant_option_choice_map[],
	/** An aggregate relationship */
	choices_aggregate:restaurant_option_choice_map_aggregate,
	cost_per_extra:money,
	free_choice:number,
	id:number,
	/** An array relationship */
	items:restaurant_item_option_map[],
	/** An aggregate relationship */
	items_aggregate:restaurant_item_option_map_aggregate,
	maximum_choice:number,
	minimum_choice:number,
	/** An object relationship */
	name:translation,
	name_id:number,
	option_type:string,
	position:number,
	/** An object relationship */
	restaurant:restaurant,
	restaurant_id:number
}

/** aggregated selection of "restaurant_option" */
export type restaurant_option_aggregate = {
	__typename?: "restaurant_option_aggregate",
	aggregate?:restaurant_option_aggregate_fields,
	nodes:restaurant_option[]
}

/** aggregate fields of "restaurant_option" */
export type restaurant_option_aggregate_fields = {
	__typename?: "restaurant_option_aggregate_fields",
	avg?:restaurant_option_avg_fields,
	count:number,
	max?:restaurant_option_max_fields,
	min?:restaurant_option_min_fields,
	stddev?:restaurant_option_stddev_fields,
	stddev_pop?:restaurant_option_stddev_pop_fields,
	stddev_samp?:restaurant_option_stddev_samp_fields,
	sum?:restaurant_option_sum_fields,
	var_pop?:restaurant_option_var_pop_fields,
	var_samp?:restaurant_option_var_samp_fields,
	variance?:restaurant_option_variance_fields
}

/** order by aggregate values of table "restaurant_option" */
export type restaurant_option_aggregate_order_by = {
		avg?:restaurant_option_avg_order_by,
	count?:order_by,
	max?:restaurant_option_max_order_by,
	min?:restaurant_option_min_order_by,
	stddev?:restaurant_option_stddev_order_by,
	stddev_pop?:restaurant_option_stddev_pop_order_by,
	stddev_samp?:restaurant_option_stddev_samp_order_by,
	sum?:restaurant_option_sum_order_by,
	var_pop?:restaurant_option_var_pop_order_by,
	var_samp?:restaurant_option_var_samp_order_by,
	variance?:restaurant_option_variance_order_by
}

/** input type for inserting array relation for remote table "restaurant_option" */
export type restaurant_option_arr_rel_insert_input = {
		data:restaurant_option_insert_input[],
	/** upsert condition */
	on_conflict?:restaurant_option_on_conflict
}

/** aggregate avg on columns */
export type restaurant_option_avg_fields = {
	__typename?: "restaurant_option_avg_fields",
	cost_per_extra?:number,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by avg() on columns of table "restaurant_option" */
export type restaurant_option_avg_order_by = {
		cost_per_extra?:order_by,
	free_choice?:order_by,
	id?:order_by,
	maximum_choice?:order_by,
	minimum_choice?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** Boolean expression to filter rows from the table "restaurant_option". All fields are combined with a logical 'AND'. */
export type restaurant_option_bool_exp = {
		_and?:restaurant_option_bool_exp[],
	_not?:restaurant_option_bool_exp,
	_or?:restaurant_option_bool_exp[],
	choices?:restaurant_option_choice_map_bool_exp,
	cost_per_extra?:money_comparison_exp,
	free_choice?:Int_comparison_exp,
	id?:Int_comparison_exp,
	items?:restaurant_item_option_map_bool_exp,
	maximum_choice?:Int_comparison_exp,
	minimum_choice?:Int_comparison_exp,
	name?:translation_bool_exp,
	name_id?:Int_comparison_exp,
	option_type?:String_comparison_exp,
	position?:Int_comparison_exp,
	restaurant?:restaurant_bool_exp,
	restaurant_id?:Int_comparison_exp
}

/** columns and relationships of "restaurant_option_choice_map" */
export type restaurant_option_choice_map = {
	__typename?: "restaurant_option_choice_map",
	choice_id:number,
	id:number,
	/** An array relationship */
	option_choices:restaurant_choice[],
	/** An aggregate relationship */
	option_choices_aggregate:restaurant_choice_aggregate,
	option_id:number,
	/** An object relationship */
	restaurant:restaurant,
	restaurant_id:number
}

/** aggregated selection of "restaurant_option_choice_map" */
export type restaurant_option_choice_map_aggregate = {
	__typename?: "restaurant_option_choice_map_aggregate",
	aggregate?:restaurant_option_choice_map_aggregate_fields,
	nodes:restaurant_option_choice_map[]
}

/** aggregate fields of "restaurant_option_choice_map" */
export type restaurant_option_choice_map_aggregate_fields = {
	__typename?: "restaurant_option_choice_map_aggregate_fields",
	avg?:restaurant_option_choice_map_avg_fields,
	count:number,
	max?:restaurant_option_choice_map_max_fields,
	min?:restaurant_option_choice_map_min_fields,
	stddev?:restaurant_option_choice_map_stddev_fields,
	stddev_pop?:restaurant_option_choice_map_stddev_pop_fields,
	stddev_samp?:restaurant_option_choice_map_stddev_samp_fields,
	sum?:restaurant_option_choice_map_sum_fields,
	var_pop?:restaurant_option_choice_map_var_pop_fields,
	var_samp?:restaurant_option_choice_map_var_samp_fields,
	variance?:restaurant_option_choice_map_variance_fields
}

/** order by aggregate values of table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_aggregate_order_by = {
		avg?:restaurant_option_choice_map_avg_order_by,
	count?:order_by,
	max?:restaurant_option_choice_map_max_order_by,
	min?:restaurant_option_choice_map_min_order_by,
	stddev?:restaurant_option_choice_map_stddev_order_by,
	stddev_pop?:restaurant_option_choice_map_stddev_pop_order_by,
	stddev_samp?:restaurant_option_choice_map_stddev_samp_order_by,
	sum?:restaurant_option_choice_map_sum_order_by,
	var_pop?:restaurant_option_choice_map_var_pop_order_by,
	var_samp?:restaurant_option_choice_map_var_samp_order_by,
	variance?:restaurant_option_choice_map_variance_order_by
}

/** input type for inserting array relation for remote table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_arr_rel_insert_input = {
		data:restaurant_option_choice_map_insert_input[],
	/** upsert condition */
	on_conflict?:restaurant_option_choice_map_on_conflict
}

/** aggregate avg on columns */
export type restaurant_option_choice_map_avg_fields = {
	__typename?: "restaurant_option_choice_map_avg_fields",
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by avg() on columns of table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_avg_order_by = {
		choice_id?:order_by,
	id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** Boolean expression to filter rows from the table "restaurant_option_choice_map".
All fields are combined with a logical 'AND'. */
export type restaurant_option_choice_map_bool_exp = {
		_and?:restaurant_option_choice_map_bool_exp[],
	_not?:restaurant_option_choice_map_bool_exp,
	_or?:restaurant_option_choice_map_bool_exp[],
	choice_id?:Int_comparison_exp,
	id?:Int_comparison_exp,
	option_choices?:restaurant_choice_bool_exp,
	option_id?:Int_comparison_exp,
	restaurant?:restaurant_bool_exp,
	restaurant_id?:Int_comparison_exp
}

/** unique or primary key constraints on table "restaurant_option_choice_map" */
export enum restaurant_option_choice_map_constraint {
	restaurant_option_choice_map_option_id_choice_id_key = "restaurant_option_choice_map_option_id_choice_id_key",
	restaurant_option_choice_map_pkey = "restaurant_option_choice_map_pkey"
}

/** input type for incrementing numeric columns in table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_inc_input = {
		choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** input type for inserting data into table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_insert_input = {
		choice_id?:number,
	id?:number,
	option_choices?:restaurant_choice_arr_rel_insert_input,
	option_id?:number,
	restaurant?:restaurant_obj_rel_insert_input,
	restaurant_id?:number
}

/** aggregate max on columns */
export type restaurant_option_choice_map_max_fields = {
	__typename?: "restaurant_option_choice_map_max_fields",
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by max() on columns of table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_max_order_by = {
		choice_id?:order_by,
	id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate min on columns */
export type restaurant_option_choice_map_min_fields = {
	__typename?: "restaurant_option_choice_map_min_fields",
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by min() on columns of table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_min_order_by = {
		choice_id?:order_by,
	id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** response of any mutation on the table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_mutation_response = {
	__typename?: "restaurant_option_choice_map_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant_option_choice_map[]
}

/** on_conflict condition type for table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_on_conflict = {
		constraint:restaurant_option_choice_map_constraint,
	update_columns:restaurant_option_choice_map_update_column[],
	where?:restaurant_option_choice_map_bool_exp
}

/** Ordering options when selecting data from "restaurant_option_choice_map". */
export type restaurant_option_choice_map_order_by = {
		choice_id?:order_by,
	id?:order_by,
	option_choices_aggregate?:restaurant_choice_aggregate_order_by,
	option_id?:order_by,
	restaurant?:restaurant_order_by,
	restaurant_id?:order_by
}

/** primary key columns input for table: restaurant_option_choice_map */
export type restaurant_option_choice_map_pk_columns_input = {
		id:number
}

/** select columns of table "restaurant_option_choice_map" */
export enum restaurant_option_choice_map_select_column {
	choice_id = "choice_id",
	id = "id",
	option_id = "option_id",
	restaurant_id = "restaurant_id"
}

/** input type for updating data in table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_set_input = {
		choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** aggregate stddev on columns */
export type restaurant_option_choice_map_stddev_fields = {
	__typename?: "restaurant_option_choice_map_stddev_fields",
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by stddev() on columns of table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_stddev_order_by = {
		choice_id?:order_by,
	id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate stddev_pop on columns */
export type restaurant_option_choice_map_stddev_pop_fields = {
	__typename?: "restaurant_option_choice_map_stddev_pop_fields",
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by stddev_pop() on columns of table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_stddev_pop_order_by = {
		choice_id?:order_by,
	id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate stddev_samp on columns */
export type restaurant_option_choice_map_stddev_samp_fields = {
	__typename?: "restaurant_option_choice_map_stddev_samp_fields",
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by stddev_samp() on columns of table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_stddev_samp_order_by = {
		choice_id?:order_by,
	id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** Streaming cursor of the table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_option_choice_map_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_option_choice_map_stream_cursor_value_input = {
		choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** aggregate sum on columns */
export type restaurant_option_choice_map_sum_fields = {
	__typename?: "restaurant_option_choice_map_sum_fields",
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by sum() on columns of table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_sum_order_by = {
		choice_id?:order_by,
	id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** update columns of table "restaurant_option_choice_map" */
export enum restaurant_option_choice_map_update_column {
	choice_id = "choice_id",
	id = "id",
	option_id = "option_id",
	restaurant_id = "restaurant_id"
}

export type restaurant_option_choice_map_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_option_choice_map_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_option_choice_map_set_input,
	where:restaurant_option_choice_map_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_option_choice_map_var_pop_fields = {
	__typename?: "restaurant_option_choice_map_var_pop_fields",
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by var_pop() on columns of table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_var_pop_order_by = {
		choice_id?:order_by,
	id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate var_samp on columns */
export type restaurant_option_choice_map_var_samp_fields = {
	__typename?: "restaurant_option_choice_map_var_samp_fields",
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by var_samp() on columns of table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_var_samp_order_by = {
		choice_id?:order_by,
	id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** aggregate variance on columns */
export type restaurant_option_choice_map_variance_fields = {
	__typename?: "restaurant_option_choice_map_variance_fields",
	choice_id?:number,
	id?:number,
	option_id?:number,
	restaurant_id?:number
}

/** order by variance() on columns of table "restaurant_option_choice_map" */
export type restaurant_option_choice_map_variance_order_by = {
		choice_id?:order_by,
	id?:order_by,
	option_id?:order_by,
	restaurant_id?:order_by
}

/** unique or primary key constraints on table "restaurant_option" */
export enum restaurant_option_constraint {
	restaurant_option_pkey = "restaurant_option_pkey"
}

/** input type for incrementing numeric columns in table "restaurant_option" */
export type restaurant_option_inc_input = {
		cost_per_extra?:money,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** input type for inserting data into table "restaurant_option" */
export type restaurant_option_insert_input = {
		choices?:restaurant_option_choice_map_arr_rel_insert_input,
	cost_per_extra?:money,
	free_choice?:number,
	id?:number,
	items?:restaurant_item_option_map_arr_rel_insert_input,
	maximum_choice?:number,
	minimum_choice?:number,
	name?:translation_obj_rel_insert_input,
	name_id?:number,
	option_type?:string,
	position?:number,
	restaurant?:restaurant_obj_rel_insert_input,
	restaurant_id?:number
}

/** aggregate max on columns */
export type restaurant_option_max_fields = {
	__typename?: "restaurant_option_max_fields",
	cost_per_extra?:money,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	option_type?:string,
	position?:number,
	restaurant_id?:number
}

/** order by max() on columns of table "restaurant_option" */
export type restaurant_option_max_order_by = {
		cost_per_extra?:order_by,
	free_choice?:order_by,
	id?:order_by,
	maximum_choice?:order_by,
	minimum_choice?:order_by,
	name_id?:order_by,
	option_type?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** aggregate min on columns */
export type restaurant_option_min_fields = {
	__typename?: "restaurant_option_min_fields",
	cost_per_extra?:money,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	option_type?:string,
	position?:number,
	restaurant_id?:number
}

/** order by min() on columns of table "restaurant_option" */
export type restaurant_option_min_order_by = {
		cost_per_extra?:order_by,
	free_choice?:order_by,
	id?:order_by,
	maximum_choice?:order_by,
	minimum_choice?:order_by,
	name_id?:order_by,
	option_type?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** response of any mutation on the table "restaurant_option" */
export type restaurant_option_mutation_response = {
	__typename?: "restaurant_option_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant_option[]
}

/** on_conflict condition type for table "restaurant_option" */
export type restaurant_option_on_conflict = {
		constraint:restaurant_option_constraint,
	update_columns:restaurant_option_update_column[],
	where?:restaurant_option_bool_exp
}

/** Ordering options when selecting data from "restaurant_option". */
export type restaurant_option_order_by = {
		choices_aggregate?:restaurant_option_choice_map_aggregate_order_by,
	cost_per_extra?:order_by,
	free_choice?:order_by,
	id?:order_by,
	items_aggregate?:restaurant_item_option_map_aggregate_order_by,
	maximum_choice?:order_by,
	minimum_choice?:order_by,
	name?:translation_order_by,
	name_id?:order_by,
	option_type?:order_by,
	position?:order_by,
	restaurant?:restaurant_order_by,
	restaurant_id?:order_by
}

/** primary key columns input for table: restaurant_option */
export type restaurant_option_pk_columns_input = {
		id:number
}

/** select columns of table "restaurant_option" */
export enum restaurant_option_select_column {
	cost_per_extra = "cost_per_extra",
	free_choice = "free_choice",
	id = "id",
	maximum_choice = "maximum_choice",
	minimum_choice = "minimum_choice",
	name_id = "name_id",
	option_type = "option_type",
	position = "position",
	restaurant_id = "restaurant_id"
}

/** input type for updating data in table "restaurant_option" */
export type restaurant_option_set_input = {
		cost_per_extra?:money,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	option_type?:string,
	position?:number,
	restaurant_id?:number
}

/** aggregate stddev on columns */
export type restaurant_option_stddev_fields = {
	__typename?: "restaurant_option_stddev_fields",
	cost_per_extra?:number,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by stddev() on columns of table "restaurant_option" */
export type restaurant_option_stddev_order_by = {
		cost_per_extra?:order_by,
	free_choice?:order_by,
	id?:order_by,
	maximum_choice?:order_by,
	minimum_choice?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** aggregate stddev_pop on columns */
export type restaurant_option_stddev_pop_fields = {
	__typename?: "restaurant_option_stddev_pop_fields",
	cost_per_extra?:number,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by stddev_pop() on columns of table "restaurant_option" */
export type restaurant_option_stddev_pop_order_by = {
		cost_per_extra?:order_by,
	free_choice?:order_by,
	id?:order_by,
	maximum_choice?:order_by,
	minimum_choice?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** aggregate stddev_samp on columns */
export type restaurant_option_stddev_samp_fields = {
	__typename?: "restaurant_option_stddev_samp_fields",
	cost_per_extra?:number,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by stddev_samp() on columns of table "restaurant_option" */
export type restaurant_option_stddev_samp_order_by = {
		cost_per_extra?:order_by,
	free_choice?:order_by,
	id?:order_by,
	maximum_choice?:order_by,
	minimum_choice?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** Streaming cursor of the table "restaurant_option" */
export type restaurant_option_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_option_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_option_stream_cursor_value_input = {
		cost_per_extra?:money,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	option_type?:string,
	position?:number,
	restaurant_id?:number
}

/** aggregate sum on columns */
export type restaurant_option_sum_fields = {
	__typename?: "restaurant_option_sum_fields",
	cost_per_extra?:money,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by sum() on columns of table "restaurant_option" */
export type restaurant_option_sum_order_by = {
		cost_per_extra?:order_by,
	free_choice?:order_by,
	id?:order_by,
	maximum_choice?:order_by,
	minimum_choice?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** update columns of table "restaurant_option" */
export enum restaurant_option_update_column {
	cost_per_extra = "cost_per_extra",
	free_choice = "free_choice",
	id = "id",
	maximum_choice = "maximum_choice",
	minimum_choice = "minimum_choice",
	name_id = "name_id",
	option_type = "option_type",
	position = "position",
	restaurant_id = "restaurant_id"
}

export type restaurant_option_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_option_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_option_set_input,
	where:restaurant_option_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_option_var_pop_fields = {
	__typename?: "restaurant_option_var_pop_fields",
	cost_per_extra?:number,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by var_pop() on columns of table "restaurant_option" */
export type restaurant_option_var_pop_order_by = {
		cost_per_extra?:order_by,
	free_choice?:order_by,
	id?:order_by,
	maximum_choice?:order_by,
	minimum_choice?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** aggregate var_samp on columns */
export type restaurant_option_var_samp_fields = {
	__typename?: "restaurant_option_var_samp_fields",
	cost_per_extra?:number,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by var_samp() on columns of table "restaurant_option" */
export type restaurant_option_var_samp_order_by = {
		cost_per_extra?:order_by,
	free_choice?:order_by,
	id?:order_by,
	maximum_choice?:order_by,
	minimum_choice?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** aggregate variance on columns */
export type restaurant_option_variance_fields = {
	__typename?: "restaurant_option_variance_fields",
	cost_per_extra?:number,
	free_choice?:number,
	id?:number,
	maximum_choice?:number,
	minimum_choice?:number,
	name_id?:number,
	position?:number,
	restaurant_id?:number
}

/** order by variance() on columns of table "restaurant_option" */
export type restaurant_option_variance_order_by = {
		cost_per_extra?:order_by,
	free_choice?:order_by,
	id?:order_by,
	maximum_choice?:order_by,
	minimum_choice?:order_by,
	name_id?:order_by,
	position?:order_by,
	restaurant_id?:order_by
}

/** columns and relationships of "restaurant_order" */
export type restaurant_order = {
	__typename?: "restaurant_order",
	actual_food_ready_time?:timestamptz,
	cancellation_time?:timestamptz,
	/** An object relationship */
	chat:chat,
	chat_id:number,
	/** An object relationship */
	customer:customer,
	customer_app_type:string,
	customer_id:number,
	/** An object relationship */
	delivery?:delivery_order,
	delivery_cost:money,
	delivery_id?:number,
	estimated_food_ready_time?:timestamptz,
	firebase_id?:string,
	id:number,
	/** An array relationship */
	items:restaurant_order_item[],
	/** An aggregate relationship */
	items_aggregate:restaurant_order_item_aggregate,
	/** A computed field, executes function "itemscost" */
	items_cost?:money,
	notes?:string,
	order_time:timestamptz,
	order_type:string,
	payment_type:string,
	refund_amount:number,
	/** An object relationship */
	restaurant:restaurant,
	restaurant_id:number,
	/** An object relationship */
	review?:review,
	review_id?:number,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status:string,
	stripe_payment_id?:number,
	tax:float8,
	to_location_address?:string,
	to_location_gps?:geography,
	/** A computed field, executes function "totalcost" */
	total_cost?:money
}

/** aggregated selection of "restaurant_order" */
export type restaurant_order_aggregate = {
	__typename?: "restaurant_order_aggregate",
	aggregate?:restaurant_order_aggregate_fields,
	nodes:restaurant_order[]
}

/** aggregate fields of "restaurant_order" */
export type restaurant_order_aggregate_fields = {
	__typename?: "restaurant_order_aggregate_fields",
	avg?:restaurant_order_avg_fields,
	count:number,
	max?:restaurant_order_max_fields,
	min?:restaurant_order_min_fields,
	stddev?:restaurant_order_stddev_fields,
	stddev_pop?:restaurant_order_stddev_pop_fields,
	stddev_samp?:restaurant_order_stddev_samp_fields,
	sum?:restaurant_order_sum_fields,
	var_pop?:restaurant_order_var_pop_fields,
	var_samp?:restaurant_order_var_samp_fields,
	variance?:restaurant_order_variance_fields
}

/** order by aggregate values of table "restaurant_order" */
export type restaurant_order_aggregate_order_by = {
		avg?:restaurant_order_avg_order_by,
	count?:order_by,
	max?:restaurant_order_max_order_by,
	min?:restaurant_order_min_order_by,
	stddev?:restaurant_order_stddev_order_by,
	stddev_pop?:restaurant_order_stddev_pop_order_by,
	stddev_samp?:restaurant_order_stddev_samp_order_by,
	sum?:restaurant_order_sum_order_by,
	var_pop?:restaurant_order_var_pop_order_by,
	var_samp?:restaurant_order_var_samp_order_by,
	variance?:restaurant_order_variance_order_by
}

/** input type for inserting array relation for remote table "restaurant_order" */
export type restaurant_order_arr_rel_insert_input = {
		data:restaurant_order_insert_input[],
	/** upsert condition */
	on_conflict?:restaurant_order_on_conflict
}

/** aggregate avg on columns */
export type restaurant_order_avg_fields = {
	__typename?: "restaurant_order_avg_fields",
	chat_id?:number,
	customer_id?:number,
	delivery_cost?:number,
	delivery_id?:number,
	id?:number,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	stripe_payment_id?:number,
	tax?:number
}

/** order by avg() on columns of table "restaurant_order" */
export type restaurant_order_avg_order_by = {
		chat_id?:order_by,
	customer_id?:order_by,
	delivery_cost?:order_by,
	delivery_id?:order_by,
	id?:order_by,
	refund_amount?:order_by,
	restaurant_id?:order_by,
	review_id?:order_by,
	stripe_payment_id?:order_by,
	tax?:order_by
}

/** Boolean expression to filter rows from the table "restaurant_order". All fields are combined with a logical 'AND'. */
export type restaurant_order_bool_exp = {
		_and?:restaurant_order_bool_exp[],
	_not?:restaurant_order_bool_exp,
	_or?:restaurant_order_bool_exp[],
	actual_food_ready_time?:timestamptz_comparison_exp,
	cancellation_time?:timestamptz_comparison_exp,
	chat?:chat_bool_exp,
	chat_id?:Int_comparison_exp,
	customer?:customer_bool_exp,
	customer_app_type?:String_comparison_exp,
	customer_id?:Int_comparison_exp,
	delivery?:delivery_order_bool_exp,
	delivery_cost?:money_comparison_exp,
	delivery_id?:Int_comparison_exp,
	estimated_food_ready_time?:timestamptz_comparison_exp,
	firebase_id?:String_comparison_exp,
	id?:Int_comparison_exp,
	items?:restaurant_order_item_bool_exp,
	items_cost?:money_comparison_exp,
	notes?:String_comparison_exp,
	order_time?:timestamptz_comparison_exp,
	order_type?:String_comparison_exp,
	payment_type?:String_comparison_exp,
	refund_amount?:Int_comparison_exp,
	restaurant?:restaurant_bool_exp,
	restaurant_id?:Int_comparison_exp,
	review?:review_bool_exp,
	review_id?:Int_comparison_exp,
	status?:String_comparison_exp,
	stripe_payment_id?:Int_comparison_exp,
	tax?:float8_comparison_exp,
	to_location_address?:String_comparison_exp,
	to_location_gps?:geography_comparison_exp,
	total_cost?:money_comparison_exp
}

/** Ordering options when selecting data from "restaurant". */
export type restaurant_order_by = {
		approved?:order_by,
	categories_aggregate?:restaurant_category_aggregate_order_by,
	description?:translation_order_by,
	description_id?:order_by,
	firebase_id?:order_by,
	id?:order_by,
	image?:order_by,
	language_id?:order_by,
	location_gps?:order_by,
	location_text?:order_by,
	name?:order_by,
	open_status?:order_by,
	orders_aggregate?:restaurant_order_aggregate_order_by,
	payment_info?:service_provider_payment_info_order_by,
	payment_info_id?:order_by,
	restaurant_operators_aggregate?:restaurant_operator_aggregate_order_by,
	schedule_id?:order_by,
	self_delivery?:order_by,
	service_provider_type?:order_by,
	specials_aggregate?:restaurant_item_aggregate_order_by
}

/** unique or primary key constraints on table "restaurant_order" */
export enum restaurant_order_constraint {
	restaurant_order_delivery_id_key = "restaurant_order_delivery_id_key",
	restaurant_order_firebase_id_key = "restaurant_order_firebase_id_key",
	restaurant_order_pkey = "restaurant_order_pkey"
}

/** input type for incrementing numeric columns in table "restaurant_order" */
export type restaurant_order_inc_input = {
		chat_id?:number,
	customer_id?:number,
	delivery_cost?:money,
	delivery_id?:number,
	id?:number,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	stripe_payment_id?:number,
	tax?:float8
}

/** input type for inserting data into table "restaurant_order" */
export type restaurant_order_insert_input = {
		actual_food_ready_time?:timestamptz,
	cancellation_time?:timestamptz,
	chat?:chat_obj_rel_insert_input,
	chat_id?:number,
	customer?:customer_obj_rel_insert_input,
	customer_app_type?:string,
	customer_id?:number,
	delivery?:delivery_order_obj_rel_insert_input,
	delivery_cost?:money,
	delivery_id?:number,
	estimated_food_ready_time?:timestamptz,
	firebase_id?:string,
	id?:number,
	items?:restaurant_order_item_arr_rel_insert_input,
	notes?:string,
	order_time?:timestamptz,
	order_type?:string,
	payment_type?:string,
	refund_amount?:number,
	restaurant?:restaurant_obj_rel_insert_input,
	restaurant_id?:number,
	review?:review_obj_rel_insert_input,
	review_id?:number,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
	stripe_payment_id?:number,
	tax?:float8,
	to_location_address?:string,
	to_location_gps?:geography
}

/** in_json:[name(en,es), selected_options] */
export type restaurant_order_item = {
	__typename?: "restaurant_order_item",
	cost_per_one:money,
	id:number,
	in_json:json,
	notes?:string,
	/** An object relationship */
	order:restaurant_order,
	quantity:number,
	/** An object relationship */
	restaurant_item:restaurant_item,
	restaurant_item_id:number,
	restaurant_order_id:number,
	review_id?:number,
	unavailable:boolean
}

/** aggregated selection of "restaurant_order_item" */
export type restaurant_order_item_aggregate = {
	__typename?: "restaurant_order_item_aggregate",
	aggregate?:restaurant_order_item_aggregate_fields,
	nodes:restaurant_order_item[]
}

/** aggregate fields of "restaurant_order_item" */
export type restaurant_order_item_aggregate_fields = {
	__typename?: "restaurant_order_item_aggregate_fields",
	avg?:restaurant_order_item_avg_fields,
	count:number,
	max?:restaurant_order_item_max_fields,
	min?:restaurant_order_item_min_fields,
	stddev?:restaurant_order_item_stddev_fields,
	stddev_pop?:restaurant_order_item_stddev_pop_fields,
	stddev_samp?:restaurant_order_item_stddev_samp_fields,
	sum?:restaurant_order_item_sum_fields,
	var_pop?:restaurant_order_item_var_pop_fields,
	var_samp?:restaurant_order_item_var_samp_fields,
	variance?:restaurant_order_item_variance_fields
}

/** order by aggregate values of table "restaurant_order_item" */
export type restaurant_order_item_aggregate_order_by = {
		avg?:restaurant_order_item_avg_order_by,
	count?:order_by,
	max?:restaurant_order_item_max_order_by,
	min?:restaurant_order_item_min_order_by,
	stddev?:restaurant_order_item_stddev_order_by,
	stddev_pop?:restaurant_order_item_stddev_pop_order_by,
	stddev_samp?:restaurant_order_item_stddev_samp_order_by,
	sum?:restaurant_order_item_sum_order_by,
	var_pop?:restaurant_order_item_var_pop_order_by,
	var_samp?:restaurant_order_item_var_samp_order_by,
	variance?:restaurant_order_item_variance_order_by
}

/** input type for inserting array relation for remote table "restaurant_order_item" */
export type restaurant_order_item_arr_rel_insert_input = {
		data:restaurant_order_item_insert_input[],
	/** upsert condition */
	on_conflict?:restaurant_order_item_on_conflict
}

/** aggregate avg on columns */
export type restaurant_order_item_avg_fields = {
	__typename?: "restaurant_order_item_avg_fields",
	cost_per_one?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
}

/** order by avg() on columns of table "restaurant_order_item" */
export type restaurant_order_item_avg_order_by = {
		cost_per_one?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by,
	restaurant_order_id?:order_by,
	review_id?:order_by
}

/** Boolean expression to filter rows from the table "restaurant_order_item". All fields are combined with a logical 'AND'. */
export type restaurant_order_item_bool_exp = {
		_and?:restaurant_order_item_bool_exp[],
	_not?:restaurant_order_item_bool_exp,
	_or?:restaurant_order_item_bool_exp[],
	cost_per_one?:money_comparison_exp,
	id?:Int_comparison_exp,
	in_json?:json_comparison_exp,
	notes?:String_comparison_exp,
	order?:restaurant_order_bool_exp,
	quantity?:Int_comparison_exp,
	restaurant_item?:restaurant_item_bool_exp,
	restaurant_item_id?:Int_comparison_exp,
	restaurant_order_id?:Int_comparison_exp,
	review_id?:Int_comparison_exp,
	unavailable?:Boolean_comparison_exp
}

/** unique or primary key constraints on table "restaurant_order_item" */
export enum restaurant_order_item_constraint {
	restaurant_order_item_pkey = "restaurant_order_item_pkey"
}

/** input type for incrementing numeric columns in table "restaurant_order_item" */
export type restaurant_order_item_inc_input = {
		cost_per_one?:money,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
}

/** input type for inserting data into table "restaurant_order_item" */
export type restaurant_order_item_insert_input = {
		cost_per_one?:money,
	id?:number,
	in_json?:json,
	notes?:string,
	order?:restaurant_order_obj_rel_insert_input,
	quantity?:number,
	restaurant_item?:restaurant_item_obj_rel_insert_input,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number,
	unavailable?:boolean
}

/** aggregate max on columns */
export type restaurant_order_item_max_fields = {
	__typename?: "restaurant_order_item_max_fields",
	cost_per_one?:money,
	id?:number,
	notes?:string,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
}

/** order by max() on columns of table "restaurant_order_item" */
export type restaurant_order_item_max_order_by = {
		cost_per_one?:order_by,
	id?:order_by,
	notes?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by,
	restaurant_order_id?:order_by,
	review_id?:order_by
}

/** aggregate min on columns */
export type restaurant_order_item_min_fields = {
	__typename?: "restaurant_order_item_min_fields",
	cost_per_one?:money,
	id?:number,
	notes?:string,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
}

/** order by min() on columns of table "restaurant_order_item" */
export type restaurant_order_item_min_order_by = {
		cost_per_one?:order_by,
	id?:order_by,
	notes?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by,
	restaurant_order_id?:order_by,
	review_id?:order_by
}

/** response of any mutation on the table "restaurant_order_item" */
export type restaurant_order_item_mutation_response = {
	__typename?: "restaurant_order_item_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant_order_item[]
}

/** on_conflict condition type for table "restaurant_order_item" */
export type restaurant_order_item_on_conflict = {
		constraint:restaurant_order_item_constraint,
	update_columns:restaurant_order_item_update_column[],
	where?:restaurant_order_item_bool_exp
}

/** Ordering options when selecting data from "restaurant_order_item". */
export type restaurant_order_item_order_by = {
		cost_per_one?:order_by,
	id?:order_by,
	in_json?:order_by,
	notes?:order_by,
	order?:restaurant_order_order_by,
	quantity?:order_by,
	restaurant_item?:restaurant_item_order_by,
	restaurant_item_id?:order_by,
	restaurant_order_id?:order_by,
	review_id?:order_by,
	unavailable?:order_by
}

/** primary key columns input for table: restaurant_order_item */
export type restaurant_order_item_pk_columns_input = {
		id:number
}

/** select columns of table "restaurant_order_item" */
export enum restaurant_order_item_select_column {
	cost_per_one = "cost_per_one",
	id = "id",
	in_json = "in_json",
	notes = "notes",
	quantity = "quantity",
	restaurant_item_id = "restaurant_item_id",
	restaurant_order_id = "restaurant_order_id",
	review_id = "review_id",
	unavailable = "unavailable"
}

/** input type for updating data in table "restaurant_order_item" */
export type restaurant_order_item_set_input = {
		cost_per_one?:money,
	id?:number,
	in_json?:json,
	notes?:string,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number,
	unavailable?:boolean
}

/** aggregate stddev on columns */
export type restaurant_order_item_stddev_fields = {
	__typename?: "restaurant_order_item_stddev_fields",
	cost_per_one?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
}

/** order by stddev() on columns of table "restaurant_order_item" */
export type restaurant_order_item_stddev_order_by = {
		cost_per_one?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by,
	restaurant_order_id?:order_by,
	review_id?:order_by
}

/** aggregate stddev_pop on columns */
export type restaurant_order_item_stddev_pop_fields = {
	__typename?: "restaurant_order_item_stddev_pop_fields",
	cost_per_one?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
}

/** order by stddev_pop() on columns of table "restaurant_order_item" */
export type restaurant_order_item_stddev_pop_order_by = {
		cost_per_one?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by,
	restaurant_order_id?:order_by,
	review_id?:order_by
}

/** aggregate stddev_samp on columns */
export type restaurant_order_item_stddev_samp_fields = {
	__typename?: "restaurant_order_item_stddev_samp_fields",
	cost_per_one?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
}

/** order by stddev_samp() on columns of table "restaurant_order_item" */
export type restaurant_order_item_stddev_samp_order_by = {
		cost_per_one?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by,
	restaurant_order_id?:order_by,
	review_id?:order_by
}

/** Streaming cursor of the table "restaurant_order_item" */
export type restaurant_order_item_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_order_item_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_order_item_stream_cursor_value_input = {
		cost_per_one?:money,
	id?:number,
	in_json?:json,
	notes?:string,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number,
	unavailable?:boolean
}

/** aggregate sum on columns */
export type restaurant_order_item_sum_fields = {
	__typename?: "restaurant_order_item_sum_fields",
	cost_per_one?:money,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
}

/** order by sum() on columns of table "restaurant_order_item" */
export type restaurant_order_item_sum_order_by = {
		cost_per_one?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by,
	restaurant_order_id?:order_by,
	review_id?:order_by
}

/** update columns of table "restaurant_order_item" */
export enum restaurant_order_item_update_column {
	cost_per_one = "cost_per_one",
	id = "id",
	in_json = "in_json",
	notes = "notes",
	quantity = "quantity",
	restaurant_item_id = "restaurant_item_id",
	restaurant_order_id = "restaurant_order_id",
	review_id = "review_id",
	unavailable = "unavailable"
}

export type restaurant_order_item_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_order_item_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_order_item_set_input,
	where:restaurant_order_item_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_order_item_var_pop_fields = {
	__typename?: "restaurant_order_item_var_pop_fields",
	cost_per_one?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
}

/** order by var_pop() on columns of table "restaurant_order_item" */
export type restaurant_order_item_var_pop_order_by = {
		cost_per_one?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by,
	restaurant_order_id?:order_by,
	review_id?:order_by
}

/** aggregate var_samp on columns */
export type restaurant_order_item_var_samp_fields = {
	__typename?: "restaurant_order_item_var_samp_fields",
	cost_per_one?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
}

/** order by var_samp() on columns of table "restaurant_order_item" */
export type restaurant_order_item_var_samp_order_by = {
		cost_per_one?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by,
	restaurant_order_id?:order_by,
	review_id?:order_by
}

/** aggregate variance on columns */
export type restaurant_order_item_variance_fields = {
	__typename?: "restaurant_order_item_variance_fields",
	cost_per_one?:number,
	id?:number,
	quantity?:number,
	restaurant_item_id?:number,
	restaurant_order_id?:number,
	review_id?:number
}

/** order by variance() on columns of table "restaurant_order_item" */
export type restaurant_order_item_variance_order_by = {
		cost_per_one?:order_by,
	id?:order_by,
	quantity?:order_by,
	restaurant_item_id?:order_by,
	restaurant_order_id?:order_by,
	review_id?:order_by
}

/** aggregate max on columns */
export type restaurant_order_max_fields = {
	__typename?: "restaurant_order_max_fields",
	actual_food_ready_time?:timestamptz,
	cancellation_time?:timestamptz,
	chat_id?:number,
	customer_app_type?:string,
	customer_id?:number,
	delivery_cost?:money,
	delivery_id?:number,
	estimated_food_ready_time?:timestamptz,
	firebase_id?:string,
	id?:number,
	notes?:string,
	order_time?:timestamptz,
	order_type?:string,
	payment_type?:string,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
	stripe_payment_id?:number,
	tax?:float8,
	to_location_address?:string
}

/** order by max() on columns of table "restaurant_order" */
export type restaurant_order_max_order_by = {
		actual_food_ready_time?:order_by,
	cancellation_time?:order_by,
	chat_id?:order_by,
	customer_app_type?:order_by,
	customer_id?:order_by,
	delivery_cost?:order_by,
	delivery_id?:order_by,
	estimated_food_ready_time?:order_by,
	firebase_id?:order_by,
	id?:order_by,
	notes?:order_by,
	order_time?:order_by,
	order_type?:order_by,
	payment_type?:order_by,
	refund_amount?:order_by,
	restaurant_id?:order_by,
	review_id?:order_by,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:order_by,
	stripe_payment_id?:order_by,
	tax?:order_by,
	to_location_address?:order_by
}

/** aggregate min on columns */
export type restaurant_order_min_fields = {
	__typename?: "restaurant_order_min_fields",
	actual_food_ready_time?:timestamptz,
	cancellation_time?:timestamptz,
	chat_id?:number,
	customer_app_type?:string,
	customer_id?:number,
	delivery_cost?:money,
	delivery_id?:number,
	estimated_food_ready_time?:timestamptz,
	firebase_id?:string,
	id?:number,
	notes?:string,
	order_time?:timestamptz,
	order_type?:string,
	payment_type?:string,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
	stripe_payment_id?:number,
	tax?:float8,
	to_location_address?:string
}

/** order by min() on columns of table "restaurant_order" */
export type restaurant_order_min_order_by = {
		actual_food_ready_time?:order_by,
	cancellation_time?:order_by,
	chat_id?:order_by,
	customer_app_type?:order_by,
	customer_id?:order_by,
	delivery_cost?:order_by,
	delivery_id?:order_by,
	estimated_food_ready_time?:order_by,
	firebase_id?:order_by,
	id?:order_by,
	notes?:order_by,
	order_time?:order_by,
	order_type?:order_by,
	payment_type?:order_by,
	refund_amount?:order_by,
	restaurant_id?:order_by,
	review_id?:order_by,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:order_by,
	stripe_payment_id?:order_by,
	tax?:order_by,
	to_location_address?:order_by
}

/** response of any mutation on the table "restaurant_order" */
export type restaurant_order_mutation_response = {
	__typename?: "restaurant_order_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant_order[]
}

/** input type for inserting object relation for remote table "restaurant_order" */
export type restaurant_order_obj_rel_insert_input = {
		data:restaurant_order_insert_input,
	/** upsert condition */
	on_conflict?:restaurant_order_on_conflict
}

/** on_conflict condition type for table "restaurant_order" */
export type restaurant_order_on_conflict = {
		constraint:restaurant_order_constraint,
	update_columns:restaurant_order_update_column[],
	where?:restaurant_order_bool_exp
}

/** Ordering options when selecting data from "restaurant_order". */
export type restaurant_order_order_by = {
		actual_food_ready_time?:order_by,
	cancellation_time?:order_by,
	chat?:chat_order_by,
	chat_id?:order_by,
	customer?:customer_order_by,
	customer_app_type?:order_by,
	customer_id?:order_by,
	delivery?:delivery_order_order_by,
	delivery_cost?:order_by,
	delivery_id?:order_by,
	estimated_food_ready_time?:order_by,
	firebase_id?:order_by,
	id?:order_by,
	items_aggregate?:restaurant_order_item_aggregate_order_by,
	items_cost?:order_by,
	notes?:order_by,
	order_time?:order_by,
	order_type?:order_by,
	payment_type?:order_by,
	refund_amount?:order_by,
	restaurant?:restaurant_order_by,
	restaurant_id?:order_by,
	review?:review_order_by,
	review_id?:order_by,
	status?:order_by,
	stripe_payment_id?:order_by,
	tax?:order_by,
	to_location_address?:order_by,
	to_location_gps?:order_by,
	total_cost?:order_by
}

/** primary key columns input for table: restaurant_order */
export type restaurant_order_pk_columns_input = {
		id:number
}

/** columns and relationships of "restaurant_order_public" */
export type restaurant_order_public = {
	__typename?: "restaurant_order_public",
	actual_food_ready_time?:timestamptz,
	customer_id?:number,
	estimated_food_ready_time?:timestamptz,
	order_time?:timestamptz,
	restaurant_id?:number,
	/** An array relationship */
	restaurant_operators:restaurant_operator[],
	/** An aggregate relationship */
	restaurant_operators_aggregate:restaurant_operator_aggregate,
	review_id?:number,
	status?:string
}

/** aggregated selection of "restaurant_order_public" */
export type restaurant_order_public_aggregate = {
	__typename?: "restaurant_order_public_aggregate",
	aggregate?:restaurant_order_public_aggregate_fields,
	nodes:restaurant_order_public[]
}

/** aggregate fields of "restaurant_order_public" */
export type restaurant_order_public_aggregate_fields = {
	__typename?: "restaurant_order_public_aggregate_fields",
	avg?:restaurant_order_public_avg_fields,
	count:number,
	max?:restaurant_order_public_max_fields,
	min?:restaurant_order_public_min_fields,
	stddev?:restaurant_order_public_stddev_fields,
	stddev_pop?:restaurant_order_public_stddev_pop_fields,
	stddev_samp?:restaurant_order_public_stddev_samp_fields,
	sum?:restaurant_order_public_sum_fields,
	var_pop?:restaurant_order_public_var_pop_fields,
	var_samp?:restaurant_order_public_var_samp_fields,
	variance?:restaurant_order_public_variance_fields
}

/** aggregate avg on columns */
export type restaurant_order_public_avg_fields = {
	__typename?: "restaurant_order_public_avg_fields",
	customer_id?:number,
	restaurant_id?:number,
	review_id?:number
}

/** Boolean expression to filter rows from the table "restaurant_order_public". All fields are combined with a logical 'AND'. */
export type restaurant_order_public_bool_exp = {
		_and?:restaurant_order_public_bool_exp[],
	_not?:restaurant_order_public_bool_exp,
	_or?:restaurant_order_public_bool_exp[],
	actual_food_ready_time?:timestamptz_comparison_exp,
	customer_id?:Int_comparison_exp,
	estimated_food_ready_time?:timestamptz_comparison_exp,
	order_time?:timestamptz_comparison_exp,
	restaurant_id?:Int_comparison_exp,
	restaurant_operators?:restaurant_operator_bool_exp,
	review_id?:Int_comparison_exp,
	status?:String_comparison_exp
}

/** input type for incrementing numeric columns in table "restaurant_order_public" */
export type restaurant_order_public_inc_input = {
		customer_id?:number,
	restaurant_id?:number,
	review_id?:number
}

/** input type for inserting data into table "restaurant_order_public" */
export type restaurant_order_public_insert_input = {
		actual_food_ready_time?:timestamptz,
	customer_id?:number,
	estimated_food_ready_time?:timestamptz,
	order_time?:timestamptz,
	restaurant_id?:number,
	restaurant_operators?:restaurant_operator_arr_rel_insert_input,
	review_id?:number,
	status?:string
}

/** aggregate max on columns */
export type restaurant_order_public_max_fields = {
	__typename?: "restaurant_order_public_max_fields",
	actual_food_ready_time?:timestamptz,
	customer_id?:number,
	estimated_food_ready_time?:timestamptz,
	order_time?:timestamptz,
	restaurant_id?:number,
	review_id?:number,
	status?:string
}

/** aggregate min on columns */
export type restaurant_order_public_min_fields = {
	__typename?: "restaurant_order_public_min_fields",
	actual_food_ready_time?:timestamptz,
	customer_id?:number,
	estimated_food_ready_time?:timestamptz,
	order_time?:timestamptz,
	restaurant_id?:number,
	review_id?:number,
	status?:string
}

/** response of any mutation on the table "restaurant_order_public" */
export type restaurant_order_public_mutation_response = {
	__typename?: "restaurant_order_public_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:restaurant_order_public[]
}

/** Ordering options when selecting data from "restaurant_order_public". */
export type restaurant_order_public_order_by = {
		actual_food_ready_time?:order_by,
	customer_id?:order_by,
	estimated_food_ready_time?:order_by,
	order_time?:order_by,
	restaurant_id?:order_by,
	restaurant_operators_aggregate?:restaurant_operator_aggregate_order_by,
	review_id?:order_by,
	status?:order_by
}

/** select columns of table "restaurant_order_public" */
export enum restaurant_order_public_select_column {
	actual_food_ready_time = "actual_food_ready_time",
	customer_id = "customer_id",
	estimated_food_ready_time = "estimated_food_ready_time",
	order_time = "order_time",
	restaurant_id = "restaurant_id",
	review_id = "review_id",
	status = "status"
}

/** input type for updating data in table "restaurant_order_public" */
export type restaurant_order_public_set_input = {
		actual_food_ready_time?:timestamptz,
	customer_id?:number,
	estimated_food_ready_time?:timestamptz,
	order_time?:timestamptz,
	restaurant_id?:number,
	review_id?:number,
	status?:string
}

/** aggregate stddev on columns */
export type restaurant_order_public_stddev_fields = {
	__typename?: "restaurant_order_public_stddev_fields",
	customer_id?:number,
	restaurant_id?:number,
	review_id?:number
}

/** aggregate stddev_pop on columns */
export type restaurant_order_public_stddev_pop_fields = {
	__typename?: "restaurant_order_public_stddev_pop_fields",
	customer_id?:number,
	restaurant_id?:number,
	review_id?:number
}

/** aggregate stddev_samp on columns */
export type restaurant_order_public_stddev_samp_fields = {
	__typename?: "restaurant_order_public_stddev_samp_fields",
	customer_id?:number,
	restaurant_id?:number,
	review_id?:number
}

/** Streaming cursor of the table "restaurant_order_public" */
export type restaurant_order_public_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_order_public_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_order_public_stream_cursor_value_input = {
		actual_food_ready_time?:timestamptz,
	customer_id?:number,
	estimated_food_ready_time?:timestamptz,
	order_time?:timestamptz,
	restaurant_id?:number,
	review_id?:number,
	status?:string
}

/** aggregate sum on columns */
export type restaurant_order_public_sum_fields = {
	__typename?: "restaurant_order_public_sum_fields",
	customer_id?:number,
	restaurant_id?:number,
	review_id?:number
}

export type restaurant_order_public_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_order_public_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_order_public_set_input,
	where:restaurant_order_public_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_order_public_var_pop_fields = {
	__typename?: "restaurant_order_public_var_pop_fields",
	customer_id?:number,
	restaurant_id?:number,
	review_id?:number
}

/** aggregate var_samp on columns */
export type restaurant_order_public_var_samp_fields = {
	__typename?: "restaurant_order_public_var_samp_fields",
	customer_id?:number,
	restaurant_id?:number,
	review_id?:number
}

/** aggregate variance on columns */
export type restaurant_order_public_variance_fields = {
	__typename?: "restaurant_order_public_variance_fields",
	customer_id?:number,
	restaurant_id?:number,
	review_id?:number
}

/** select columns of table "restaurant_order" */
export enum restaurant_order_select_column {
	actual_food_ready_time = "actual_food_ready_time",
	cancellation_time = "cancellation_time",
	chat_id = "chat_id",
	customer_app_type = "customer_app_type",
	customer_id = "customer_id",
	delivery_cost = "delivery_cost",
	delivery_id = "delivery_id",
	estimated_food_ready_time = "estimated_food_ready_time",
	firebase_id = "firebase_id",
	id = "id",
	notes = "notes",
	order_time = "order_time",
	order_type = "order_type",
	payment_type = "payment_type",
	refund_amount = "refund_amount",
	restaurant_id = "restaurant_id",
	review_id = "review_id",
	status = "status",
	stripe_payment_id = "stripe_payment_id",
	tax = "tax",
	to_location_address = "to_location_address",
	to_location_gps = "to_location_gps"
}

/** input type for updating data in table "restaurant_order" */
export type restaurant_order_set_input = {
		actual_food_ready_time?:timestamptz,
	cancellation_time?:timestamptz,
	chat_id?:number,
	customer_app_type?:string,
	customer_id?:number,
	delivery_cost?:money,
	delivery_id?:number,
	estimated_food_ready_time?:timestamptz,
	firebase_id?:string,
	id?:number,
	notes?:string,
	order_time?:timestamptz,
	order_type?:string,
	payment_type?:string,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
	stripe_payment_id?:number,
	tax?:float8,
	to_location_address?:string,
	to_location_gps?:geography
}

/** aggregate stddev on columns */
export type restaurant_order_stddev_fields = {
	__typename?: "restaurant_order_stddev_fields",
	chat_id?:number,
	customer_id?:number,
	delivery_cost?:number,
	delivery_id?:number,
	id?:number,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	stripe_payment_id?:number,
	tax?:number
}

/** order by stddev() on columns of table "restaurant_order" */
export type restaurant_order_stddev_order_by = {
		chat_id?:order_by,
	customer_id?:order_by,
	delivery_cost?:order_by,
	delivery_id?:order_by,
	id?:order_by,
	refund_amount?:order_by,
	restaurant_id?:order_by,
	review_id?:order_by,
	stripe_payment_id?:order_by,
	tax?:order_by
}

/** aggregate stddev_pop on columns */
export type restaurant_order_stddev_pop_fields = {
	__typename?: "restaurant_order_stddev_pop_fields",
	chat_id?:number,
	customer_id?:number,
	delivery_cost?:number,
	delivery_id?:number,
	id?:number,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	stripe_payment_id?:number,
	tax?:number
}

/** order by stddev_pop() on columns of table "restaurant_order" */
export type restaurant_order_stddev_pop_order_by = {
		chat_id?:order_by,
	customer_id?:order_by,
	delivery_cost?:order_by,
	delivery_id?:order_by,
	id?:order_by,
	refund_amount?:order_by,
	restaurant_id?:order_by,
	review_id?:order_by,
	stripe_payment_id?:order_by,
	tax?:order_by
}

/** aggregate stddev_samp on columns */
export type restaurant_order_stddev_samp_fields = {
	__typename?: "restaurant_order_stddev_samp_fields",
	chat_id?:number,
	customer_id?:number,
	delivery_cost?:number,
	delivery_id?:number,
	id?:number,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	stripe_payment_id?:number,
	tax?:number
}

/** order by stddev_samp() on columns of table "restaurant_order" */
export type restaurant_order_stddev_samp_order_by = {
		chat_id?:order_by,
	customer_id?:order_by,
	delivery_cost?:order_by,
	delivery_id?:order_by,
	id?:order_by,
	refund_amount?:order_by,
	restaurant_id?:order_by,
	review_id?:order_by,
	stripe_payment_id?:order_by,
	tax?:order_by
}

/** Streaming cursor of the table "restaurant_order" */
export type restaurant_order_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_order_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_order_stream_cursor_value_input = {
		actual_food_ready_time?:timestamptz,
	cancellation_time?:timestamptz,
	chat_id?:number,
	customer_app_type?:string,
	customer_id?:number,
	delivery_cost?:money,
	delivery_id?:number,
	estimated_food_ready_time?:timestamptz,
	firebase_id?:string,
	id?:number,
	notes?:string,
	order_time?:timestamptz,
	order_type?:string,
	payment_type?:string,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	/** orderReceived, preparing, ready, onTheWay, delivered, cancelledByCustomer, cancelledByRestaurant */
	status?:string,
	stripe_payment_id?:number,
	tax?:float8,
	to_location_address?:string,
	to_location_gps?:geography
}

/** aggregate sum on columns */
export type restaurant_order_sum_fields = {
	__typename?: "restaurant_order_sum_fields",
	chat_id?:number,
	customer_id?:number,
	delivery_cost?:money,
	delivery_id?:number,
	id?:number,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	stripe_payment_id?:number,
	tax?:float8
}

/** order by sum() on columns of table "restaurant_order" */
export type restaurant_order_sum_order_by = {
		chat_id?:order_by,
	customer_id?:order_by,
	delivery_cost?:order_by,
	delivery_id?:order_by,
	id?:order_by,
	refund_amount?:order_by,
	restaurant_id?:order_by,
	review_id?:order_by,
	stripe_payment_id?:order_by,
	tax?:order_by
}

/** update columns of table "restaurant_order" */
export enum restaurant_order_update_column {
	actual_food_ready_time = "actual_food_ready_time",
	cancellation_time = "cancellation_time",
	chat_id = "chat_id",
	customer_app_type = "customer_app_type",
	customer_id = "customer_id",
	delivery_cost = "delivery_cost",
	delivery_id = "delivery_id",
	estimated_food_ready_time = "estimated_food_ready_time",
	firebase_id = "firebase_id",
	id = "id",
	notes = "notes",
	order_time = "order_time",
	order_type = "order_type",
	payment_type = "payment_type",
	refund_amount = "refund_amount",
	restaurant_id = "restaurant_id",
	review_id = "review_id",
	status = "status",
	stripe_payment_id = "stripe_payment_id",
	tax = "tax",
	to_location_address = "to_location_address",
	to_location_gps = "to_location_gps"
}

export type restaurant_order_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_order_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_order_set_input,
	where:restaurant_order_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_order_var_pop_fields = {
	__typename?: "restaurant_order_var_pop_fields",
	chat_id?:number,
	customer_id?:number,
	delivery_cost?:number,
	delivery_id?:number,
	id?:number,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	stripe_payment_id?:number,
	tax?:number
}

/** order by var_pop() on columns of table "restaurant_order" */
export type restaurant_order_var_pop_order_by = {
		chat_id?:order_by,
	customer_id?:order_by,
	delivery_cost?:order_by,
	delivery_id?:order_by,
	id?:order_by,
	refund_amount?:order_by,
	restaurant_id?:order_by,
	review_id?:order_by,
	stripe_payment_id?:order_by,
	tax?:order_by
}

/** aggregate var_samp on columns */
export type restaurant_order_var_samp_fields = {
	__typename?: "restaurant_order_var_samp_fields",
	chat_id?:number,
	customer_id?:number,
	delivery_cost?:number,
	delivery_id?:number,
	id?:number,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	stripe_payment_id?:number,
	tax?:number
}

/** order by var_samp() on columns of table "restaurant_order" */
export type restaurant_order_var_samp_order_by = {
		chat_id?:order_by,
	customer_id?:order_by,
	delivery_cost?:order_by,
	delivery_id?:order_by,
	id?:order_by,
	refund_amount?:order_by,
	restaurant_id?:order_by,
	review_id?:order_by,
	stripe_payment_id?:order_by,
	tax?:order_by
}

/** aggregate variance on columns */
export type restaurant_order_variance_fields = {
	__typename?: "restaurant_order_variance_fields",
	chat_id?:number,
	customer_id?:number,
	delivery_cost?:number,
	delivery_id?:number,
	id?:number,
	refund_amount?:number,
	restaurant_id?:number,
	review_id?:number,
	stripe_payment_id?:number,
	tax?:number
}

/** order by variance() on columns of table "restaurant_order" */
export type restaurant_order_variance_order_by = {
		chat_id?:order_by,
	customer_id?:order_by,
	delivery_cost?:order_by,
	delivery_id?:order_by,
	id?:order_by,
	refund_amount?:order_by,
	restaurant_id?:order_by,
	review_id?:order_by,
	stripe_payment_id?:order_by,
	tax?:order_by
}

/** primary key columns input for table: restaurant */
export type restaurant_pk_columns_input = {
		id:number
}

/** select columns of table "restaurant" */
export enum restaurant_select_column {
	approved = "approved",
	description_id = "description_id",
	firebase_id = "firebase_id",
	id = "id",
	image = "image",
	language_id = "language_id",
	location_gps = "location_gps",
	location_text = "location_text",
	name = "name",
	open_status = "open_status",
	payment_info_id = "payment_info_id",
	schedule_id = "schedule_id",
	self_delivery = "self_delivery",
	service_provider_type = "service_provider_type"
}

/** input type for updating data in table "restaurant" */
export type restaurant_set_input = {
		approved?:boolean,
	description_id?:number,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	location_gps?:geography,
	location_text?:string,
	name?:string,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
	payment_info_id?:number,
	schedule_id?:number,
	self_delivery?:boolean,
	service_provider_type?:string
}

/** aggregate stddev on columns */
export type restaurant_stddev_fields = {
	__typename?: "restaurant_stddev_fields",
	description_id?:number,
	id?:number,
	payment_info_id?:number,
	schedule_id?:number
}

/** aggregate stddev_pop on columns */
export type restaurant_stddev_pop_fields = {
	__typename?: "restaurant_stddev_pop_fields",
	description_id?:number,
	id?:number,
	payment_info_id?:number,
	schedule_id?:number
}

/** aggregate stddev_samp on columns */
export type restaurant_stddev_samp_fields = {
	__typename?: "restaurant_stddev_samp_fields",
	description_id?:number,
	id?:number,
	payment_info_id?:number,
	schedule_id?:number
}

/** Streaming cursor of the table "restaurant" */
export type restaurant_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:restaurant_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type restaurant_stream_cursor_value_input = {
		approved?:boolean,
	description_id?:number,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	location_gps?:geography,
	location_text?:string,
	name?:string,
	/** open, closed_temporarily, closed_indefinitely */
	open_status?:string,
	payment_info_id?:number,
	schedule_id?:number,
	self_delivery?:boolean,
	service_provider_type?:string
}

/** aggregate sum on columns */
export type restaurant_sum_fields = {
	__typename?: "restaurant_sum_fields",
	description_id?:number,
	id?:number,
	payment_info_id?:number,
	schedule_id?:number
}

/** update columns of table "restaurant" */
export enum restaurant_update_column {
	approved = "approved",
	description_id = "description_id",
	firebase_id = "firebase_id",
	id = "id",
	image = "image",
	language_id = "language_id",
	location_gps = "location_gps",
	location_text = "location_text",
	name = "name",
	open_status = "open_status",
	payment_info_id = "payment_info_id",
	schedule_id = "schedule_id",
	self_delivery = "self_delivery",
	service_provider_type = "service_provider_type"
}

export type restaurant_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:restaurant_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:restaurant_set_input,
	where:restaurant_bool_exp
}

/** aggregate var_pop on columns */
export type restaurant_var_pop_fields = {
	__typename?: "restaurant_var_pop_fields",
	description_id?:number,
	id?:number,
	payment_info_id?:number,
	schedule_id?:number
}

/** aggregate var_samp on columns */
export type restaurant_var_samp_fields = {
	__typename?: "restaurant_var_samp_fields",
	description_id?:number,
	id?:number,
	payment_info_id?:number,
	schedule_id?:number
}

/** aggregate variance on columns */
export type restaurant_variance_fields = {
	__typename?: "restaurant_variance_fields",
	description_id?:number,
	id?:number,
	payment_info_id?:number,
	schedule_id?:number
}

/** columns and relationships of "review" */
export type review = {
	__typename?: "review",
	from_entity_id:number,
	from_entity_type:string,
	id:number,
	note?:string,
	rating:number,
	to_entity_id:number,
	to_entity_type:string
}

/** aggregated selection of "review" */
export type review_aggregate = {
	__typename?: "review_aggregate",
	aggregate?:review_aggregate_fields,
	nodes:review[]
}

/** aggregate fields of "review" */
export type review_aggregate_fields = {
	__typename?: "review_aggregate_fields",
	avg?:review_avg_fields,
	count:number,
	max?:review_max_fields,
	min?:review_min_fields,
	stddev?:review_stddev_fields,
	stddev_pop?:review_stddev_pop_fields,
	stddev_samp?:review_stddev_samp_fields,
	sum?:review_sum_fields,
	var_pop?:review_var_pop_fields,
	var_samp?:review_var_samp_fields,
	variance?:review_variance_fields
}

/** aggregate avg on columns */
export type review_avg_fields = {
	__typename?: "review_avg_fields",
	from_entity_id?:number,
	id?:number,
	rating?:number,
	to_entity_id?:number
}

/** Boolean expression to filter rows from the table "review". All fields are combined with a logical 'AND'. */
export type review_bool_exp = {
		_and?:review_bool_exp[],
	_not?:review_bool_exp,
	_or?:review_bool_exp[],
	from_entity_id?:Int_comparison_exp,
	from_entity_type?:String_comparison_exp,
	id?:Int_comparison_exp,
	note?:String_comparison_exp,
	rating?:Int_comparison_exp,
	to_entity_id?:Int_comparison_exp,
	to_entity_type?:String_comparison_exp
}

/** unique or primary key constraints on table "review" */
export enum review_constraint {
	review_pkey = "review_pkey"
}

/** input type for incrementing numeric columns in table "review" */
export type review_inc_input = {
		from_entity_id?:number,
	id?:number,
	rating?:number,
	to_entity_id?:number
}

/** input type for inserting data into table "review" */
export type review_insert_input = {
		from_entity_id?:number,
	from_entity_type?:string,
	id?:number,
	note?:string,
	rating?:number,
	to_entity_id?:number,
	to_entity_type?:string
}

/** aggregate max on columns */
export type review_max_fields = {
	__typename?: "review_max_fields",
	from_entity_id?:number,
	from_entity_type?:string,
	id?:number,
	note?:string,
	rating?:number,
	to_entity_id?:number,
	to_entity_type?:string
}

/** aggregate min on columns */
export type review_min_fields = {
	__typename?: "review_min_fields",
	from_entity_id?:number,
	from_entity_type?:string,
	id?:number,
	note?:string,
	rating?:number,
	to_entity_id?:number,
	to_entity_type?:string
}

/** response of any mutation on the table "review" */
export type review_mutation_response = {
	__typename?: "review_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:review[]
}

/** input type for inserting object relation for remote table "review" */
export type review_obj_rel_insert_input = {
		data:review_insert_input,
	/** upsert condition */
	on_conflict?:review_on_conflict
}

/** on_conflict condition type for table "review" */
export type review_on_conflict = {
		constraint:review_constraint,
	update_columns:review_update_column[],
	where?:review_bool_exp
}

/** Ordering options when selecting data from "review". */
export type review_order_by = {
		from_entity_id?:order_by,
	from_entity_type?:order_by,
	id?:order_by,
	note?:order_by,
	rating?:order_by,
	to_entity_id?:order_by,
	to_entity_type?:order_by
}

/** primary key columns input for table: review */
export type review_pk_columns_input = {
		id:number
}

/** select columns of table "review" */
export enum review_select_column {
	from_entity_id = "from_entity_id",
	from_entity_type = "from_entity_type",
	id = "id",
	note = "note",
	rating = "rating",
	to_entity_id = "to_entity_id",
	to_entity_type = "to_entity_type"
}

/** input type for updating data in table "review" */
export type review_set_input = {
		from_entity_id?:number,
	from_entity_type?:string,
	id?:number,
	note?:string,
	rating?:number,
	to_entity_id?:number,
	to_entity_type?:string
}

/** aggregate stddev on columns */
export type review_stddev_fields = {
	__typename?: "review_stddev_fields",
	from_entity_id?:number,
	id?:number,
	rating?:number,
	to_entity_id?:number
}

/** aggregate stddev_pop on columns */
export type review_stddev_pop_fields = {
	__typename?: "review_stddev_pop_fields",
	from_entity_id?:number,
	id?:number,
	rating?:number,
	to_entity_id?:number
}

/** aggregate stddev_samp on columns */
export type review_stddev_samp_fields = {
	__typename?: "review_stddev_samp_fields",
	from_entity_id?:number,
	id?:number,
	rating?:number,
	to_entity_id?:number
}

/** Streaming cursor of the table "review" */
export type review_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:review_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type review_stream_cursor_value_input = {
		from_entity_id?:number,
	from_entity_type?:string,
	id?:number,
	note?:string,
	rating?:number,
	to_entity_id?:number,
	to_entity_type?:string
}

/** aggregate sum on columns */
export type review_sum_fields = {
	__typename?: "review_sum_fields",
	from_entity_id?:number,
	id?:number,
	rating?:number,
	to_entity_id?:number
}

/** update columns of table "review" */
export enum review_update_column {
	from_entity_id = "from_entity_id",
	from_entity_type = "from_entity_type",
	id = "id",
	note = "note",
	rating = "rating",
	to_entity_id = "to_entity_id",
	to_entity_type = "to_entity_type"
}

export type review_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:review_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:review_set_input,
	where:review_bool_exp
}

/** aggregate var_pop on columns */
export type review_var_pop_fields = {
	__typename?: "review_var_pop_fields",
	from_entity_id?:number,
	id?:number,
	rating?:number,
	to_entity_id?:number
}

/** aggregate var_samp on columns */
export type review_var_samp_fields = {
	__typename?: "review_var_samp_fields",
	from_entity_id?:number,
	id?:number,
	rating?:number,
	to_entity_id?:number
}

/** aggregate variance on columns */
export type review_variance_fields = {
	__typename?: "review_variance_fields",
	from_entity_id?:number,
	id?:number,
	rating?:number,
	to_entity_id?:number
}

/** Customer's saved locations */
export type saved_location = {
	__typename?: "saved_location",
	customer_id:number,
	default:boolean,
	id:number,
	location_gps:geography,
	location_text:string,
	name:string
}

/** aggregated selection of "saved_location" */
export type saved_location_aggregate = {
	__typename?: "saved_location_aggregate",
	aggregate?:saved_location_aggregate_fields,
	nodes:saved_location[]
}

/** aggregate fields of "saved_location" */
export type saved_location_aggregate_fields = {
	__typename?: "saved_location_aggregate_fields",
	avg?:saved_location_avg_fields,
	count:number,
	max?:saved_location_max_fields,
	min?:saved_location_min_fields,
	stddev?:saved_location_stddev_fields,
	stddev_pop?:saved_location_stddev_pop_fields,
	stddev_samp?:saved_location_stddev_samp_fields,
	sum?:saved_location_sum_fields,
	var_pop?:saved_location_var_pop_fields,
	var_samp?:saved_location_var_samp_fields,
	variance?:saved_location_variance_fields
}

/** order by aggregate values of table "saved_location" */
export type saved_location_aggregate_order_by = {
		avg?:saved_location_avg_order_by,
	count?:order_by,
	max?:saved_location_max_order_by,
	min?:saved_location_min_order_by,
	stddev?:saved_location_stddev_order_by,
	stddev_pop?:saved_location_stddev_pop_order_by,
	stddev_samp?:saved_location_stddev_samp_order_by,
	sum?:saved_location_sum_order_by,
	var_pop?:saved_location_var_pop_order_by,
	var_samp?:saved_location_var_samp_order_by,
	variance?:saved_location_variance_order_by
}

/** input type for inserting array relation for remote table "saved_location" */
export type saved_location_arr_rel_insert_input = {
		data:saved_location_insert_input[],
	/** upsert condition */
	on_conflict?:saved_location_on_conflict
}

/** aggregate avg on columns */
export type saved_location_avg_fields = {
	__typename?: "saved_location_avg_fields",
	customer_id?:number,
	id?:number
}

/** order by avg() on columns of table "saved_location" */
export type saved_location_avg_order_by = {
		customer_id?:order_by,
	id?:order_by
}

/** Boolean expression to filter rows from the table "saved_location". All fields are combined with a logical 'AND'. */
export type saved_location_bool_exp = {
		_and?:saved_location_bool_exp[],
	_not?:saved_location_bool_exp,
	_or?:saved_location_bool_exp[],
	customer_id?:Int_comparison_exp,
	default?:Boolean_comparison_exp,
	id?:Int_comparison_exp,
	location_gps?:geography_comparison_exp,
	location_text?:String_comparison_exp,
	name?:String_comparison_exp
}

/** unique or primary key constraints on table "saved_location" */
export enum saved_location_constraint {
	saved_location_pkey = "saved_location_pkey"
}

/** input type for incrementing numeric columns in table "saved_location" */
export type saved_location_inc_input = {
		customer_id?:number,
	id?:number
}

/** input type for inserting data into table "saved_location" */
export type saved_location_insert_input = {
		customer_id?:number,
	default?:boolean,
	id?:number,
	location_gps?:geography,
	location_text?:string,
	name?:string
}

/** aggregate max on columns */
export type saved_location_max_fields = {
	__typename?: "saved_location_max_fields",
	customer_id?:number,
	id?:number,
	location_text?:string,
	name?:string
}

/** order by max() on columns of table "saved_location" */
export type saved_location_max_order_by = {
		customer_id?:order_by,
	id?:order_by,
	location_text?:order_by,
	name?:order_by
}

/** aggregate min on columns */
export type saved_location_min_fields = {
	__typename?: "saved_location_min_fields",
	customer_id?:number,
	id?:number,
	location_text?:string,
	name?:string
}

/** order by min() on columns of table "saved_location" */
export type saved_location_min_order_by = {
		customer_id?:order_by,
	id?:order_by,
	location_text?:order_by,
	name?:order_by
}

/** response of any mutation on the table "saved_location" */
export type saved_location_mutation_response = {
	__typename?: "saved_location_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:saved_location[]
}

/** on_conflict condition type for table "saved_location" */
export type saved_location_on_conflict = {
		constraint:saved_location_constraint,
	update_columns:saved_location_update_column[],
	where?:saved_location_bool_exp
}

/** Ordering options when selecting data from "saved_location". */
export type saved_location_order_by = {
		customer_id?:order_by,
	default?:order_by,
	id?:order_by,
	location_gps?:order_by,
	location_text?:order_by,
	name?:order_by
}

/** primary key columns input for table: saved_location */
export type saved_location_pk_columns_input = {
		id:number
}

/** select columns of table "saved_location" */
export enum saved_location_select_column {
	customer_id = "customer_id",
	default = "default",
	id = "id",
	location_gps = "location_gps",
	location_text = "location_text",
	name = "name"
}

/** input type for updating data in table "saved_location" */
export type saved_location_set_input = {
		customer_id?:number,
	default?:boolean,
	id?:number,
	location_gps?:geography,
	location_text?:string,
	name?:string
}

/** aggregate stddev on columns */
export type saved_location_stddev_fields = {
	__typename?: "saved_location_stddev_fields",
	customer_id?:number,
	id?:number
}

/** order by stddev() on columns of table "saved_location" */
export type saved_location_stddev_order_by = {
		customer_id?:order_by,
	id?:order_by
}

/** aggregate stddev_pop on columns */
export type saved_location_stddev_pop_fields = {
	__typename?: "saved_location_stddev_pop_fields",
	customer_id?:number,
	id?:number
}

/** order by stddev_pop() on columns of table "saved_location" */
export type saved_location_stddev_pop_order_by = {
		customer_id?:order_by,
	id?:order_by
}

/** aggregate stddev_samp on columns */
export type saved_location_stddev_samp_fields = {
	__typename?: "saved_location_stddev_samp_fields",
	customer_id?:number,
	id?:number
}

/** order by stddev_samp() on columns of table "saved_location" */
export type saved_location_stddev_samp_order_by = {
		customer_id?:order_by,
	id?:order_by
}

/** Streaming cursor of the table "saved_location" */
export type saved_location_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:saved_location_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type saved_location_stream_cursor_value_input = {
		customer_id?:number,
	default?:boolean,
	id?:number,
	location_gps?:geography,
	location_text?:string,
	name?:string
}

/** aggregate sum on columns */
export type saved_location_sum_fields = {
	__typename?: "saved_location_sum_fields",
	customer_id?:number,
	id?:number
}

/** order by sum() on columns of table "saved_location" */
export type saved_location_sum_order_by = {
		customer_id?:order_by,
	id?:order_by
}

/** update columns of table "saved_location" */
export enum saved_location_update_column {
	customer_id = "customer_id",
	default = "default",
	id = "id",
	location_gps = "location_gps",
	location_text = "location_text",
	name = "name"
}

export type saved_location_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:saved_location_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:saved_location_set_input,
	where:saved_location_bool_exp
}

/** aggregate var_pop on columns */
export type saved_location_var_pop_fields = {
	__typename?: "saved_location_var_pop_fields",
	customer_id?:number,
	id?:number
}

/** order by var_pop() on columns of table "saved_location" */
export type saved_location_var_pop_order_by = {
		customer_id?:order_by,
	id?:order_by
}

/** aggregate var_samp on columns */
export type saved_location_var_samp_fields = {
	__typename?: "saved_location_var_samp_fields",
	customer_id?:number,
	id?:number
}

/** order by var_samp() on columns of table "saved_location" */
export type saved_location_var_samp_order_by = {
		customer_id?:order_by,
	id?:order_by
}

/** aggregate variance on columns */
export type saved_location_variance_fields = {
	__typename?: "saved_location_variance_fields",
	customer_id?:number,
	id?:number
}

/** order by variance() on columns of table "saved_location" */
export type saved_location_variance_order_by = {
		customer_id?:order_by,
	id?:order_by
}

/** columns and relationships of "service_provider_payment_info" */
export type service_provider_payment_info = {
	__typename?: "service_provider_payment_info",
	bank_transfer:boolean,
	card:boolean,
	cash:boolean,
	id:number,
	/** An object relationship */
	restaurant?:restaurant,
	service_provider_type:string,
	/** An object relationship */
	stripe_info?:stripe_info,
	stripe_info_id?:number
}

/** aggregated selection of "service_provider_payment_info" */
export type service_provider_payment_info_aggregate = {
	__typename?: "service_provider_payment_info_aggregate",
	aggregate?:service_provider_payment_info_aggregate_fields,
	nodes:service_provider_payment_info[]
}

/** aggregate fields of "service_provider_payment_info" */
export type service_provider_payment_info_aggregate_fields = {
	__typename?: "service_provider_payment_info_aggregate_fields",
	avg?:service_provider_payment_info_avg_fields,
	count:number,
	max?:service_provider_payment_info_max_fields,
	min?:service_provider_payment_info_min_fields,
	stddev?:service_provider_payment_info_stddev_fields,
	stddev_pop?:service_provider_payment_info_stddev_pop_fields,
	stddev_samp?:service_provider_payment_info_stddev_samp_fields,
	sum?:service_provider_payment_info_sum_fields,
	var_pop?:service_provider_payment_info_var_pop_fields,
	var_samp?:service_provider_payment_info_var_samp_fields,
	variance?:service_provider_payment_info_variance_fields
}

/** aggregate avg on columns */
export type service_provider_payment_info_avg_fields = {
	__typename?: "service_provider_payment_info_avg_fields",
	id?:number,
	stripe_info_id?:number
}

/** Boolean expression to filter rows from the table
"service_provider_payment_info". All fields are combined with a logical 'AND'. */
export type service_provider_payment_info_bool_exp = {
		_and?:service_provider_payment_info_bool_exp[],
	_not?:service_provider_payment_info_bool_exp,
	_or?:service_provider_payment_info_bool_exp[],
	bank_transfer?:Boolean_comparison_exp,
	card?:Boolean_comparison_exp,
	cash?:Boolean_comparison_exp,
	id?:Int_comparison_exp,
	restaurant?:restaurant_bool_exp,
	service_provider_type?:String_comparison_exp,
	stripe_info?:stripe_info_bool_exp,
	stripe_info_id?:Int_comparison_exp
}

/** unique or primary key constraints on table "service_provider_payment_info" */
export enum service_provider_payment_info_constraint {
	service_provider_payment_info_pkey = "service_provider_payment_info_pkey",
	service_provider_payment_info_stripe_info_id_key = "service_provider_payment_info_stripe_info_id_key"
}

/** input type for incrementing numeric columns in table "service_provider_payment_info" */
export type service_provider_payment_info_inc_input = {
		id?:number,
	stripe_info_id?:number
}

/** input type for inserting data into table "service_provider_payment_info" */
export type service_provider_payment_info_insert_input = {
		bank_transfer?:boolean,
	card?:boolean,
	cash?:boolean,
	id?:number,
	restaurant?:restaurant_obj_rel_insert_input,
	service_provider_type?:string,
	stripe_info?:stripe_info_obj_rel_insert_input,
	stripe_info_id?:number
}

/** aggregate max on columns */
export type service_provider_payment_info_max_fields = {
	__typename?: "service_provider_payment_info_max_fields",
	id?:number,
	service_provider_type?:string,
	stripe_info_id?:number
}

/** aggregate min on columns */
export type service_provider_payment_info_min_fields = {
	__typename?: "service_provider_payment_info_min_fields",
	id?:number,
	service_provider_type?:string,
	stripe_info_id?:number
}

/** response of any mutation on the table "service_provider_payment_info" */
export type service_provider_payment_info_mutation_response = {
	__typename?: "service_provider_payment_info_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:service_provider_payment_info[]
}

/** input type for inserting object relation for remote table "service_provider_payment_info" */
export type service_provider_payment_info_obj_rel_insert_input = {
		data:service_provider_payment_info_insert_input,
	/** upsert condition */
	on_conflict?:service_provider_payment_info_on_conflict
}

/** on_conflict condition type for table "service_provider_payment_info" */
export type service_provider_payment_info_on_conflict = {
		constraint:service_provider_payment_info_constraint,
	update_columns:service_provider_payment_info_update_column[],
	where?:service_provider_payment_info_bool_exp
}

/** Ordering options when selecting data from "service_provider_payment_info". */
export type service_provider_payment_info_order_by = {
		bank_transfer?:order_by,
	card?:order_by,
	cash?:order_by,
	id?:order_by,
	restaurant?:restaurant_order_by,
	service_provider_type?:order_by,
	stripe_info?:stripe_info_order_by,
	stripe_info_id?:order_by
}

/** primary key columns input for table: service_provider_payment_info */
export type service_provider_payment_info_pk_columns_input = {
		id:number
}

/** select columns of table "service_provider_payment_info" */
export enum service_provider_payment_info_select_column {
	bank_transfer = "bank_transfer",
	card = "card",
	cash = "cash",
	id = "id",
	service_provider_type = "service_provider_type",
	stripe_info_id = "stripe_info_id"
}

/** input type for updating data in table "service_provider_payment_info" */
export type service_provider_payment_info_set_input = {
		bank_transfer?:boolean,
	card?:boolean,
	cash?:boolean,
	id?:number,
	service_provider_type?:string,
	stripe_info_id?:number
}

/** aggregate stddev on columns */
export type service_provider_payment_info_stddev_fields = {
	__typename?: "service_provider_payment_info_stddev_fields",
	id?:number,
	stripe_info_id?:number
}

/** aggregate stddev_pop on columns */
export type service_provider_payment_info_stddev_pop_fields = {
	__typename?: "service_provider_payment_info_stddev_pop_fields",
	id?:number,
	stripe_info_id?:number
}

/** aggregate stddev_samp on columns */
export type service_provider_payment_info_stddev_samp_fields = {
	__typename?: "service_provider_payment_info_stddev_samp_fields",
	id?:number,
	stripe_info_id?:number
}

/** Streaming cursor of the table "service_provider_payment_info" */
export type service_provider_payment_info_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:service_provider_payment_info_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type service_provider_payment_info_stream_cursor_value_input = {
		bank_transfer?:boolean,
	card?:boolean,
	cash?:boolean,
	id?:number,
	service_provider_type?:string,
	stripe_info_id?:number
}

/** aggregate sum on columns */
export type service_provider_payment_info_sum_fields = {
	__typename?: "service_provider_payment_info_sum_fields",
	id?:number,
	stripe_info_id?:number
}

/** update columns of table "service_provider_payment_info" */
export enum service_provider_payment_info_update_column {
	bank_transfer = "bank_transfer",
	card = "card",
	cash = "cash",
	id = "id",
	service_provider_type = "service_provider_type",
	stripe_info_id = "stripe_info_id"
}

export type service_provider_payment_info_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:service_provider_payment_info_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:service_provider_payment_info_set_input,
	where:service_provider_payment_info_bool_exp
}

/** aggregate var_pop on columns */
export type service_provider_payment_info_var_pop_fields = {
	__typename?: "service_provider_payment_info_var_pop_fields",
	id?:number,
	stripe_info_id?:number
}

/** aggregate var_samp on columns */
export type service_provider_payment_info_var_samp_fields = {
	__typename?: "service_provider_payment_info_var_samp_fields",
	id?:number,
	stripe_info_id?:number
}

/** aggregate variance on columns */
export type service_provider_payment_info_variance_fields = {
	__typename?: "service_provider_payment_info_variance_fields",
	id?:number,
	stripe_info_id?:number
}

export type st_d_within_geography_input = {
		distance:number,
	from:geography,
	use_spheroid?:boolean
}

export type st_d_within_input = {
		distance:number,
	from:geometry
}

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_comparison_exp = {
		_eq?:string,
	_gt?:string,
	_gte?:string,
	/** does the column match the given case-insensitive pattern */
	_ilike?:string,
	_in?:string[],
	/** does the column match the given POSIX regular expression, case insensitive */
	_iregex?:string,
	_is_null?:boolean,
	/** does the column match the given pattern */
	_like?:string,
	_lt?:string,
	_lte?:string,
	_neq?:string,
	/** does the column NOT match the given case-insensitive pattern */
	_nilike?:string,
	_nin?:string[],
	/** does the column NOT match the given POSIX regular expression, case insensitive */
	_niregex?:string,
	/** does the column NOT match the given pattern */
	_nlike?:string,
	/** does the column NOT match the given POSIX regular expression, case sensitive */
	_nregex?:string,
	/** does the column NOT match the given SQL regular expression */
	_nsimilar?:string,
	/** does the column match the given POSIX regular expression, case sensitive */
	_regex?:string,
	/** does the column match the given SQL regular expression */
	_similar?:string
}

/** columns and relationships of "stripe_info" */
export type stripe_info = {
	__typename?: "stripe_info",
	charges_enabled:boolean,
	details_submitted:boolean,
	id:number,
	pass_fees_to_customer:boolean,
	payouts_enabled:boolean,
	requirements?:json,
	/** An object relationship */
	service_provider_payment_info?:service_provider_payment_info,
	stripe_id:string,
	stripe_status:string
}

/** aggregated selection of "stripe_info" */
export type stripe_info_aggregate = {
	__typename?: "stripe_info_aggregate",
	aggregate?:stripe_info_aggregate_fields,
	nodes:stripe_info[]
}

/** aggregate fields of "stripe_info" */
export type stripe_info_aggregate_fields = {
	__typename?: "stripe_info_aggregate_fields",
	avg?:stripe_info_avg_fields,
	count:number,
	max?:stripe_info_max_fields,
	min?:stripe_info_min_fields,
	stddev?:stripe_info_stddev_fields,
	stddev_pop?:stripe_info_stddev_pop_fields,
	stddev_samp?:stripe_info_stddev_samp_fields,
	sum?:stripe_info_sum_fields,
	var_pop?:stripe_info_var_pop_fields,
	var_samp?:stripe_info_var_samp_fields,
	variance?:stripe_info_variance_fields
}

/** aggregate avg on columns */
export type stripe_info_avg_fields = {
	__typename?: "stripe_info_avg_fields",
	id?:number
}

/** Boolean expression to filter rows from the table "stripe_info". All fields are combined with a logical 'AND'. */
export type stripe_info_bool_exp = {
		_and?:stripe_info_bool_exp[],
	_not?:stripe_info_bool_exp,
	_or?:stripe_info_bool_exp[],
	charges_enabled?:Boolean_comparison_exp,
	details_submitted?:Boolean_comparison_exp,
	id?:Int_comparison_exp,
	pass_fees_to_customer?:Boolean_comparison_exp,
	payouts_enabled?:Boolean_comparison_exp,
	requirements?:json_comparison_exp,
	service_provider_payment_info?:service_provider_payment_info_bool_exp,
	stripe_id?:String_comparison_exp,
	stripe_status?:String_comparison_exp
}

/** unique or primary key constraints on table "stripe_info" */
export enum stripe_info_constraint {
	stripe_info_pkey = "stripe_info_pkey",
	stripe_info_stripe_id_key = "stripe_info_stripe_id_key"
}

/** input type for incrementing numeric columns in table "stripe_info" */
export type stripe_info_inc_input = {
		id?:number
}

/** input type for inserting data into table "stripe_info" */
export type stripe_info_insert_input = {
		charges_enabled?:boolean,
	details_submitted?:boolean,
	id?:number,
	pass_fees_to_customer?:boolean,
	payouts_enabled?:boolean,
	requirements?:json,
	service_provider_payment_info?:service_provider_payment_info_obj_rel_insert_input,
	stripe_id?:string,
	stripe_status?:string
}

/** aggregate max on columns */
export type stripe_info_max_fields = {
	__typename?: "stripe_info_max_fields",
	id?:number,
	stripe_id?:string,
	stripe_status?:string
}

/** aggregate min on columns */
export type stripe_info_min_fields = {
	__typename?: "stripe_info_min_fields",
	id?:number,
	stripe_id?:string,
	stripe_status?:string
}

/** response of any mutation on the table "stripe_info" */
export type stripe_info_mutation_response = {
	__typename?: "stripe_info_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:stripe_info[]
}

/** input type for inserting object relation for remote table "stripe_info" */
export type stripe_info_obj_rel_insert_input = {
		data:stripe_info_insert_input,
	/** upsert condition */
	on_conflict?:stripe_info_on_conflict
}

/** on_conflict condition type for table "stripe_info" */
export type stripe_info_on_conflict = {
		constraint:stripe_info_constraint,
	update_columns:stripe_info_update_column[],
	where?:stripe_info_bool_exp
}

/** Ordering options when selecting data from "stripe_info". */
export type stripe_info_order_by = {
		charges_enabled?:order_by,
	details_submitted?:order_by,
	id?:order_by,
	pass_fees_to_customer?:order_by,
	payouts_enabled?:order_by,
	requirements?:order_by,
	service_provider_payment_info?:service_provider_payment_info_order_by,
	stripe_id?:order_by,
	stripe_status?:order_by
}

/** primary key columns input for table: stripe_info */
export type stripe_info_pk_columns_input = {
		id:number
}

/** select columns of table "stripe_info" */
export enum stripe_info_select_column {
	charges_enabled = "charges_enabled",
	details_submitted = "details_submitted",
	id = "id",
	pass_fees_to_customer = "pass_fees_to_customer",
	payouts_enabled = "payouts_enabled",
	requirements = "requirements",
	stripe_id = "stripe_id",
	stripe_status = "stripe_status"
}

/** input type for updating data in table "stripe_info" */
export type stripe_info_set_input = {
		charges_enabled?:boolean,
	details_submitted?:boolean,
	id?:number,
	pass_fees_to_customer?:boolean,
	payouts_enabled?:boolean,
	requirements?:json,
	stripe_id?:string,
	stripe_status?:string
}

/** aggregate stddev on columns */
export type stripe_info_stddev_fields = {
	__typename?: "stripe_info_stddev_fields",
	id?:number
}

/** aggregate stddev_pop on columns */
export type stripe_info_stddev_pop_fields = {
	__typename?: "stripe_info_stddev_pop_fields",
	id?:number
}

/** aggregate stddev_samp on columns */
export type stripe_info_stddev_samp_fields = {
	__typename?: "stripe_info_stddev_samp_fields",
	id?:number
}

/** Streaming cursor of the table "stripe_info" */
export type stripe_info_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:stripe_info_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type stripe_info_stream_cursor_value_input = {
		charges_enabled?:boolean,
	details_submitted?:boolean,
	id?:number,
	pass_fees_to_customer?:boolean,
	payouts_enabled?:boolean,
	requirements?:json,
	stripe_id?:string,
	stripe_status?:string
}

/** aggregate sum on columns */
export type stripe_info_sum_fields = {
	__typename?: "stripe_info_sum_fields",
	id?:number
}

/** update columns of table "stripe_info" */
export enum stripe_info_update_column {
	charges_enabled = "charges_enabled",
	details_submitted = "details_submitted",
	id = "id",
	pass_fees_to_customer = "pass_fees_to_customer",
	payouts_enabled = "payouts_enabled",
	requirements = "requirements",
	stripe_id = "stripe_id",
	stripe_status = "stripe_status"
}

export type stripe_info_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:stripe_info_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:stripe_info_set_input,
	where:stripe_info_bool_exp
}

/** aggregate var_pop on columns */
export type stripe_info_var_pop_fields = {
	__typename?: "stripe_info_var_pop_fields",
	id?:number
}

/** aggregate var_samp on columns */
export type stripe_info_var_samp_fields = {
	__typename?: "stripe_info_var_samp_fields",
	id?:number
}

/** aggregate variance on columns */
export type stripe_info_variance_fields = {
	__typename?: "stripe_info_variance_fields",
	id?:number
}

export type subscription_root = {
	__typename?: "subscription_root",
	/** fetch data from the table: "chat" */
	chat:chat[],
	/** fetch aggregated fields from the table: "chat" */
	chat_aggregate:chat_aggregate,
	/** fetch data from the table: "chat" using primary key columns */
	chat_by_pk?:chat,
	/** fetch data from the table: "chat_participant" */
	chat_participant:chat_participant[],
	/** fetch aggregated fields from the table: "chat_participant" */
	chat_participant_aggregate:chat_participant_aggregate,
	/** fetch data from the table: "chat_participant" using primary key columns */
	chat_participant_by_pk?:chat_participant,
	/** fetch data from the table in a streaming manner : "chat_participant" */
	chat_participant_stream:chat_participant[],
	/** fetch data from the table in a streaming manner : "chat" */
	chat_stream:chat[],
	/** fetch data from the table: "customer" */
	customer:customer[],
	/** fetch aggregated fields from the table: "customer" */
	customer_aggregate:customer_aggregate,
	/** fetch data from the table: "customer" using primary key columns */
	customer_by_pk?:customer,
	/** fetch data from the table in a streaming manner : "customer" */
	customer_stream:customer[],
	/** fetch data from the table: "deliverer" */
	deliverer:deliverer[],
	/** fetch aggregated fields from the table: "deliverer" */
	deliverer_aggregate:deliverer_aggregate,
	/** fetch data from the table: "deliverer" using primary key columns */
	deliverer_by_pk?:deliverer,
	/** fetch data from the table in a streaming manner : "deliverer" */
	deliverer_stream:deliverer[],
	/** fetch data from the table: "delivery_order" */
	delivery_order:delivery_order[],
	/** fetch aggregated fields from the table: "delivery_order" */
	delivery_order_aggregate:delivery_order_aggregate,
	/** fetch data from the table: "delivery_order" using primary key columns */
	delivery_order_by_pk?:delivery_order,
	/** fetch data from the table: "delivery_order_public" */
	delivery_order_public:delivery_order_public[],
	/** fetch aggregated fields from the table: "delivery_order_public" */
	delivery_order_public_aggregate:delivery_order_public_aggregate,
	/** fetch data from the table in a streaming manner : "delivery_order_public" */
	delivery_order_public_stream:delivery_order_public[],
	/** fetch data from the table in a streaming manner : "delivery_order" */
	delivery_order_stream:delivery_order[],
	/** fetch data from the table: "mez_admin" */
	mez_admin:mez_admin[],
	/** fetch aggregated fields from the table: "mez_admin" */
	mez_admin_aggregate:mez_admin_aggregate,
	/** fetch data from the table: "mez_admin" using primary key columns */
	mez_admin_by_pk?:mez_admin,
	/** fetch data from the table in a streaming manner : "mez_admin" */
	mez_admin_stream:mez_admin[],
	/** fetch data from the table: "notification_info" */
	notification_info:notification_info[],
	/** fetch aggregated fields from the table: "notification_info" */
	notification_info_aggregate:notification_info_aggregate,
	/** fetch data from the table: "notification_info" using primary key columns */
	notification_info_by_pk?:notification_info,
	/** fetch data from the table in a streaming manner : "notification_info" */
	notification_info_stream:notification_info[],
	/** fetch data from the table: "restaurant" */
	restaurant:restaurant[],
	/** fetch aggregated fields from the table: "restaurant" */
	restaurant_aggregate:restaurant_aggregate,
	/** fetch data from the table: "restaurant" using primary key columns */
	restaurant_by_pk?:restaurant,
	/** fetch data from the table: "restaurant_cart" */
	restaurant_cart:restaurant_cart[],
	/** fetch aggregated fields from the table: "restaurant_cart" */
	restaurant_cart_aggregate:restaurant_cart_aggregate,
	/** fetch data from the table: "restaurant_cart" using primary key columns */
	restaurant_cart_by_pk?:restaurant_cart,
	/** fetch data from the table: "restaurant_cart_item" */
	restaurant_cart_item:restaurant_cart_item[],
	/** fetch aggregated fields from the table: "restaurant_cart_item" */
	restaurant_cart_item_aggregate:restaurant_cart_item_aggregate,
	/** fetch data from the table: "restaurant_cart_item" using primary key columns */
	restaurant_cart_item_by_pk?:restaurant_cart_item,
	/** fetch data from the table in a streaming manner : "restaurant_cart_item" */
	restaurant_cart_item_stream:restaurant_cart_item[],
	/** fetch data from the table in a streaming manner : "restaurant_cart" */
	restaurant_cart_stream:restaurant_cart[],
	/** fetch data from the table: "restaurant_category" */
	restaurant_category:restaurant_category[],
	/** fetch aggregated fields from the table: "restaurant_category" */
	restaurant_category_aggregate:restaurant_category_aggregate,
	/** fetch data from the table: "restaurant_category" using primary key columns */
	restaurant_category_by_pk?:restaurant_category,
	/** fetch data from the table in a streaming manner : "restaurant_category" */
	restaurant_category_stream:restaurant_category[],
	/** fetch data from the table: "restaurant_choice" */
	restaurant_choice:restaurant_choice[],
	/** fetch aggregated fields from the table: "restaurant_choice" */
	restaurant_choice_aggregate:restaurant_choice_aggregate,
	/** fetch data from the table: "restaurant_choice" using primary key columns */
	restaurant_choice_by_pk?:restaurant_choice,
	/** fetch data from the table in a streaming manner : "restaurant_choice" */
	restaurant_choice_stream:restaurant_choice[],
	/** fetch data from the table: "restaurant_item" */
	restaurant_item:restaurant_item[],
	/** fetch aggregated fields from the table: "restaurant_item" */
	restaurant_item_aggregate:restaurant_item_aggregate,
	/** fetch data from the table: "restaurant_item" using primary key columns */
	restaurant_item_by_pk?:restaurant_item,
	/** fetch data from the table: "restaurant_item_option_map" */
	restaurant_item_option_map:restaurant_item_option_map[],
	/** fetch aggregated fields from the table: "restaurant_item_option_map" */
	restaurant_item_option_map_aggregate:restaurant_item_option_map_aggregate,
	/** fetch data from the table: "restaurant_item_option_map" using primary key columns */
	restaurant_item_option_map_by_pk?:restaurant_item_option_map,
	/** fetch data from the table in a streaming manner : "restaurant_item_option_map" */
	restaurant_item_option_map_stream:restaurant_item_option_map[],
	/** fetch data from the table in a streaming manner : "restaurant_item" */
	restaurant_item_stream:restaurant_item[],
	/** fetch data from the table: "restaurant_operator" */
	restaurant_operator:restaurant_operator[],
	/** fetch aggregated fields from the table: "restaurant_operator" */
	restaurant_operator_aggregate:restaurant_operator_aggregate,
	/** fetch data from the table: "restaurant_operator" using primary key columns */
	restaurant_operator_by_pk?:restaurant_operator,
	/** fetch data from the table in a streaming manner : "restaurant_operator" */
	restaurant_operator_stream:restaurant_operator[],
	/** fetch data from the table: "restaurant_option" */
	restaurant_option:restaurant_option[],
	/** fetch aggregated fields from the table: "restaurant_option" */
	restaurant_option_aggregate:restaurant_option_aggregate,
	/** fetch data from the table: "restaurant_option" using primary key columns */
	restaurant_option_by_pk?:restaurant_option,
	/** fetch data from the table: "restaurant_option_choice_map" */
	restaurant_option_choice_map:restaurant_option_choice_map[],
	/** fetch aggregated fields from the table: "restaurant_option_choice_map" */
	restaurant_option_choice_map_aggregate:restaurant_option_choice_map_aggregate,
	/** fetch data from the table: "restaurant_option_choice_map" using primary key columns */
	restaurant_option_choice_map_by_pk?:restaurant_option_choice_map,
	/** fetch data from the table in a streaming manner : "restaurant_option_choice_map" */
	restaurant_option_choice_map_stream:restaurant_option_choice_map[],
	/** fetch data from the table in a streaming manner : "restaurant_option" */
	restaurant_option_stream:restaurant_option[],
	/** fetch data from the table: "restaurant_order" */
	restaurant_order:restaurant_order[],
	/** fetch aggregated fields from the table: "restaurant_order" */
	restaurant_order_aggregate:restaurant_order_aggregate,
	/** fetch data from the table: "restaurant_order" using primary key columns */
	restaurant_order_by_pk?:restaurant_order,
	/** fetch data from the table: "restaurant_order_item" */
	restaurant_order_item:restaurant_order_item[],
	/** fetch aggregated fields from the table: "restaurant_order_item" */
	restaurant_order_item_aggregate:restaurant_order_item_aggregate,
	/** fetch data from the table: "restaurant_order_item" using primary key columns */
	restaurant_order_item_by_pk?:restaurant_order_item,
	/** fetch data from the table in a streaming manner : "restaurant_order_item" */
	restaurant_order_item_stream:restaurant_order_item[],
	/** fetch data from the table: "restaurant_order_public" */
	restaurant_order_public:restaurant_order_public[],
	/** fetch aggregated fields from the table: "restaurant_order_public" */
	restaurant_order_public_aggregate:restaurant_order_public_aggregate,
	/** fetch data from the table in a streaming manner : "restaurant_order_public" */
	restaurant_order_public_stream:restaurant_order_public[],
	/** fetch data from the table in a streaming manner : "restaurant_order" */
	restaurant_order_stream:restaurant_order[],
	/** fetch data from the table in a streaming manner : "restaurant" */
	restaurant_stream:restaurant[],
	/** fetch data from the table: "review" */
	review:review[],
	/** fetch aggregated fields from the table: "review" */
	review_aggregate:review_aggregate,
	/** fetch data from the table: "review" using primary key columns */
	review_by_pk?:review,
	/** fetch data from the table in a streaming manner : "review" */
	review_stream:review[],
	/** fetch data from the table: "saved_location" */
	saved_location:saved_location[],
	/** fetch aggregated fields from the table: "saved_location" */
	saved_location_aggregate:saved_location_aggregate,
	/** fetch data from the table: "saved_location" using primary key columns */
	saved_location_by_pk?:saved_location,
	/** fetch data from the table in a streaming manner : "saved_location" */
	saved_location_stream:saved_location[],
	/** fetch data from the table: "service_provider_payment_info" */
	service_provider_payment_info:service_provider_payment_info[],
	/** fetch aggregated fields from the table: "service_provider_payment_info" */
	service_provider_payment_info_aggregate:service_provider_payment_info_aggregate,
	/** fetch data from the table: "service_provider_payment_info" using primary key columns */
	service_provider_payment_info_by_pk?:service_provider_payment_info,
	/** fetch data from the table in a streaming manner : "service_provider_payment_info" */
	service_provider_payment_info_stream:service_provider_payment_info[],
	/** fetch data from the table: "stripe_info" */
	stripe_info:stripe_info[],
	/** fetch aggregated fields from the table: "stripe_info" */
	stripe_info_aggregate:stripe_info_aggregate,
	/** fetch data from the table: "stripe_info" using primary key columns */
	stripe_info_by_pk?:stripe_info,
	/** fetch data from the table in a streaming manner : "stripe_info" */
	stripe_info_stream:stripe_info[],
	/** fetch data from the table: "topology.app_type" */
	topology_app_type:topology_app_type[],
	/** fetch aggregated fields from the table: "topology.app_type" */
	topology_app_type_aggregate:topology_app_type_aggregate,
	/** fetch data from the table: "topology.app_type" using primary key columns */
	topology_app_type_by_pk?:topology_app_type,
	/** fetch data from the table in a streaming manner : "topology.app_type" */
	topology_app_type_stream:topology_app_type[],
	/** fetch data from the table: "topology.language" */
	topology_language:topology_language[],
	/** fetch aggregated fields from the table: "topology.language" */
	topology_language_aggregate:topology_language_aggregate,
	/** fetch data from the table: "topology.language" using primary key columns */
	topology_language_by_pk?:topology_language,
	/** fetch data from the table in a streaming manner : "topology.language" */
	topology_language_stream:topology_language[],
	/** fetch data from the table: "translation" */
	translation:translation[],
	/** fetch aggregated fields from the table: "translation" */
	translation_aggregate:translation_aggregate,
	/** fetch data from the table: "translation" using primary key columns */
	translation_by_pk?:translation,
	/** fetch data from the table in a streaming manner : "translation" */
	translation_stream:translation[],
	/** fetch data from the table: "translation_value" */
	translation_value:translation_value[],
	/** fetch aggregated fields from the table: "translation_value" */
	translation_value_aggregate:translation_value_aggregate,
	/** fetch data from the table: "translation_value" using primary key columns */
	translation_value_by_pk?:translation_value,
	/** fetch data from the table in a streaming manner : "translation_value" */
	translation_value_stream:translation_value[],
	/** fetch data from the table: "user" */
	user:user[],
	/** fetch aggregated fields from the table: "user" */
	user_aggregate:user_aggregate,
	/** fetch data from the table: "user" using primary key columns */
	user_by_pk?:user,
	/** fetch data from the table in a streaming manner : "user" */
	user_stream:user[]
}

export type timestamptz = any

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type timestamptz_comparison_exp = {
		_eq?:timestamptz,
	_gt?:timestamptz,
	_gte?:timestamptz,
	_in?:timestamptz[],
	_is_null?:boolean,
	_lt?:timestamptz,
	_lte?:timestamptz,
	_neq?:timestamptz,
	_nin?:timestamptz[]
}

/** columns and relationships of "topology.app_type" */
export type topology_app_type = {
	__typename?: "topology_app_type",
	/** customer, delivery, restaurant, admin */
	id:string
}

/** aggregated selection of "topology.app_type" */
export type topology_app_type_aggregate = {
	__typename?: "topology_app_type_aggregate",
	aggregate?:topology_app_type_aggregate_fields,
	nodes:topology_app_type[]
}

/** aggregate fields of "topology.app_type" */
export type topology_app_type_aggregate_fields = {
	__typename?: "topology_app_type_aggregate_fields",
	count:number,
	max?:topology_app_type_max_fields,
	min?:topology_app_type_min_fields
}

/** Boolean expression to filter rows from the table "topology.app_type". All fields are combined with a logical 'AND'. */
export type topology_app_type_bool_exp = {
		_and?:topology_app_type_bool_exp[],
	_not?:topology_app_type_bool_exp,
	_or?:topology_app_type_bool_exp[],
	id?:String_comparison_exp
}

/** unique or primary key constraints on table "topology.app_type" */
export enum topology_app_type_constraint {
	app_type_pkey = "app_type_pkey"
}

/** input type for inserting data into table "topology.app_type" */
export type topology_app_type_insert_input = {
		/** customer, delivery, restaurant, admin */
	id?:string
}

/** aggregate max on columns */
export type topology_app_type_max_fields = {
	__typename?: "topology_app_type_max_fields",
	/** customer, delivery, restaurant, admin */
	id?:string
}

/** aggregate min on columns */
export type topology_app_type_min_fields = {
	__typename?: "topology_app_type_min_fields",
	/** customer, delivery, restaurant, admin */
	id?:string
}

/** response of any mutation on the table "topology.app_type" */
export type topology_app_type_mutation_response = {
	__typename?: "topology_app_type_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:topology_app_type[]
}

/** on_conflict condition type for table "topology.app_type" */
export type topology_app_type_on_conflict = {
		constraint:topology_app_type_constraint,
	update_columns:topology_app_type_update_column[],
	where?:topology_app_type_bool_exp
}

/** Ordering options when selecting data from "topology.app_type". */
export type topology_app_type_order_by = {
		id?:order_by
}

/** primary key columns input for table: topology_app_type */
export type topology_app_type_pk_columns_input = {
		/** customer, delivery, restaurant, admin */
	id:string
}

/** select columns of table "topology.app_type" */
export enum topology_app_type_select_column {
	id = "id"
}

/** input type for updating data in table "topology.app_type" */
export type topology_app_type_set_input = {
		/** customer, delivery, restaurant, admin */
	id?:string
}

/** Streaming cursor of the table "topology_app_type" */
export type topology_app_type_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:topology_app_type_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type topology_app_type_stream_cursor_value_input = {
		/** customer, delivery, restaurant, admin */
	id?:string
}

/** update columns of table "topology.app_type" */
export enum topology_app_type_update_column {
	id = "id"
}

export type topology_app_type_updates = {
		/** sets the columns of the filtered rows to the given values */
	_set?:topology_app_type_set_input,
	where:topology_app_type_bool_exp
}

/** columns and relationships of "topology.language" */
export type topology_language = {
	__typename?: "topology_language",
	id:string
}

/** aggregated selection of "topology.language" */
export type topology_language_aggregate = {
	__typename?: "topology_language_aggregate",
	aggregate?:topology_language_aggregate_fields,
	nodes:topology_language[]
}

/** aggregate fields of "topology.language" */
export type topology_language_aggregate_fields = {
	__typename?: "topology_language_aggregate_fields",
	count:number,
	max?:topology_language_max_fields,
	min?:topology_language_min_fields
}

/** Boolean expression to filter rows from the table "topology.language". All fields are combined with a logical 'AND'. */
export type topology_language_bool_exp = {
		_and?:topology_language_bool_exp[],
	_not?:topology_language_bool_exp,
	_or?:topology_language_bool_exp[],
	id?:String_comparison_exp
}

/** unique or primary key constraints on table "topology.language" */
export enum topology_language_constraint {
	language_pkey = "language_pkey"
}

/** input type for inserting data into table "topology.language" */
export type topology_language_insert_input = {
		id?:string
}

/** aggregate max on columns */
export type topology_language_max_fields = {
	__typename?: "topology_language_max_fields",
	id?:string
}

/** aggregate min on columns */
export type topology_language_min_fields = {
	__typename?: "topology_language_min_fields",
	id?:string
}

/** response of any mutation on the table "topology.language" */
export type topology_language_mutation_response = {
	__typename?: "topology_language_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:topology_language[]
}

/** input type for inserting object relation for remote table "topology.language" */
export type topology_language_obj_rel_insert_input = {
		data:topology_language_insert_input,
	/** upsert condition */
	on_conflict?:topology_language_on_conflict
}

/** on_conflict condition type for table "topology.language" */
export type topology_language_on_conflict = {
		constraint:topology_language_constraint,
	update_columns:topology_language_update_column[],
	where?:topology_language_bool_exp
}

/** Ordering options when selecting data from "topology.language". */
export type topology_language_order_by = {
		id?:order_by
}

/** primary key columns input for table: topology_language */
export type topology_language_pk_columns_input = {
		id:string
}

/** select columns of table "topology.language" */
export enum topology_language_select_column {
	id = "id"
}

/** input type for updating data in table "topology.language" */
export type topology_language_set_input = {
		id?:string
}

/** Streaming cursor of the table "topology_language" */
export type topology_language_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:topology_language_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type topology_language_stream_cursor_value_input = {
		id?:string
}

/** update columns of table "topology.language" */
export enum topology_language_update_column {
	id = "id"
}

export type topology_language_updates = {
		/** sets the columns of the filtered rows to the given values */
	_set?:topology_language_set_input,
	where:topology_language_bool_exp
}

/** columns and relationships of "translation" */
export type translation = {
	__typename?: "translation",
	id:number,
	/** An object relationship */
	restaurant?:restaurant,
	service_provider_id:number,
	service_provider_type:string,
	/** An array relationship */
	translations:translation_value[],
	/** An aggregate relationship */
	translations_aggregate:translation_value_aggregate
}

/** aggregated selection of "translation" */
export type translation_aggregate = {
	__typename?: "translation_aggregate",
	aggregate?:translation_aggregate_fields,
	nodes:translation[]
}

/** aggregate fields of "translation" */
export type translation_aggregate_fields = {
	__typename?: "translation_aggregate_fields",
	avg?:translation_avg_fields,
	count:number,
	max?:translation_max_fields,
	min?:translation_min_fields,
	stddev?:translation_stddev_fields,
	stddev_pop?:translation_stddev_pop_fields,
	stddev_samp?:translation_stddev_samp_fields,
	sum?:translation_sum_fields,
	var_pop?:translation_var_pop_fields,
	var_samp?:translation_var_samp_fields,
	variance?:translation_variance_fields
}

/** aggregate avg on columns */
export type translation_avg_fields = {
	__typename?: "translation_avg_fields",
	id?:number,
	service_provider_id?:number
}

/** Boolean expression to filter rows from the table "translation". All fields are combined with a logical 'AND'. */
export type translation_bool_exp = {
		_and?:translation_bool_exp[],
	_not?:translation_bool_exp,
	_or?:translation_bool_exp[],
	id?:Int_comparison_exp,
	restaurant?:restaurant_bool_exp,
	service_provider_id?:Int_comparison_exp,
	service_provider_type?:String_comparison_exp,
	translations?:translation_value_bool_exp
}

/** unique or primary key constraints on table "translation" */
export enum translation_constraint {
	translation_pkey = "translation_pkey"
}

/** input type for incrementing numeric columns in table "translation" */
export type translation_inc_input = {
		id?:number,
	service_provider_id?:number
}

/** input type for inserting data into table "translation" */
export type translation_insert_input = {
		id?:number,
	restaurant?:restaurant_obj_rel_insert_input,
	service_provider_id?:number,
	service_provider_type?:string,
	translations?:translation_value_arr_rel_insert_input
}

/** aggregate max on columns */
export type translation_max_fields = {
	__typename?: "translation_max_fields",
	id?:number,
	service_provider_id?:number,
	service_provider_type?:string
}

/** aggregate min on columns */
export type translation_min_fields = {
	__typename?: "translation_min_fields",
	id?:number,
	service_provider_id?:number,
	service_provider_type?:string
}

/** response of any mutation on the table "translation" */
export type translation_mutation_response = {
	__typename?: "translation_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:translation[]
}

/** input type for inserting object relation for remote table "translation" */
export type translation_obj_rel_insert_input = {
		data:translation_insert_input,
	/** upsert condition */
	on_conflict?:translation_on_conflict
}

/** on_conflict condition type for table "translation" */
export type translation_on_conflict = {
		constraint:translation_constraint,
	update_columns:translation_update_column[],
	where?:translation_bool_exp
}

/** Ordering options when selecting data from "translation". */
export type translation_order_by = {
		id?:order_by,
	restaurant?:restaurant_order_by,
	service_provider_id?:order_by,
	service_provider_type?:order_by,
	translations_aggregate?:translation_value_aggregate_order_by
}

/** primary key columns input for table: translation */
export type translation_pk_columns_input = {
		id:number
}

/** select columns of table "translation" */
export enum translation_select_column {
	id = "id",
	service_provider_id = "service_provider_id",
	service_provider_type = "service_provider_type"
}

/** input type for updating data in table "translation" */
export type translation_set_input = {
		id?:number,
	service_provider_id?:number,
	service_provider_type?:string
}

/** aggregate stddev on columns */
export type translation_stddev_fields = {
	__typename?: "translation_stddev_fields",
	id?:number,
	service_provider_id?:number
}

/** aggregate stddev_pop on columns */
export type translation_stddev_pop_fields = {
	__typename?: "translation_stddev_pop_fields",
	id?:number,
	service_provider_id?:number
}

/** aggregate stddev_samp on columns */
export type translation_stddev_samp_fields = {
	__typename?: "translation_stddev_samp_fields",
	id?:number,
	service_provider_id?:number
}

/** Streaming cursor of the table "translation" */
export type translation_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:translation_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type translation_stream_cursor_value_input = {
		id?:number,
	service_provider_id?:number,
	service_provider_type?:string
}

/** aggregate sum on columns */
export type translation_sum_fields = {
	__typename?: "translation_sum_fields",
	id?:number,
	service_provider_id?:number
}

/** update columns of table "translation" */
export enum translation_update_column {
	id = "id",
	service_provider_id = "service_provider_id",
	service_provider_type = "service_provider_type"
}

export type translation_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:translation_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:translation_set_input,
	where:translation_bool_exp
}

/** columns and relationships of "translation_value" */
export type translation_value = {
	__typename?: "translation_value",
	/** An object relationship */
	language:topology_language,
	language_id:string,
	/** An object relationship */
	translation_group:translation,
	translation_id:number,
	value:string
}

/** aggregated selection of "translation_value" */
export type translation_value_aggregate = {
	__typename?: "translation_value_aggregate",
	aggregate?:translation_value_aggregate_fields,
	nodes:translation_value[]
}

/** aggregate fields of "translation_value" */
export type translation_value_aggregate_fields = {
	__typename?: "translation_value_aggregate_fields",
	avg?:translation_value_avg_fields,
	count:number,
	max?:translation_value_max_fields,
	min?:translation_value_min_fields,
	stddev?:translation_value_stddev_fields,
	stddev_pop?:translation_value_stddev_pop_fields,
	stddev_samp?:translation_value_stddev_samp_fields,
	sum?:translation_value_sum_fields,
	var_pop?:translation_value_var_pop_fields,
	var_samp?:translation_value_var_samp_fields,
	variance?:translation_value_variance_fields
}

/** order by aggregate values of table "translation_value" */
export type translation_value_aggregate_order_by = {
		avg?:translation_value_avg_order_by,
	count?:order_by,
	max?:translation_value_max_order_by,
	min?:translation_value_min_order_by,
	stddev?:translation_value_stddev_order_by,
	stddev_pop?:translation_value_stddev_pop_order_by,
	stddev_samp?:translation_value_stddev_samp_order_by,
	sum?:translation_value_sum_order_by,
	var_pop?:translation_value_var_pop_order_by,
	var_samp?:translation_value_var_samp_order_by,
	variance?:translation_value_variance_order_by
}

/** input type for inserting array relation for remote table "translation_value" */
export type translation_value_arr_rel_insert_input = {
		data:translation_value_insert_input[],
	/** upsert condition */
	on_conflict?:translation_value_on_conflict
}

/** aggregate avg on columns */
export type translation_value_avg_fields = {
	__typename?: "translation_value_avg_fields",
	translation_id?:number
}

/** order by avg() on columns of table "translation_value" */
export type translation_value_avg_order_by = {
		translation_id?:order_by
}

/** Boolean expression to filter rows from the table "translation_value". All fields are combined with a logical 'AND'. */
export type translation_value_bool_exp = {
		_and?:translation_value_bool_exp[],
	_not?:translation_value_bool_exp,
	_or?:translation_value_bool_exp[],
	language?:topology_language_bool_exp,
	language_id?:String_comparison_exp,
	translation_group?:translation_bool_exp,
	translation_id?:Int_comparison_exp,
	value?:String_comparison_exp
}

/** unique or primary key constraints on table "translation_value" */
export enum translation_value_constraint {
	translation_value_pkey = "translation_value_pkey"
}

/** input type for incrementing numeric columns in table "translation_value" */
export type translation_value_inc_input = {
		translation_id?:number
}

/** input type for inserting data into table "translation_value" */
export type translation_value_insert_input = {
		language?:topology_language_obj_rel_insert_input,
	language_id?:string,
	translation_group?:translation_obj_rel_insert_input,
	translation_id?:number,
	value?:string
}

/** aggregate max on columns */
export type translation_value_max_fields = {
	__typename?: "translation_value_max_fields",
	language_id?:string,
	translation_id?:number,
	value?:string
}

/** order by max() on columns of table "translation_value" */
export type translation_value_max_order_by = {
		language_id?:order_by,
	translation_id?:order_by,
	value?:order_by
}

/** aggregate min on columns */
export type translation_value_min_fields = {
	__typename?: "translation_value_min_fields",
	language_id?:string,
	translation_id?:number,
	value?:string
}

/** order by min() on columns of table "translation_value" */
export type translation_value_min_order_by = {
		language_id?:order_by,
	translation_id?:order_by,
	value?:order_by
}

/** response of any mutation on the table "translation_value" */
export type translation_value_mutation_response = {
	__typename?: "translation_value_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:translation_value[]
}

/** on_conflict condition type for table "translation_value" */
export type translation_value_on_conflict = {
		constraint:translation_value_constraint,
	update_columns:translation_value_update_column[],
	where?:translation_value_bool_exp
}

/** Ordering options when selecting data from "translation_value". */
export type translation_value_order_by = {
		language?:topology_language_order_by,
	language_id?:order_by,
	translation_group?:translation_order_by,
	translation_id?:order_by,
	value?:order_by
}

/** primary key columns input for table: translation_value */
export type translation_value_pk_columns_input = {
		language_id:string,
	translation_id:number
}

/** select columns of table "translation_value" */
export enum translation_value_select_column {
	language_id = "language_id",
	translation_id = "translation_id",
	value = "value"
}

/** input type for updating data in table "translation_value" */
export type translation_value_set_input = {
		language_id?:string,
	translation_id?:number,
	value?:string
}

/** aggregate stddev on columns */
export type translation_value_stddev_fields = {
	__typename?: "translation_value_stddev_fields",
	translation_id?:number
}

/** order by stddev() on columns of table "translation_value" */
export type translation_value_stddev_order_by = {
		translation_id?:order_by
}

/** aggregate stddev_pop on columns */
export type translation_value_stddev_pop_fields = {
	__typename?: "translation_value_stddev_pop_fields",
	translation_id?:number
}

/** order by stddev_pop() on columns of table "translation_value" */
export type translation_value_stddev_pop_order_by = {
		translation_id?:order_by
}

/** aggregate stddev_samp on columns */
export type translation_value_stddev_samp_fields = {
	__typename?: "translation_value_stddev_samp_fields",
	translation_id?:number
}

/** order by stddev_samp() on columns of table "translation_value" */
export type translation_value_stddev_samp_order_by = {
		translation_id?:order_by
}

/** Streaming cursor of the table "translation_value" */
export type translation_value_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:translation_value_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type translation_value_stream_cursor_value_input = {
		language_id?:string,
	translation_id?:number,
	value?:string
}

/** aggregate sum on columns */
export type translation_value_sum_fields = {
	__typename?: "translation_value_sum_fields",
	translation_id?:number
}

/** order by sum() on columns of table "translation_value" */
export type translation_value_sum_order_by = {
		translation_id?:order_by
}

/** update columns of table "translation_value" */
export enum translation_value_update_column {
	language_id = "language_id",
	translation_id = "translation_id",
	value = "value"
}

export type translation_value_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:translation_value_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:translation_value_set_input,
	where:translation_value_bool_exp
}

/** aggregate var_pop on columns */
export type translation_value_var_pop_fields = {
	__typename?: "translation_value_var_pop_fields",
	translation_id?:number
}

/** order by var_pop() on columns of table "translation_value" */
export type translation_value_var_pop_order_by = {
		translation_id?:order_by
}

/** aggregate var_samp on columns */
export type translation_value_var_samp_fields = {
	__typename?: "translation_value_var_samp_fields",
	translation_id?:number
}

/** order by var_samp() on columns of table "translation_value" */
export type translation_value_var_samp_order_by = {
		translation_id?:order_by
}

/** aggregate variance on columns */
export type translation_value_variance_fields = {
	__typename?: "translation_value_variance_fields",
	translation_id?:number
}

/** order by variance() on columns of table "translation_value" */
export type translation_value_variance_order_by = {
		translation_id?:order_by
}

/** aggregate var_pop on columns */
export type translation_var_pop_fields = {
	__typename?: "translation_var_pop_fields",
	id?:number,
	service_provider_id?:number
}

/** aggregate var_samp on columns */
export type translation_var_samp_fields = {
	__typename?: "translation_var_samp_fields",
	id?:number,
	service_provider_id?:number
}

/** aggregate variance on columns */
export type translation_variance_fields = {
	__typename?: "translation_variance_fields",
	id?:number,
	service_provider_id?:number
}

/** columns and relationships of "user" */
export type user = {
	__typename?: "user",
	deleted:boolean,
	email?:string,
	firebase_id:string,
	id:number,
	image?:string,
	language_id:string,
	name?:string,
	phone?:string
}

/** aggregated selection of "user" */
export type user_aggregate = {
	__typename?: "user_aggregate",
	aggregate?:user_aggregate_fields,
	nodes:user[]
}

/** aggregate fields of "user" */
export type user_aggregate_fields = {
	__typename?: "user_aggregate_fields",
	avg?:user_avg_fields,
	count:number,
	max?:user_max_fields,
	min?:user_min_fields,
	stddev?:user_stddev_fields,
	stddev_pop?:user_stddev_pop_fields,
	stddev_samp?:user_stddev_samp_fields,
	sum?:user_sum_fields,
	var_pop?:user_var_pop_fields,
	var_samp?:user_var_samp_fields,
	variance?:user_variance_fields
}

/** aggregate avg on columns */
export type user_avg_fields = {
	__typename?: "user_avg_fields",
	id?:number
}

/** Boolean expression to filter rows from the table "user". All fields are combined with a logical 'AND'. */
export type user_bool_exp = {
		_and?:user_bool_exp[],
	_not?:user_bool_exp,
	_or?:user_bool_exp[],
	deleted?:Boolean_comparison_exp,
	email?:String_comparison_exp,
	firebase_id?:String_comparison_exp,
	id?:Int_comparison_exp,
	image?:String_comparison_exp,
	language_id?:String_comparison_exp,
	name?:String_comparison_exp,
	phone?:String_comparison_exp
}

/** unique or primary key constraints on table "user" */
export enum user_constraint {
	user_pkey = "user_pkey"
}

/** input type for incrementing numeric columns in table "user" */
export type user_inc_input = {
		id?:number
}

/** input type for inserting data into table "user" */
export type user_insert_input = {
		deleted?:boolean,
	email?:string,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	name?:string,
	phone?:string
}

/** aggregate max on columns */
export type user_max_fields = {
	__typename?: "user_max_fields",
	email?:string,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	name?:string,
	phone?:string
}

/** aggregate min on columns */
export type user_min_fields = {
	__typename?: "user_min_fields",
	email?:string,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	name?:string,
	phone?:string
}

/** response of any mutation on the table "user" */
export type user_mutation_response = {
	__typename?: "user_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:user[]
}

/** input type for inserting object relation for remote table "user" */
export type user_obj_rel_insert_input = {
		data:user_insert_input,
	/** upsert condition */
	on_conflict?:user_on_conflict
}

/** on_conflict condition type for table "user" */
export type user_on_conflict = {
		constraint:user_constraint,
	update_columns:user_update_column[],
	where?:user_bool_exp
}

/** Ordering options when selecting data from "user". */
export type user_order_by = {
		deleted?:order_by,
	email?:order_by,
	firebase_id?:order_by,
	id?:order_by,
	image?:order_by,
	language_id?:order_by,
	name?:order_by,
	phone?:order_by
}

/** primary key columns input for table: user */
export type user_pk_columns_input = {
		id:number
}

/** select columns of table "user" */
export enum user_select_column {
	deleted = "deleted",
	email = "email",
	firebase_id = "firebase_id",
	id = "id",
	image = "image",
	language_id = "language_id",
	name = "name",
	phone = "phone"
}

/** input type for updating data in table "user" */
export type user_set_input = {
		deleted?:boolean,
	email?:string,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	name?:string,
	phone?:string
}

/** aggregate stddev on columns */
export type user_stddev_fields = {
	__typename?: "user_stddev_fields",
	id?:number
}

/** aggregate stddev_pop on columns */
export type user_stddev_pop_fields = {
	__typename?: "user_stddev_pop_fields",
	id?:number
}

/** aggregate stddev_samp on columns */
export type user_stddev_samp_fields = {
	__typename?: "user_stddev_samp_fields",
	id?:number
}

/** Streaming cursor of the table "user" */
export type user_stream_cursor_input = {
		/** Stream column input with initial value */
	initial_value:user_stream_cursor_value_input,
	/** cursor ordering */
	ordering?:cursor_ordering
}

/** Initial value of the column from where the streaming should start */
export type user_stream_cursor_value_input = {
		deleted?:boolean,
	email?:string,
	firebase_id?:string,
	id?:number,
	image?:string,
	language_id?:string,
	name?:string,
	phone?:string
}

/** aggregate sum on columns */
export type user_sum_fields = {
	__typename?: "user_sum_fields",
	id?:number
}

/** update columns of table "user" */
export enum user_update_column {
	deleted = "deleted",
	email = "email",
	firebase_id = "firebase_id",
	id = "id",
	image = "image",
	language_id = "language_id",
	name = "name",
	phone = "phone"
}

export type user_updates = {
		/** increments the numeric columns with given value of the filtered values */
	_inc?:user_inc_input,
	/** sets the columns of the filtered rows to the given values */
	_set?:user_set_input,
	where:user_bool_exp
}

/** aggregate var_pop on columns */
export type user_var_pop_fields = {
	__typename?: "user_var_pop_fields",
	id?:number
}

/** aggregate var_samp on columns */
export type user_var_samp_fields = {
	__typename?: "user_var_samp_fields",
	id?:number
}

/** aggregate variance on columns */
export type user_variance_fields = {
	__typename?: "user_variance_fields",
	id?:number
}

export const AllTypesProps: Record<string,any> = {
	cached:{
		ttl:{
			60:{
				type:"IntValue",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		refresh:{
			false:{
				type:"BooleanValue",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	Boolean_comparison_exp:{
		_eq:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"Boolean",
			array:true,
			arrayRequired:false,
			required:true
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"Boolean",
			array:true,
			arrayRequired:false,
			required:true
		}
	},
	chat:{
		chat_info:{
			path:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		chat_participants:{
			distinct_on:{
				type:"chat_participant_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"chat_participant_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"chat_participant_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		chat_participants_aggregate:{
			distinct_on:{
				type:"chat_participant_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"chat_participant_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"chat_participant_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		messages:{
			path:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	chat_aggregate_fields:{
		count:{
			columns:{
				type:"chat_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	chat_append_input:{
		chat_info:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		messages:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_bool_exp:{
		_and:{
			type:"chat_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"chat_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"chat_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		chat_info:{
			type:"jsonb_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_participants:{
			type:"chat_participant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		creation_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		messages:{
			type:"jsonb_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_constraint: "enum",
	chat_delete_at_path_input:{
		chat_info:{
			type:"String",
			array:true,
			arrayRequired:false,
			required:true
		},
		messages:{
			type:"String",
			array:true,
			arrayRequired:false,
			required:true
		}
	},
	chat_delete_elem_input:{
		chat_info:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		messages:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_delete_key_input:{
		chat_info:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		messages:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_inc_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_insert_input:{
		chat_info:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_participants:{
			type:"chat_participant_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		creation_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		messages:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_obj_rel_insert_input:{
		data:{
			type:"chat_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"chat_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_on_conflict:{
		constraint:{
			type:"chat_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"chat_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"chat_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_order_by:{
		chat_info:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_participants_aggregate:{
			type:"chat_participant_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		creation_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		messages:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_aggregate_fields:{
		count:{
			columns:{
				type:"chat_participant_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	chat_participant_aggregate_order_by:{
		avg:{
			type:"chat_participant_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"chat_participant_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"chat_participant_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"chat_participant_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"chat_participant_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"chat_participant_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"chat_participant_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"chat_participant_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"chat_participant_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"chat_participant_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_arr_rel_insert_input:{
		data:{
			type:"chat_participant_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"chat_participant_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_avg_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_bool_exp:{
		_and:{
			type:"chat_participant_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"chat_participant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"chat_participant_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		app_type_id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat:{
			type:"chat_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_info:{
			type:"notification_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_constraint: "enum",
	chat_participant_inc_input:{
		chat_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_insert_input:{
		app_type_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat:{
			type:"chat_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_info:{
			type:"notification_info_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_max_order_by:{
		app_type_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_min_order_by:{
		app_type_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_on_conflict:{
		constraint:{
			type:"chat_participant_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"chat_participant_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"chat_participant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_order_by:{
		app_type_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat:{
			type:"chat_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_info:{
			type:"notification_info_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	chat_participant_select_column: "enum",
	chat_participant_set_input:{
		app_type_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_stddev_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_stddev_pop_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_stddev_samp_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_stream_cursor_input:{
		initial_value:{
			type:"chat_participant_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_stream_cursor_value_input:{
		app_type_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_sum_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_update_column: "enum",
	chat_participant_updates:{
		_inc:{
			type:"chat_participant_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"chat_participant_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"chat_participant_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	chat_participant_var_pop_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_var_samp_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_participant_variance_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		participant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	chat_prepend_input:{
		chat_info:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		messages:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_select_column: "enum",
	chat_set_input:{
		chat_info:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		creation_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		messages:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_stream_cursor_input:{
		initial_value:{
			type:"chat_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_stream_cursor_value_input:{
		chat_info:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		creation_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		messages:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	chat_update_column: "enum",
	chat_updates:{
		_append:{
			type:"chat_append_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_delete_at_path:{
			type:"chat_delete_at_path_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_delete_elem:{
			type:"chat_delete_elem_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_delete_key:{
			type:"chat_delete_key_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_inc:{
			type:"chat_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_prepend:{
			type:"chat_prepend_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"chat_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"chat_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	cursor_ordering: "enum",
	customer:{
		deliveries:{
			distinct_on:{
				type:"delivery_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"delivery_order_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"delivery_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		deliveries_aggregate:{
			distinct_on:{
				type:"delivery_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"delivery_order_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"delivery_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		saved_locations:{
			distinct_on:{
				type:"saved_location_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"saved_location_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"saved_location_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		saved_locations_aggregate:{
			distinct_on:{
				type:"saved_location_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"saved_location_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"saved_location_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	customer_aggregate_fields:{
		count:{
			columns:{
				type:"customer_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	customer_bool_exp:{
		_and:{
			type:"customer_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"customer_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"customer_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		app_version:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		cart:{
			type:"restaurant_cart_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliveries:{
			type:"delivery_order_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_token:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		saved_locations:{
			type:"saved_location_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	customer_constraint: "enum",
	customer_inc_input:{
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	customer_insert_input:{
		app_version:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		cart:{
			type:"restaurant_cart_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliveries:{
			type:"delivery_order_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		saved_locations:{
			type:"saved_location_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	customer_obj_rel_insert_input:{
		data:{
			type:"customer_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"customer_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	customer_on_conflict:{
		constraint:{
			type:"customer_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"customer_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"customer_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	customer_order_by:{
		app_version:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cart:{
			type:"restaurant_cart_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliveries_aggregate:{
			type:"delivery_order_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_token:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		saved_locations_aggregate:{
			type:"saved_location_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	customer_pk_columns_input:{
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	customer_select_column: "enum",
	customer_set_input:{
		app_version:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	customer_stream_cursor_input:{
		initial_value:{
			type:"customer_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	customer_stream_cursor_value_input:{
		app_version:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	customer_update_column: "enum",
	customer_updates:{
		_inc:{
			type:"customer_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"customer_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"customer_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	deliverer_aggregate_fields:{
		count:{
			columns:{
				type:"deliverer_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	deliverer_bool_exp:{
		_and:{
			type:"deliverer_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"deliverer_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"deliverer_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		app_version:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_location:{
			type:"geography_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_company_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_company_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_info_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_token:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		online:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	deliverer_constraint: "enum",
	deliverer_inc_input:{
		delivery_company_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_info_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	deliverer_insert_input:{
		app_version:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_location:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_company_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_company_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_info_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		online:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	deliverer_obj_rel_insert_input:{
		data:{
			type:"deliverer_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"deliverer_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	deliverer_on_conflict:{
		constraint:{
			type:"deliverer_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"deliverer_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"deliverer_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	deliverer_order_by:{
		app_version:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_location:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_company_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_company_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_info_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_token:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		online:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	deliverer_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	deliverer_select_column: "enum",
	deliverer_set_input:{
		app_version:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_location:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_company_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_company_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_info_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		online:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	deliverer_stream_cursor_input:{
		initial_value:{
			type:"deliverer_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	deliverer_stream_cursor_value_input:{
		app_version:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_location:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_company_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_company_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_info_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		online:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	deliverer_update_column: "enum",
	deliverer_updates:{
		_inc:{
			type:"deliverer_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"deliverer_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"deliverer_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	delivery_order_aggregate_fields:{
		count:{
			columns:{
				type:"delivery_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	delivery_order_aggregate_order_by:{
		avg:{
			type:"delivery_order_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"delivery_order_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"delivery_order_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"delivery_order_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"delivery_order_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"delivery_order_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"delivery_order_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"delivery_order_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"delivery_order_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"delivery_order_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_arr_rel_insert_input:{
		data:{
			type:"delivery_order_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"delivery_order_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_avg_order_by:{
		chat_with_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_bool_exp:{
		_and:{
			type:"delivery_order_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"delivery_order_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"delivery_order_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		actual_arrival_at_dropoff_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_arrival_at_pickup_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_delivered_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_package_ready_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_customer:{
			type:"chat_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_customer_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider:{
			type:"chat_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_gps:{
			type:"geography_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver:{
			type:"review_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer:{
			type:"deliverer_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_app_type_id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"money_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer:{
			type:"review_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider:{
			type:"review_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		dropoff_address:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		dropoff_gps:{
			type:"geography_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_dropoff_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_pickup_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_package_ready_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_token:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"money_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		pickup_address:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		pickup_gps:{
			type:"geography_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver:{
			type:"review_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_polyline:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_constraint: "enum",
	delivery_order_inc_input:{
		chat_with_customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_insert_input:{
		actual_arrival_at_dropoff_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_arrival_at_pickup_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_delivered_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_package_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_customer:{
			type:"chat_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider:{
			type:"chat_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver:{
			type:"review_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer:{
			type:"deliverer_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_app_type_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer:{
			type:"review_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider:{
			type:"review_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		dropoff_address:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		dropoff_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_dropoff_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_pickup_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_package_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		pickup_address:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		pickup_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver:{
			type:"review_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_polyline:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_max_order_by:{
		actual_arrival_at_dropoff_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_arrival_at_pickup_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_delivered_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_package_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_app_type_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		dropoff_address:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_dropoff_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_pickup_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_package_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		pickup_address:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_polyline:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_min_order_by:{
		actual_arrival_at_dropoff_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_arrival_at_pickup_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_delivered_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_package_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_app_type_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		dropoff_address:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_dropoff_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_pickup_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_package_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		pickup_address:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_polyline:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_obj_rel_insert_input:{
		data:{
			type:"delivery_order_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"delivery_order_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_on_conflict:{
		constraint:{
			type:"delivery_order_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"delivery_order_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"delivery_order_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_order_by:{
		actual_arrival_at_dropoff_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_arrival_at_pickup_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_delivered_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_package_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_customer:{
			type:"chat_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider:{
			type:"chat_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_gps:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver:{
			type:"review_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer:{
			type:"deliverer_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_app_type_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer:{
			type:"review_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider:{
			type:"review_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		dropoff_address:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		dropoff_gps:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_dropoff_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_pickup_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_package_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_token:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		pickup_address:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		pickup_gps:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver:{
			type:"review_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_polyline:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	delivery_order_public_aggregate_fields:{
		count:{
			columns:{
				type:"delivery_order_public_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	delivery_order_public_bool_exp:{
		_and:{
			type:"delivery_order_public_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"delivery_order_public_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"delivery_order_public_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		actual_arrival_at_dropoff_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_arrival_at_pickup_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_delivered_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_package_ready_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer:{
			type:"deliverer_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_app_type_id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_dropoff_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_pickup_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_package_ready_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_public_inc_input:{
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_public_insert_input:{
		actual_arrival_at_dropoff_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_arrival_at_pickup_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_delivered_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_package_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer:{
			type:"deliverer_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_app_type_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_dropoff_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_pickup_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_package_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_public_order_by:{
		actual_arrival_at_dropoff_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_arrival_at_pickup_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_delivered_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_package_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer:{
			type:"deliverer_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_app_type_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_dropoff_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_pickup_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_package_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_public_select_column: "enum",
	delivery_order_public_set_input:{
		actual_arrival_at_dropoff_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_arrival_at_pickup_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_delivered_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_package_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_app_type_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_dropoff_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_pickup_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_package_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_public_stream_cursor_input:{
		initial_value:{
			type:"delivery_order_public_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_public_stream_cursor_value_input:{
		actual_arrival_at_dropoff_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_arrival_at_pickup_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_delivered_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_package_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_app_type_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_dropoff_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_pickup_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_package_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_public_updates:{
		_inc:{
			type:"delivery_order_public_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"delivery_order_public_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"delivery_order_public_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	delivery_order_select_column: "enum",
	delivery_order_set_input:{
		actual_arrival_at_dropoff_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_arrival_at_pickup_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_delivered_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_package_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_app_type_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		dropoff_address:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		dropoff_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_dropoff_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_pickup_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_package_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		pickup_address:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		pickup_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_polyline:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_stddev_order_by:{
		chat_with_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_stddev_pop_order_by:{
		chat_with_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_stddev_samp_order_by:{
		chat_with_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_stream_cursor_input:{
		initial_value:{
			type:"delivery_order_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_stream_cursor_value_input:{
		actual_arrival_at_dropoff_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_arrival_at_pickup_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_delivered_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		actual_package_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_app_type_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		dropoff_address:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		dropoff_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_dropoff_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_arrival_at_pickup_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_package_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		pickup_address:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		pickup_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_polyline:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_sum_order_by:{
		chat_with_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_update_column: "enum",
	delivery_order_updates:{
		_inc:{
			type:"delivery_order_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"delivery_order_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"delivery_order_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	delivery_order_var_pop_order_by:{
		chat_with_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_var_samp_order_by:{
		chat_with_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	delivery_order_variance_order_by:{
		chat_with_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_with_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		deliverer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		driver_review_by_service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		package_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_review_by_driver_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_distance:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		trip_duration:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	float8: "String",
	float8_comparison_exp:{
		_eq:{
			type:"float8",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"float8",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"float8",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"float8",
			array:true,
			arrayRequired:false,
			required:true
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"float8",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"float8",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"float8",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"float8",
			array:true,
			arrayRequired:false,
			required:true
		}
	},
	geography: "String",
	geography_cast_exp:{
		geometry:{
			type:"geometry_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	geography_comparison_exp:{
		_cast:{
			type:"geography_cast_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_eq:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"geography",
			array:true,
			arrayRequired:false,
			required:true
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"geography",
			array:true,
			arrayRequired:false,
			required:true
		},
		_st_d_within:{
			type:"st_d_within_geography_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_st_intersects:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	geometry: "String",
	geometry_cast_exp:{
		geography:{
			type:"geography_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	geometry_comparison_exp:{
		_cast:{
			type:"geometry_cast_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_eq:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"geometry",
			array:true,
			arrayRequired:false,
			required:true
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"geometry",
			array:true,
			arrayRequired:false,
			required:true
		},
		_st_3d_d_within:{
			type:"st_d_within_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_st_3d_intersects:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_st_contains:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_st_crosses:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_st_d_within:{
			type:"st_d_within_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_st_equals:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_st_intersects:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_st_overlaps:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_st_touches:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		},
		_st_within:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Int_comparison_exp:{
		_eq:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"Int",
			array:true,
			arrayRequired:false,
			required:true
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"Int",
			array:true,
			arrayRequired:false,
			required:true
		}
	},
	json: "String",
	json_comparison_exp:{
		_eq:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"json",
			array:true,
			arrayRequired:false,
			required:true
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"json",
			array:true,
			arrayRequired:false,
			required:true
		}
	},
	jsonb: "String",
	jsonb_cast_exp:{
		String:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	jsonb_comparison_exp:{
		_cast:{
			type:"jsonb_cast_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_contained_in:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		_contains:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		_eq:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		_has_key:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_has_keys_all:{
			type:"String",
			array:true,
			arrayRequired:false,
			required:true
		},
		_has_keys_any:{
			type:"String",
			array:true,
			arrayRequired:false,
			required:true
		},
		_in:{
			type:"jsonb",
			array:true,
			arrayRequired:false,
			required:true
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"jsonb",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"jsonb",
			array:true,
			arrayRequired:false,
			required:true
		}
	},
	mez_admin_aggregate_fields:{
		count:{
			columns:{
				type:"mez_admin_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	mez_admin_bool_exp:{
		_and:{
			type:"mez_admin_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"mez_admin_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"mez_admin_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		notification_token:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		version:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	mez_admin_constraint: "enum",
	mez_admin_inc_input:{
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	mez_admin_insert_input:{
		user:{
			type:"user_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		version:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	mez_admin_on_conflict:{
		constraint:{
			type:"mez_admin_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"mez_admin_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"mez_admin_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	mez_admin_order_by:{
		notification_token:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		version:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	mez_admin_pk_columns_input:{
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	mez_admin_select_column: "enum",
	mez_admin_set_input:{
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		version:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	mez_admin_stream_cursor_input:{
		initial_value:{
			type:"mez_admin_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	mez_admin_stream_cursor_value_input:{
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		version:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	mez_admin_update_column: "enum",
	mez_admin_updates:{
		_inc:{
			type:"mez_admin_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"mez_admin_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"mez_admin_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	money: "String",
	money_comparison_exp:{
		_eq:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"money",
			array:true,
			arrayRequired:false,
			required:true
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"money",
			array:true,
			arrayRequired:false,
			required:true
		}
	},
	mutation_root:{
		delete_chat:{
			where:{
				type:"chat_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_chat_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_chat_participant:{
			where:{
				type:"chat_participant_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_chat_participant_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_customer:{
			where:{
				type:"customer_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_customer_by_pk:{
			user_id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_deliverer:{
			where:{
				type:"deliverer_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_deliverer_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_delivery_order:{
			where:{
				type:"delivery_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_delivery_order_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_delivery_order_public:{
			where:{
				type:"delivery_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_mez_admin:{
			where:{
				type:"mez_admin_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_mez_admin_by_pk:{
			user_id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_notification_info:{
			where:{
				type:"notification_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_notification_info_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant:{
			where:{
				type:"restaurant_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_cart:{
			where:{
				type:"restaurant_cart_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_cart_by_pk:{
			customer_id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_cart_item:{
			where:{
				type:"restaurant_cart_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_cart_item_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_category:{
			where:{
				type:"restaurant_category_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_category_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_choice:{
			where:{
				type:"restaurant_choice_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_choice_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_item:{
			where:{
				type:"restaurant_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_item_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_item_option_map:{
			where:{
				type:"restaurant_item_option_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_item_option_map_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_operator:{
			where:{
				type:"restaurant_operator_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_operator_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_option:{
			where:{
				type:"restaurant_option_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_option_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_option_choice_map:{
			where:{
				type:"restaurant_option_choice_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_option_choice_map_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_order:{
			where:{
				type:"restaurant_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_order_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_order_item:{
			where:{
				type:"restaurant_order_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_order_item_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_restaurant_order_public:{
			where:{
				type:"restaurant_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_review:{
			where:{
				type:"review_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_review_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_saved_location:{
			where:{
				type:"saved_location_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_saved_location_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_service_provider_payment_info:{
			where:{
				type:"service_provider_payment_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_service_provider_payment_info_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_stripe_info:{
			where:{
				type:"stripe_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_stripe_info_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_topology_app_type:{
			where:{
				type:"topology_app_type_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_topology_app_type_by_pk:{
			id:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_topology_language:{
			where:{
				type:"topology_language_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_topology_language_by_pk:{
			id:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_translation:{
			where:{
				type:"translation_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_translation_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_translation_value:{
			where:{
				type:"translation_value_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_translation_value_by_pk:{
			language_id:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			translation_id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_user:{
			where:{
				type:"user_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delete_user_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		insert_chat:{
			objects:{
				type:"chat_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"chat_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_chat_one:{
			object:{
				type:"chat_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"chat_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_chat_participant:{
			objects:{
				type:"chat_participant_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"chat_participant_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_chat_participant_one:{
			object:{
				type:"chat_participant_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"chat_participant_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_customer:{
			objects:{
				type:"customer_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"customer_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_customer_one:{
			object:{
				type:"customer_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"customer_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_deliverer:{
			objects:{
				type:"deliverer_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"deliverer_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_deliverer_one:{
			object:{
				type:"deliverer_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"deliverer_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_delivery_order:{
			objects:{
				type:"delivery_order_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"delivery_order_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_delivery_order_one:{
			object:{
				type:"delivery_order_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"delivery_order_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_delivery_order_public:{
			objects:{
				type:"delivery_order_public_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		insert_delivery_order_public_one:{
			object:{
				type:"delivery_order_public_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		insert_mez_admin:{
			objects:{
				type:"mez_admin_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"mez_admin_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_mez_admin_one:{
			object:{
				type:"mez_admin_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"mez_admin_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_notification_info:{
			objects:{
				type:"notification_info_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"notification_info_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_notification_info_one:{
			object:{
				type:"notification_info_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"notification_info_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant:{
			objects:{
				type:"restaurant_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"restaurant_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_cart:{
			objects:{
				type:"restaurant_cart_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"restaurant_cart_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_cart_item:{
			objects:{
				type:"restaurant_cart_item_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"restaurant_cart_item_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_cart_item_one:{
			object:{
				type:"restaurant_cart_item_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"restaurant_cart_item_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_cart_one:{
			object:{
				type:"restaurant_cart_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"restaurant_cart_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_category:{
			objects:{
				type:"restaurant_category_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"restaurant_category_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_category_one:{
			object:{
				type:"restaurant_category_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"restaurant_category_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_choice:{
			objects:{
				type:"restaurant_choice_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"restaurant_choice_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_choice_one:{
			object:{
				type:"restaurant_choice_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"restaurant_choice_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_item:{
			objects:{
				type:"restaurant_item_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"restaurant_item_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_item_one:{
			object:{
				type:"restaurant_item_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"restaurant_item_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_item_option_map:{
			objects:{
				type:"restaurant_item_option_map_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"restaurant_item_option_map_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_item_option_map_one:{
			object:{
				type:"restaurant_item_option_map_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"restaurant_item_option_map_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_one:{
			object:{
				type:"restaurant_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"restaurant_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_operator:{
			objects:{
				type:"restaurant_operator_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"restaurant_operator_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_operator_one:{
			object:{
				type:"restaurant_operator_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"restaurant_operator_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_option:{
			objects:{
				type:"restaurant_option_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"restaurant_option_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_option_choice_map:{
			objects:{
				type:"restaurant_option_choice_map_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"restaurant_option_choice_map_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_option_choice_map_one:{
			object:{
				type:"restaurant_option_choice_map_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"restaurant_option_choice_map_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_option_one:{
			object:{
				type:"restaurant_option_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"restaurant_option_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_order:{
			objects:{
				type:"restaurant_order_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"restaurant_order_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_order_item:{
			objects:{
				type:"restaurant_order_item_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"restaurant_order_item_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_order_item_one:{
			object:{
				type:"restaurant_order_item_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"restaurant_order_item_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_order_one:{
			object:{
				type:"restaurant_order_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"restaurant_order_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_restaurant_order_public:{
			objects:{
				type:"restaurant_order_public_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		insert_restaurant_order_public_one:{
			object:{
				type:"restaurant_order_public_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		insert_review:{
			objects:{
				type:"review_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"review_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_review_one:{
			object:{
				type:"review_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"review_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_saved_location:{
			objects:{
				type:"saved_location_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"saved_location_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_saved_location_one:{
			object:{
				type:"saved_location_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"saved_location_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_service_provider_payment_info:{
			objects:{
				type:"service_provider_payment_info_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"service_provider_payment_info_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_service_provider_payment_info_one:{
			object:{
				type:"service_provider_payment_info_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"service_provider_payment_info_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_stripe_info:{
			objects:{
				type:"stripe_info_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"stripe_info_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_stripe_info_one:{
			object:{
				type:"stripe_info_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"stripe_info_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_topology_app_type:{
			objects:{
				type:"topology_app_type_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"topology_app_type_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_topology_app_type_one:{
			object:{
				type:"topology_app_type_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"topology_app_type_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_topology_language:{
			objects:{
				type:"topology_language_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"topology_language_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_topology_language_one:{
			object:{
				type:"topology_language_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"topology_language_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_translation:{
			objects:{
				type:"translation_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"translation_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_translation_one:{
			object:{
				type:"translation_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"translation_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_translation_value:{
			objects:{
				type:"translation_value_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"translation_value_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_translation_value_one:{
			object:{
				type:"translation_value_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"translation_value_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_user:{
			objects:{
				type:"user_insert_input",
				array:true,
				arrayRequired:true,
				required:true
			},
			on_conflict:{
				type:"user_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		insert_user_one:{
			object:{
				type:"user_insert_input",
				array:false,
				arrayRequired:false,
				required:true
			},
			on_conflict:{
				type:"user_on_conflict",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		update_chat:{
			_append:{
				type:"chat_append_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_delete_at_path:{
				type:"chat_delete_at_path_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_delete_elem:{
				type:"chat_delete_elem_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_delete_key:{
				type:"chat_delete_key_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_inc:{
				type:"chat_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_prepend:{
				type:"chat_prepend_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"chat_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"chat_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_chat_by_pk:{
			_append:{
				type:"chat_append_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_delete_at_path:{
				type:"chat_delete_at_path_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_delete_elem:{
				type:"chat_delete_elem_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_delete_key:{
				type:"chat_delete_key_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_inc:{
				type:"chat_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_prepend:{
				type:"chat_prepend_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"chat_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"chat_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_chat_many:{
			updates:{
				type:"chat_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_chat_participant:{
			_inc:{
				type:"chat_participant_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"chat_participant_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"chat_participant_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_chat_participant_by_pk:{
			_inc:{
				type:"chat_participant_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"chat_participant_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"chat_participant_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_chat_participant_many:{
			updates:{
				type:"chat_participant_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_customer:{
			_inc:{
				type:"customer_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"customer_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"customer_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_customer_by_pk:{
			_inc:{
				type:"customer_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"customer_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"customer_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_customer_many:{
			updates:{
				type:"customer_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_deliverer:{
			_inc:{
				type:"deliverer_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"deliverer_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"deliverer_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_deliverer_by_pk:{
			_inc:{
				type:"deliverer_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"deliverer_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"deliverer_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_deliverer_many:{
			updates:{
				type:"deliverer_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_delivery_order:{
			_inc:{
				type:"delivery_order_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"delivery_order_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"delivery_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_delivery_order_by_pk:{
			_inc:{
				type:"delivery_order_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"delivery_order_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"delivery_order_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_delivery_order_many:{
			updates:{
				type:"delivery_order_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_delivery_order_public:{
			_inc:{
				type:"delivery_order_public_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"delivery_order_public_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"delivery_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_delivery_order_public_many:{
			updates:{
				type:"delivery_order_public_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_mez_admin:{
			_inc:{
				type:"mez_admin_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"mez_admin_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"mez_admin_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_mez_admin_by_pk:{
			_inc:{
				type:"mez_admin_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"mez_admin_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"mez_admin_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_mez_admin_many:{
			updates:{
				type:"mez_admin_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_notification_info:{
			_inc:{
				type:"notification_info_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"notification_info_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"notification_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_notification_info_by_pk:{
			_inc:{
				type:"notification_info_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"notification_info_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"notification_info_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_notification_info_many:{
			updates:{
				type:"notification_info_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant:{
			_inc:{
				type:"restaurant_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_by_pk:{
			_inc:{
				type:"restaurant_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"restaurant_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_cart:{
			_inc:{
				type:"restaurant_cart_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_cart_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_cart_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_cart_by_pk:{
			_inc:{
				type:"restaurant_cart_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_cart_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"restaurant_cart_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_cart_item:{
			_inc:{
				type:"restaurant_cart_item_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_cart_item_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_cart_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_cart_item_by_pk:{
			_inc:{
				type:"restaurant_cart_item_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_cart_item_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"restaurant_cart_item_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_cart_item_many:{
			updates:{
				type:"restaurant_cart_item_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant_cart_many:{
			updates:{
				type:"restaurant_cart_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant_category:{
			_inc:{
				type:"restaurant_category_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_category_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_category_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_category_by_pk:{
			_inc:{
				type:"restaurant_category_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_category_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"restaurant_category_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_category_many:{
			updates:{
				type:"restaurant_category_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant_choice:{
			_inc:{
				type:"restaurant_choice_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_choice_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_choice_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_choice_by_pk:{
			_inc:{
				type:"restaurant_choice_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_choice_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"restaurant_choice_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_choice_many:{
			updates:{
				type:"restaurant_choice_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant_item:{
			_inc:{
				type:"restaurant_item_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_item_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_item_by_pk:{
			_inc:{
				type:"restaurant_item_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_item_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"restaurant_item_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_item_many:{
			updates:{
				type:"restaurant_item_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant_item_option_map:{
			_inc:{
				type:"restaurant_item_option_map_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_item_option_map_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_item_option_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_item_option_map_by_pk:{
			_inc:{
				type:"restaurant_item_option_map_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_item_option_map_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"restaurant_item_option_map_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_item_option_map_many:{
			updates:{
				type:"restaurant_item_option_map_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant_many:{
			updates:{
				type:"restaurant_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant_operator:{
			_inc:{
				type:"restaurant_operator_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_operator_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_operator_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_operator_by_pk:{
			_inc:{
				type:"restaurant_operator_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_operator_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"restaurant_operator_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_operator_many:{
			updates:{
				type:"restaurant_operator_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant_option:{
			_inc:{
				type:"restaurant_option_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_option_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_option_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_option_by_pk:{
			_inc:{
				type:"restaurant_option_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_option_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"restaurant_option_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_option_choice_map:{
			_inc:{
				type:"restaurant_option_choice_map_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_option_choice_map_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_option_choice_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_option_choice_map_by_pk:{
			_inc:{
				type:"restaurant_option_choice_map_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_option_choice_map_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"restaurant_option_choice_map_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_option_choice_map_many:{
			updates:{
				type:"restaurant_option_choice_map_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant_option_many:{
			updates:{
				type:"restaurant_option_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant_order:{
			_inc:{
				type:"restaurant_order_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_order_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_order_by_pk:{
			_inc:{
				type:"restaurant_order_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_order_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"restaurant_order_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_order_item:{
			_inc:{
				type:"restaurant_order_item_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_order_item_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_order_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_order_item_by_pk:{
			_inc:{
				type:"restaurant_order_item_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_order_item_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"restaurant_order_item_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_order_item_many:{
			updates:{
				type:"restaurant_order_item_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant_order_many:{
			updates:{
				type:"restaurant_order_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_restaurant_order_public:{
			_inc:{
				type:"restaurant_order_public_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"restaurant_order_public_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"restaurant_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_restaurant_order_public_many:{
			updates:{
				type:"restaurant_order_public_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_review:{
			_inc:{
				type:"review_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"review_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"review_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_review_by_pk:{
			_inc:{
				type:"review_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"review_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"review_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_review_many:{
			updates:{
				type:"review_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_saved_location:{
			_inc:{
				type:"saved_location_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"saved_location_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"saved_location_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_saved_location_by_pk:{
			_inc:{
				type:"saved_location_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"saved_location_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"saved_location_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_saved_location_many:{
			updates:{
				type:"saved_location_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_service_provider_payment_info:{
			_inc:{
				type:"service_provider_payment_info_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"service_provider_payment_info_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"service_provider_payment_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_service_provider_payment_info_by_pk:{
			_inc:{
				type:"service_provider_payment_info_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"service_provider_payment_info_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"service_provider_payment_info_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_service_provider_payment_info_many:{
			updates:{
				type:"service_provider_payment_info_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_stripe_info:{
			_inc:{
				type:"stripe_info_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"stripe_info_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"stripe_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_stripe_info_by_pk:{
			_inc:{
				type:"stripe_info_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"stripe_info_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"stripe_info_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_stripe_info_many:{
			updates:{
				type:"stripe_info_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_topology_app_type:{
			_set:{
				type:"topology_app_type_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"topology_app_type_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_topology_app_type_by_pk:{
			_set:{
				type:"topology_app_type_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"topology_app_type_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_topology_app_type_many:{
			updates:{
				type:"topology_app_type_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_topology_language:{
			_set:{
				type:"topology_language_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"topology_language_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_topology_language_by_pk:{
			_set:{
				type:"topology_language_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"topology_language_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_topology_language_many:{
			updates:{
				type:"topology_language_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_translation:{
			_inc:{
				type:"translation_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"translation_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"translation_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_translation_by_pk:{
			_inc:{
				type:"translation_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"translation_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"translation_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_translation_many:{
			updates:{
				type:"translation_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_translation_value:{
			_inc:{
				type:"translation_value_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"translation_value_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"translation_value_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_translation_value_by_pk:{
			_inc:{
				type:"translation_value_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"translation_value_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"translation_value_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_translation_value_many:{
			updates:{
				type:"translation_value_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		},
		update_user:{
			_inc:{
				type:"user_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"user_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			where:{
				type:"user_bool_exp",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_user_by_pk:{
			_inc:{
				type:"user_inc_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			_set:{
				type:"user_set_input",
				array:false,
				arrayRequired:false,
				required:false
			},
			pk_columns:{
				type:"user_pk_columns_input",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		update_user_many:{
			updates:{
				type:"user_updates",
				array:true,
				arrayRequired:true,
				required:true
			}
		}
	},
	notification_info_aggregate_fields:{
		count:{
			columns:{
				type:"notification_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	notification_info_bool_exp:{
		_and:{
			type:"notification_info_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"notification_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"notification_info_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		app_type_id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		token:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	notification_info_constraint: "enum",
	notification_info_inc_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	notification_info_insert_input:{
		app_type_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		token:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	notification_info_obj_rel_insert_input:{
		data:{
			type:"notification_info_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"notification_info_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	notification_info_on_conflict:{
		constraint:{
			type:"notification_info_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"notification_info_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"notification_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	notification_info_order_by:{
		app_type_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		token:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	notification_info_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	notification_info_select_column: "enum",
	notification_info_set_input:{
		app_type_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		token:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	notification_info_stream_cursor_input:{
		initial_value:{
			type:"notification_info_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	notification_info_stream_cursor_value_input:{
		app_type_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		token:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	notification_info_update_column: "enum",
	notification_info_updates:{
		_inc:{
			type:"notification_info_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"notification_info_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"notification_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	order_by: "enum",
	query_root:{
		chat:{
			distinct_on:{
				type:"chat_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"chat_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"chat_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		chat_aggregate:{
			distinct_on:{
				type:"chat_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"chat_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"chat_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		chat_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		chat_participant:{
			distinct_on:{
				type:"chat_participant_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"chat_participant_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"chat_participant_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		chat_participant_aggregate:{
			distinct_on:{
				type:"chat_participant_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"chat_participant_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"chat_participant_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		chat_participant_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		customer:{
			distinct_on:{
				type:"customer_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"customer_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"customer_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		customer_aggregate:{
			distinct_on:{
				type:"customer_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"customer_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"customer_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		customer_by_pk:{
			user_id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deliverer:{
			distinct_on:{
				type:"deliverer_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"deliverer_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"deliverer_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		deliverer_aggregate:{
			distinct_on:{
				type:"deliverer_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"deliverer_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"deliverer_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		deliverer_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delivery_order:{
			distinct_on:{
				type:"delivery_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"delivery_order_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"delivery_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		delivery_order_aggregate:{
			distinct_on:{
				type:"delivery_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"delivery_order_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"delivery_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		delivery_order_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delivery_order_public:{
			distinct_on:{
				type:"delivery_order_public_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"delivery_order_public_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"delivery_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		delivery_order_public_aggregate:{
			distinct_on:{
				type:"delivery_order_public_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"delivery_order_public_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"delivery_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		mez_admin:{
			distinct_on:{
				type:"mez_admin_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"mez_admin_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"mez_admin_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		mez_admin_aggregate:{
			distinct_on:{
				type:"mez_admin_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"mez_admin_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"mez_admin_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		mez_admin_by_pk:{
			user_id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		notification_info:{
			distinct_on:{
				type:"notification_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"notification_info_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"notification_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		notification_info_aggregate:{
			distinct_on:{
				type:"notification_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"notification_info_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"notification_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		notification_info_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant:{
			distinct_on:{
				type:"restaurant_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_aggregate:{
			distinct_on:{
				type:"restaurant_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_cart:{
			distinct_on:{
				type:"restaurant_cart_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_cart_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_cart_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_cart_aggregate:{
			distinct_on:{
				type:"restaurant_cart_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_cart_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_cart_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_cart_by_pk:{
			customer_id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_cart_item:{
			distinct_on:{
				type:"restaurant_cart_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_cart_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_cart_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_cart_item_aggregate:{
			distinct_on:{
				type:"restaurant_cart_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_cart_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_cart_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_cart_item_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_category:{
			distinct_on:{
				type:"restaurant_category_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_category_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_category_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_category_aggregate:{
			distinct_on:{
				type:"restaurant_category_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_category_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_category_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_category_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_choice:{
			distinct_on:{
				type:"restaurant_choice_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_choice_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_choice_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_choice_aggregate:{
			distinct_on:{
				type:"restaurant_choice_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_choice_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_choice_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_choice_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_item:{
			distinct_on:{
				type:"restaurant_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_item_aggregate:{
			distinct_on:{
				type:"restaurant_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_item_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_item_option_map:{
			distinct_on:{
				type:"restaurant_item_option_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_option_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_option_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_item_option_map_aggregate:{
			distinct_on:{
				type:"restaurant_item_option_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_option_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_option_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_item_option_map_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_operator:{
			distinct_on:{
				type:"restaurant_operator_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_operator_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_operator_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_operator_aggregate:{
			distinct_on:{
				type:"restaurant_operator_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_operator_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_operator_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_operator_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_option:{
			distinct_on:{
				type:"restaurant_option_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_option_aggregate:{
			distinct_on:{
				type:"restaurant_option_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_option_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_option_choice_map:{
			distinct_on:{
				type:"restaurant_option_choice_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_choice_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_choice_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_option_choice_map_aggregate:{
			distinct_on:{
				type:"restaurant_option_choice_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_choice_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_choice_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_option_choice_map_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_order:{
			distinct_on:{
				type:"restaurant_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_aggregate:{
			distinct_on:{
				type:"restaurant_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_order_item:{
			distinct_on:{
				type:"restaurant_order_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_item_aggregate:{
			distinct_on:{
				type:"restaurant_order_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_item_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_order_public:{
			distinct_on:{
				type:"restaurant_order_public_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_public_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_public_aggregate:{
			distinct_on:{
				type:"restaurant_order_public_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_public_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		review:{
			distinct_on:{
				type:"review_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"review_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"review_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		review_aggregate:{
			distinct_on:{
				type:"review_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"review_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"review_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		review_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		saved_location:{
			distinct_on:{
				type:"saved_location_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"saved_location_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"saved_location_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		saved_location_aggregate:{
			distinct_on:{
				type:"saved_location_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"saved_location_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"saved_location_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		saved_location_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		service_provider_payment_info:{
			distinct_on:{
				type:"service_provider_payment_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"service_provider_payment_info_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"service_provider_payment_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		service_provider_payment_info_aggregate:{
			distinct_on:{
				type:"service_provider_payment_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"service_provider_payment_info_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"service_provider_payment_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		service_provider_payment_info_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		stripe_info:{
			distinct_on:{
				type:"stripe_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"stripe_info_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"stripe_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		stripe_info_aggregate:{
			distinct_on:{
				type:"stripe_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"stripe_info_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"stripe_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		stripe_info_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		topology_app_type:{
			distinct_on:{
				type:"topology_app_type_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"topology_app_type_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"topology_app_type_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		topology_app_type_aggregate:{
			distinct_on:{
				type:"topology_app_type_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"topology_app_type_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"topology_app_type_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		topology_app_type_by_pk:{
			id:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		topology_language:{
			distinct_on:{
				type:"topology_language_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"topology_language_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"topology_language_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		topology_language_aggregate:{
			distinct_on:{
				type:"topology_language_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"topology_language_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"topology_language_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		topology_language_by_pk:{
			id:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		translation:{
			distinct_on:{
				type:"translation_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"translation_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"translation_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		translation_aggregate:{
			distinct_on:{
				type:"translation_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"translation_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"translation_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		translation_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		translation_value:{
			distinct_on:{
				type:"translation_value_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"translation_value_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"translation_value_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		translation_value_aggregate:{
			distinct_on:{
				type:"translation_value_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"translation_value_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"translation_value_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		translation_value_by_pk:{
			language_id:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			translation_id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		user:{
			distinct_on:{
				type:"user_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"user_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"user_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		user_aggregate:{
			distinct_on:{
				type:"user_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"user_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"user_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		user_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		}
	},
	restaurant:{
		categories:{
			distinct_on:{
				type:"restaurant_category_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_category_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_category_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		categories_aggregate:{
			distinct_on:{
				type:"restaurant_category_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_category_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_category_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		orders:{
			distinct_on:{
				type:"restaurant_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		orders_aggregate:{
			distinct_on:{
				type:"restaurant_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_operators:{
			distinct_on:{
				type:"restaurant_operator_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_operator_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_operator_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_operators_aggregate:{
			distinct_on:{
				type:"restaurant_operator_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_operator_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_operator_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		specials:{
			distinct_on:{
				type:"restaurant_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_bool_exp:{
		_and:{
			type:"restaurant_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		approved:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		categories:{
			type:"restaurant_category_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"translation_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		image:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_gps:{
			type:"geography_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_text:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		open_status:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		orders:{
			type:"restaurant_order_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_info:{
			type:"service_provider_payment_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_info_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_operators:{
			type:"restaurant_operator_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		self_delivery:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		specials:{
			type:"restaurant_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart:{
		items:{
			distinct_on:{
				type:"restaurant_cart_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_cart_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_cart_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		items_aggregate:{
			distinct_on:{
				type:"restaurant_cart_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_cart_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_cart_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_cart_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_cart_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_cart_bool_exp:{
		_and:{
			type:"restaurant_cart_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_cart_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_cart_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		cost:{
			type:"money_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer:{
			type:"customer_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		items:{
			type:"restaurant_cart_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_constraint: "enum",
	restaurant_cart_inc_input:{
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_insert_input:{
		customer:{
			type:"customer_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		items:{
			type:"restaurant_cart_item_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item:{
		selected_options:{
			path:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_cart_item_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_cart_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_cart_item_aggregate_order_by:{
		avg:{
			type:"restaurant_cart_item_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"restaurant_cart_item_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"restaurant_cart_item_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"restaurant_cart_item_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"restaurant_cart_item_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"restaurant_cart_item_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"restaurant_cart_item_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"restaurant_cart_item_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"restaurant_cart_item_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"restaurant_cart_item_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_arr_rel_insert_input:{
		data:{
			type:"restaurant_cart_item_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"restaurant_cart_item_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_avg_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_bool_exp:{
		_and:{
			type:"restaurant_cart_item_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_cart_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_cart_item_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		cost_per_one:{
			type:"money_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		note:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_cart:{
			type:"restaurant_cart_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item:{
			type:"restaurant_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		selected_options:{
			type:"json_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_constraint: "enum",
	restaurant_cart_item_inc_input:{
		cost_per_one:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_insert_input:{
		cost_per_one:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		note:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_cart:{
			type:"restaurant_cart_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item:{
			type:"restaurant_item_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		selected_options:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_max_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		note:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_min_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		note:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_on_conflict:{
		constraint:{
			type:"restaurant_cart_item_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"restaurant_cart_item_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"restaurant_cart_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		note:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_cart:{
			type:"restaurant_cart_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item:{
			type:"restaurant_item_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		selected_options:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_cart_item_select_column: "enum",
	restaurant_cart_item_set_input:{
		cost_per_one:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		note:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		selected_options:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_stddev_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_stddev_pop_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_stddev_samp_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_stream_cursor_input:{
		initial_value:{
			type:"restaurant_cart_item_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_stream_cursor_value_input:{
		cost_per_one:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		note:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		selected_options:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_sum_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_update_column: "enum",
	restaurant_cart_item_updates:{
		_inc:{
			type:"restaurant_cart_item_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_cart_item_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_cart_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_cart_item_var_pop_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_var_samp_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_item_variance_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_obj_rel_insert_input:{
		data:{
			type:"restaurant_cart_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"restaurant_cart_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_on_conflict:{
		constraint:{
			type:"restaurant_cart_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"restaurant_cart_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"restaurant_cart_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_order_by:{
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer:{
			type:"customer_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		items_aggregate:{
			type:"restaurant_cart_item_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_pk_columns_input:{
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_cart_select_column: "enum",
	restaurant_cart_set_input:{
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_stream_cursor_input:{
		initial_value:{
			type:"restaurant_cart_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_stream_cursor_value_input:{
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_cart_update_column: "enum",
	restaurant_cart_updates:{
		_inc:{
			type:"restaurant_cart_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_cart_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_cart_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_category:{
		items:{
			distinct_on:{
				type:"restaurant_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		items_aggregate:{
			distinct_on:{
				type:"restaurant_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_category_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_category_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_category_aggregate_order_by:{
		avg:{
			type:"restaurant_category_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"restaurant_category_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"restaurant_category_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"restaurant_category_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"restaurant_category_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"restaurant_category_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"restaurant_category_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"restaurant_category_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"restaurant_category_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"restaurant_category_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_arr_rel_insert_input:{
		data:{
			type:"restaurant_category_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"restaurant_category_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_avg_order_by:{
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_bool_exp:{
		_and:{
			type:"restaurant_category_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_category_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_category_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		description:{
			type:"translation_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		items:{
			type:"restaurant_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"translation_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_constraint: "enum",
	restaurant_category_inc_input:{
		description_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_insert_input:{
		description:{
			type:"translation_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		items:{
			type:"restaurant_item_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"translation_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_max_order_by:{
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_min_order_by:{
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_obj_rel_insert_input:{
		data:{
			type:"restaurant_category_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"restaurant_category_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_on_conflict:{
		constraint:{
			type:"restaurant_category_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"restaurant_category_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"restaurant_category_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_order_by:{
		description:{
			type:"translation_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		items_aggregate:{
			type:"restaurant_item_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"translation_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_category_select_column: "enum",
	restaurant_category_set_input:{
		description_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_stddev_order_by:{
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_stddev_pop_order_by:{
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_stddev_samp_order_by:{
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_stream_cursor_input:{
		initial_value:{
			type:"restaurant_category_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_stream_cursor_value_input:{
		description_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_sum_order_by:{
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_update_column: "enum",
	restaurant_category_updates:{
		_inc:{
			type:"restaurant_category_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_category_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_category_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_category_var_pop_order_by:{
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_var_samp_order_by:{
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_category_variance_order_by:{
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice:{
		options:{
			distinct_on:{
				type:"restaurant_option_choice_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_choice_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_choice_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		options_aggregate:{
			distinct_on:{
				type:"restaurant_option_choice_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_choice_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_choice_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_choice_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_choice_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_choice_aggregate_order_by:{
		avg:{
			type:"restaurant_choice_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"restaurant_choice_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"restaurant_choice_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"restaurant_choice_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"restaurant_choice_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"restaurant_choice_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"restaurant_choice_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"restaurant_choice_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"restaurant_choice_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"restaurant_choice_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_arr_rel_insert_input:{
		data:{
			type:"restaurant_choice_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"restaurant_choice_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_avg_order_by:{
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_bool_exp:{
		_and:{
			type:"restaurant_choice_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_choice_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_choice_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		available:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"money_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"translation_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		options:{
			type:"restaurant_option_choice_map_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_constraint: "enum",
	restaurant_choice_inc_input:{
		cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_insert_input:{
		available:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"translation_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		options:{
			type:"restaurant_option_choice_map_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_max_order_by:{
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_min_order_by:{
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_on_conflict:{
		constraint:{
			type:"restaurant_choice_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"restaurant_choice_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"restaurant_choice_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_order_by:{
		available:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"translation_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		options_aggregate:{
			type:"restaurant_option_choice_map_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_choice_select_column: "enum",
	restaurant_choice_set_input:{
		available:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_stddev_order_by:{
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_stddev_pop_order_by:{
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_stddev_samp_order_by:{
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_stream_cursor_input:{
		initial_value:{
			type:"restaurant_choice_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_stream_cursor_value_input:{
		available:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_sum_order_by:{
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_update_column: "enum",
	restaurant_choice_updates:{
		_inc:{
			type:"restaurant_choice_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_choice_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_choice_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_choice_var_pop_order_by:{
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_var_samp_order_by:{
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_choice_variance_order_by:{
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_constraint: "enum",
	restaurant_inc_input:{
		description_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_info_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_insert_input:{
		approved:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		categories:{
			type:"restaurant_category_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"translation_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		image:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_text:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		open_status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		orders:{
			type:"restaurant_order_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_info:{
			type:"service_provider_payment_info_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_info_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_operators:{
			type:"restaurant_operator_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		self_delivery:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item:{
		options:{
			distinct_on:{
				type:"restaurant_item_option_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_option_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_option_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		options_aggregate:{
			distinct_on:{
				type:"restaurant_item_option_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_option_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_option_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_item_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_item_aggregate_order_by:{
		avg:{
			type:"restaurant_item_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"restaurant_item_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"restaurant_item_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"restaurant_item_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"restaurant_item_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"restaurant_item_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"restaurant_item_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"restaurant_item_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"restaurant_item_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"restaurant_item_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_arr_rel_insert_input:{
		data:{
			type:"restaurant_item_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"restaurant_item_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_avg_order_by:{
		category_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_bool_exp:{
		_and:{
			type:"restaurant_item_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_item_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		archived:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		available:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		category:{
			type:"restaurant_category_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		category_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"money_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"translation_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"translation_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		options:{
			type:"restaurant_item_option_map_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_end:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_start:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_constraint: "enum",
	restaurant_item_inc_input:{
		category_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_insert_input:{
		archived:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		available:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		category:{
			type:"restaurant_category_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		category_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"translation_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"translation_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		options:{
			type:"restaurant_item_option_map_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_end:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_start:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_max_order_by:{
		category_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_end:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_start:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_min_order_by:{
		category_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_end:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_start:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_obj_rel_insert_input:{
		data:{
			type:"restaurant_item_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"restaurant_item_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_on_conflict:{
		constraint:{
			type:"restaurant_item_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"restaurant_item_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"restaurant_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map:{
		item_options:{
			distinct_on:{
				type:"restaurant_option_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		item_options_aggregate:{
			distinct_on:{
				type:"restaurant_option_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_item_option_map_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_item_option_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_item_option_map_aggregate_order_by:{
		avg:{
			type:"restaurant_item_option_map_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"restaurant_item_option_map_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"restaurant_item_option_map_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"restaurant_item_option_map_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"restaurant_item_option_map_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"restaurant_item_option_map_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"restaurant_item_option_map_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"restaurant_item_option_map_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"restaurant_item_option_map_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"restaurant_item_option_map_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_arr_rel_insert_input:{
		data:{
			type:"restaurant_item_option_map_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"restaurant_item_option_map_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_avg_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_bool_exp:{
		_and:{
			type:"restaurant_item_option_map_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_item_option_map_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_item_option_map_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_options:{
			type:"restaurant_option_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_constraint: "enum",
	restaurant_item_option_map_inc_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_insert_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_options:{
			type:"restaurant_option_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_max_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_min_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_on_conflict:{
		constraint:{
			type:"restaurant_item_option_map_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"restaurant_item_option_map_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"restaurant_item_option_map_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_options_aggregate:{
			type:"restaurant_option_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_item_option_map_select_column: "enum",
	restaurant_item_option_map_set_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_stddev_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_stddev_pop_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_stddev_samp_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_stream_cursor_input:{
		initial_value:{
			type:"restaurant_item_option_map_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_stream_cursor_value_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_sum_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_update_column: "enum",
	restaurant_item_option_map_updates:{
		_inc:{
			type:"restaurant_item_option_map_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_item_option_map_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_item_option_map_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_item_option_map_var_pop_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_var_samp_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_option_map_variance_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_order_by:{
		archived:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		available:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		category:{
			type:"restaurant_category_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		category_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"translation_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"translation_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		options_aggregate:{
			type:"restaurant_item_option_map_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_end:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_start:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_item_select_column: "enum",
	restaurant_item_set_input:{
		archived:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		available:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		category_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_end:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_start:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_stddev_order_by:{
		category_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_stddev_pop_order_by:{
		category_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_stddev_samp_order_by:{
		category_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_stream_cursor_input:{
		initial_value:{
			type:"restaurant_item_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_stream_cursor_value_input:{
		archived:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		available:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		category_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		item_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_end:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		special_period_start:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_sum_order_by:{
		category_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_update_column: "enum",
	restaurant_item_updates:{
		_inc:{
			type:"restaurant_item_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_item_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_item_var_pop_order_by:{
		category_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_var_samp_order_by:{
		category_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_item_variance_order_by:{
		category_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_obj_rel_insert_input:{
		data:{
			type:"restaurant_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"restaurant_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_on_conflict:{
		constraint:{
			type:"restaurant_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"restaurant_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_operator_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_operator_aggregate_order_by:{
		avg:{
			type:"restaurant_operator_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"restaurant_operator_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"restaurant_operator_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"restaurant_operator_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"restaurant_operator_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"restaurant_operator_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"restaurant_operator_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"restaurant_operator_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"restaurant_operator_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"restaurant_operator_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_arr_rel_insert_input:{
		data:{
			type:"restaurant_operator_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"restaurant_operator_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_avg_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_bool_exp:{
		_and:{
			type:"restaurant_operator_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_operator_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_operator_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		app_version:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_gps:{
			type:"geography_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_token:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		owner:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_constraint: "enum",
	restaurant_operator_inc_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_insert_input:{
		app_version:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		owner:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_max_order_by:{
		app_version:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_min_order_by:{
		app_version:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_on_conflict:{
		constraint:{
			type:"restaurant_operator_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"restaurant_operator_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"restaurant_operator_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_order_by:{
		app_version:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_gps:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		notification_token:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		owner:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"user_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_operator_select_column: "enum",
	restaurant_operator_set_input:{
		app_version:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		owner:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_stddev_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_stddev_pop_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_stddev_samp_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_stream_cursor_input:{
		initial_value:{
			type:"restaurant_operator_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_stream_cursor_value_input:{
		app_version:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		current_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		owner:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_sum_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_update_column: "enum",
	restaurant_operator_updates:{
		_inc:{
			type:"restaurant_operator_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_operator_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_operator_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_operator_var_pop_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_var_samp_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_operator_variance_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		user_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option:{
		choices:{
			distinct_on:{
				type:"restaurant_option_choice_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_choice_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_choice_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		choices_aggregate:{
			distinct_on:{
				type:"restaurant_option_choice_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_choice_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_choice_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		items:{
			distinct_on:{
				type:"restaurant_item_option_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_option_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_option_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		items_aggregate:{
			distinct_on:{
				type:"restaurant_item_option_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_option_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_option_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_option_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_option_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_option_aggregate_order_by:{
		avg:{
			type:"restaurant_option_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"restaurant_option_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"restaurant_option_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"restaurant_option_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"restaurant_option_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"restaurant_option_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"restaurant_option_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"restaurant_option_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"restaurant_option_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"restaurant_option_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_arr_rel_insert_input:{
		data:{
			type:"restaurant_option_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"restaurant_option_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_avg_order_by:{
		cost_per_extra:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_bool_exp:{
		_and:{
			type:"restaurant_option_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_option_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_option_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		choices:{
			type:"restaurant_option_choice_map_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost_per_extra:{
			type:"money_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		items:{
			type:"restaurant_item_option_map_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"translation_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map:{
		option_choices:{
			distinct_on:{
				type:"restaurant_choice_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_choice_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_choice_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		option_choices_aggregate:{
			distinct_on:{
				type:"restaurant_choice_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_choice_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_choice_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_option_choice_map_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_option_choice_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_option_choice_map_aggregate_order_by:{
		avg:{
			type:"restaurant_option_choice_map_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"restaurant_option_choice_map_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"restaurant_option_choice_map_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"restaurant_option_choice_map_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"restaurant_option_choice_map_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"restaurant_option_choice_map_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"restaurant_option_choice_map_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"restaurant_option_choice_map_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"restaurant_option_choice_map_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"restaurant_option_choice_map_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_arr_rel_insert_input:{
		data:{
			type:"restaurant_option_choice_map_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"restaurant_option_choice_map_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_avg_order_by:{
		choice_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_bool_exp:{
		_and:{
			type:"restaurant_option_choice_map_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_option_choice_map_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_option_choice_map_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		choice_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_choices:{
			type:"restaurant_choice_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_constraint: "enum",
	restaurant_option_choice_map_inc_input:{
		choice_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_insert_input:{
		choice_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_choices:{
			type:"restaurant_choice_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_max_order_by:{
		choice_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_min_order_by:{
		choice_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_on_conflict:{
		constraint:{
			type:"restaurant_option_choice_map_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"restaurant_option_choice_map_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"restaurant_option_choice_map_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_order_by:{
		choice_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_choices_aggregate:{
			type:"restaurant_choice_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_option_choice_map_select_column: "enum",
	restaurant_option_choice_map_set_input:{
		choice_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_stddev_order_by:{
		choice_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_stddev_pop_order_by:{
		choice_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_stddev_samp_order_by:{
		choice_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_stream_cursor_input:{
		initial_value:{
			type:"restaurant_option_choice_map_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_stream_cursor_value_input:{
		choice_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_sum_order_by:{
		choice_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_update_column: "enum",
	restaurant_option_choice_map_updates:{
		_inc:{
			type:"restaurant_option_choice_map_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_option_choice_map_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_option_choice_map_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_option_choice_map_var_pop_order_by:{
		choice_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_var_samp_order_by:{
		choice_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_choice_map_variance_order_by:{
		choice_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_constraint: "enum",
	restaurant_option_inc_input:{
		cost_per_extra:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_insert_input:{
		choices:{
			type:"restaurant_option_choice_map_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost_per_extra:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		items:{
			type:"restaurant_item_option_map_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"translation_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_max_order_by:{
		cost_per_extra:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_min_order_by:{
		cost_per_extra:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_on_conflict:{
		constraint:{
			type:"restaurant_option_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"restaurant_option_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"restaurant_option_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_order_by:{
		choices_aggregate:{
			type:"restaurant_option_choice_map_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cost_per_extra:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		items_aggregate:{
			type:"restaurant_item_option_map_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"translation_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_option_select_column: "enum",
	restaurant_option_set_input:{
		cost_per_extra:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_stddev_order_by:{
		cost_per_extra:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_stddev_pop_order_by:{
		cost_per_extra:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_stddev_samp_order_by:{
		cost_per_extra:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_stream_cursor_input:{
		initial_value:{
			type:"restaurant_option_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_stream_cursor_value_input:{
		cost_per_extra:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		option_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_sum_order_by:{
		cost_per_extra:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_update_column: "enum",
	restaurant_option_updates:{
		_inc:{
			type:"restaurant_option_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_option_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_option_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_option_var_pop_order_by:{
		cost_per_extra:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_var_samp_order_by:{
		cost_per_extra:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_option_variance_order_by:{
		cost_per_extra:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		free_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		maximum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		minimum_choice:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		position:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order:{
		items:{
			distinct_on:{
				type:"restaurant_order_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		items_aggregate:{
			distinct_on:{
				type:"restaurant_order_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_order_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_order_aggregate_order_by:{
		avg:{
			type:"restaurant_order_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"restaurant_order_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"restaurant_order_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"restaurant_order_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"restaurant_order_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"restaurant_order_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"restaurant_order_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"restaurant_order_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"restaurant_order_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"restaurant_order_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_arr_rel_insert_input:{
		data:{
			type:"restaurant_order_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"restaurant_order_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_avg_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_bool_exp:{
		_and:{
			type:"restaurant_order_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_order_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_order_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		actual_food_ready_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat:{
			type:"chat_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer:{
			type:"customer_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_app_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery:{
			type:"delivery_order_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"money_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_food_ready_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		items:{
			type:"restaurant_order_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		items_cost:{
			type:"money_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		review:{
			type:"review_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"float8_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_location_address:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_location_gps:{
			type:"geography_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		total_cost:{
			type:"money_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_by:{
		approved:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		categories_aggregate:{
			type:"restaurant_category_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"translation_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		image:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_gps:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_text:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		open_status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		orders_aggregate:{
			type:"restaurant_order_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_info:{
			type:"service_provider_payment_info_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_info_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_operators_aggregate:{
			type:"restaurant_operator_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		self_delivery:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		specials_aggregate:{
			type:"restaurant_item_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_constraint: "enum",
	restaurant_order_inc_input:{
		chat_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"float8",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_insert_input:{
		actual_food_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat:{
			type:"chat_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer:{
			type:"customer_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_app_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery:{
			type:"delivery_order_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_food_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		items:{
			type:"restaurant_order_item_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		review:{
			type:"review_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"float8",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_location_address:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_location_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item:{
		in_json:{
			path:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_order_item_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_order_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_order_item_aggregate_order_by:{
		avg:{
			type:"restaurant_order_item_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"restaurant_order_item_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"restaurant_order_item_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"restaurant_order_item_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"restaurant_order_item_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"restaurant_order_item_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"restaurant_order_item_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"restaurant_order_item_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"restaurant_order_item_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"restaurant_order_item_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_arr_rel_insert_input:{
		data:{
			type:"restaurant_order_item_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"restaurant_order_item_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_avg_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_bool_exp:{
		_and:{
			type:"restaurant_order_item_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_order_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_order_item_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		cost_per_one:{
			type:"money_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		in_json:{
			type:"json_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		order:{
			type:"restaurant_order_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item:{
			type:"restaurant_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		unavailable:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_constraint: "enum",
	restaurant_order_item_inc_input:{
		cost_per_one:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_insert_input:{
		cost_per_one:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		in_json:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		order:{
			type:"restaurant_order_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item:{
			type:"restaurant_item_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		unavailable:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_max_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_min_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_on_conflict:{
		constraint:{
			type:"restaurant_order_item_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"restaurant_order_item_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"restaurant_order_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		in_json:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		order:{
			type:"restaurant_order_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item:{
			type:"restaurant_item_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		unavailable:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_order_item_select_column: "enum",
	restaurant_order_item_set_input:{
		cost_per_one:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		in_json:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		unavailable:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_stddev_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_stddev_pop_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_stddev_samp_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_stream_cursor_input:{
		initial_value:{
			type:"restaurant_order_item_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_stream_cursor_value_input:{
		cost_per_one:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		in_json:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		unavailable:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_sum_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_update_column: "enum",
	restaurant_order_item_updates:{
		_inc:{
			type:"restaurant_order_item_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_order_item_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_order_item_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_order_item_var_pop_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_var_samp_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_item_variance_order_by:{
		cost_per_one:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		quantity:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_item_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_order_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_max_order_by:{
		actual_food_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_app_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_food_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_location_address:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_min_order_by:{
		actual_food_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_app_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_food_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_location_address:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_obj_rel_insert_input:{
		data:{
			type:"restaurant_order_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"restaurant_order_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_on_conflict:{
		constraint:{
			type:"restaurant_order_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"restaurant_order_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"restaurant_order_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_order_by:{
		actual_food_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat:{
			type:"chat_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer:{
			type:"customer_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_app_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery:{
			type:"delivery_order_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_food_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		items_aggregate:{
			type:"restaurant_order_item_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		items_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review:{
			type:"review_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_location_address:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_location_gps:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		total_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_order_public:{
		restaurant_operators:{
			distinct_on:{
				type:"restaurant_operator_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_operator_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_operator_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_operators_aggregate:{
			distinct_on:{
				type:"restaurant_operator_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_operator_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_operator_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_order_public_aggregate_fields:{
		count:{
			columns:{
				type:"restaurant_order_public_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	restaurant_order_public_bool_exp:{
		_and:{
			type:"restaurant_order_public_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"restaurant_order_public_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"restaurant_order_public_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		actual_food_ready_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_food_ready_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_operators:{
			type:"restaurant_operator_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_public_inc_input:{
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_public_insert_input:{
		actual_food_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_food_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_operators:{
			type:"restaurant_operator_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_public_order_by:{
		actual_food_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_food_ready_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_operators_aggregate:{
			type:"restaurant_operator_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_public_select_column: "enum",
	restaurant_order_public_set_input:{
		actual_food_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_food_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_public_stream_cursor_input:{
		initial_value:{
			type:"restaurant_order_public_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_public_stream_cursor_value_input:{
		actual_food_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_food_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_public_updates:{
		_inc:{
			type:"restaurant_order_public_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_order_public_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_order_public_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_order_select_column: "enum",
	restaurant_order_set_input:{
		actual_food_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_app_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_food_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"float8",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_location_address:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_location_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_stddev_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_stddev_pop_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_stddev_samp_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_stream_cursor_input:{
		initial_value:{
			type:"restaurant_order_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_stream_cursor_value_input:{
		actual_food_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancellation_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		chat_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_app_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"money",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		estimated_food_ready_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_time:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		order_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"float8",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_location_address:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_location_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_sum_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_update_column: "enum",
	restaurant_order_updates:{
		_inc:{
			type:"restaurant_order_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_order_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_order_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_order_var_pop_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_var_samp_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_order_variance_order_by:{
		chat_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_cost:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		delivery_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		refund_amount:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		review_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_payment_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		tax:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	restaurant_select_column: "enum",
	restaurant_set_input:{
		approved:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		image:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_text:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		open_status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_info_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		self_delivery:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_stream_cursor_input:{
		initial_value:{
			type:"restaurant_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_stream_cursor_value_input:{
		approved:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		description_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		image:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_text:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		open_status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		payment_info_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		schedule_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		self_delivery:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	restaurant_update_column: "enum",
	restaurant_updates:{
		_inc:{
			type:"restaurant_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"restaurant_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	review_aggregate_fields:{
		count:{
			columns:{
				type:"review_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	review_bool_exp:{
		_and:{
			type:"review_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"review_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"review_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		from_entity_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		from_entity_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		note:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		rating:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_entity_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_entity_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	review_constraint: "enum",
	review_inc_input:{
		from_entity_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		rating:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_entity_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	review_insert_input:{
		from_entity_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		from_entity_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		note:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		rating:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_entity_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_entity_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	review_obj_rel_insert_input:{
		data:{
			type:"review_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"review_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	review_on_conflict:{
		constraint:{
			type:"review_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"review_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"review_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	review_order_by:{
		from_entity_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		from_entity_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		note:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		rating:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_entity_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_entity_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	review_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	review_select_column: "enum",
	review_set_input:{
		from_entity_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		from_entity_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		note:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		rating:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_entity_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_entity_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	review_stream_cursor_input:{
		initial_value:{
			type:"review_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	review_stream_cursor_value_input:{
		from_entity_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		from_entity_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		note:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		rating:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_entity_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		to_entity_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	review_update_column: "enum",
	review_updates:{
		_inc:{
			type:"review_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"review_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"review_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	saved_location_aggregate_fields:{
		count:{
			columns:{
				type:"saved_location_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	saved_location_aggregate_order_by:{
		avg:{
			type:"saved_location_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"saved_location_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"saved_location_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"saved_location_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"saved_location_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"saved_location_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"saved_location_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"saved_location_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"saved_location_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"saved_location_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_arr_rel_insert_input:{
		data:{
			type:"saved_location_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"saved_location_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_avg_order_by:{
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_bool_exp:{
		_and:{
			type:"saved_location_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"saved_location_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"saved_location_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		customer_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		default:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_gps:{
			type:"geography_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_text:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_constraint: "enum",
	saved_location_inc_input:{
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_insert_input:{
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		default:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_text:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_max_order_by:{
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_text:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_min_order_by:{
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_text:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_on_conflict:{
		constraint:{
			type:"saved_location_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"saved_location_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"saved_location_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_order_by:{
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		default:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_gps:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_text:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	saved_location_select_column: "enum",
	saved_location_set_input:{
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		default:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_text:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_stddev_order_by:{
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_stddev_pop_order_by:{
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_stddev_samp_order_by:{
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_stream_cursor_input:{
		initial_value:{
			type:"saved_location_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_stream_cursor_value_input:{
		customer_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		default:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_gps:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:false
		},
		location_text:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_sum_order_by:{
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_update_column: "enum",
	saved_location_updates:{
		_inc:{
			type:"saved_location_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"saved_location_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"saved_location_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	saved_location_var_pop_order_by:{
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_var_samp_order_by:{
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	saved_location_variance_order_by:{
		customer_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	service_provider_payment_info_aggregate_fields:{
		count:{
			columns:{
				type:"service_provider_payment_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	service_provider_payment_info_bool_exp:{
		_and:{
			type:"service_provider_payment_info_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"service_provider_payment_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"service_provider_payment_info_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		bank_transfer:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		card:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		cash:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_info:{
			type:"stripe_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_info_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	service_provider_payment_info_constraint: "enum",
	service_provider_payment_info_inc_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_info_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	service_provider_payment_info_insert_input:{
		bank_transfer:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		card:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		cash:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_info:{
			type:"stripe_info_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_info_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	service_provider_payment_info_obj_rel_insert_input:{
		data:{
			type:"service_provider_payment_info_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"service_provider_payment_info_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	service_provider_payment_info_on_conflict:{
		constraint:{
			type:"service_provider_payment_info_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"service_provider_payment_info_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"service_provider_payment_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	service_provider_payment_info_order_by:{
		bank_transfer:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		card:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		cash:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_info:{
			type:"stripe_info_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_info_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	service_provider_payment_info_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	service_provider_payment_info_select_column: "enum",
	service_provider_payment_info_set_input:{
		bank_transfer:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		card:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		cash:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_info_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	service_provider_payment_info_stream_cursor_input:{
		initial_value:{
			type:"service_provider_payment_info_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	service_provider_payment_info_stream_cursor_value_input:{
		bank_transfer:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		card:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		cash:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_info_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	service_provider_payment_info_update_column: "enum",
	service_provider_payment_info_updates:{
		_inc:{
			type:"service_provider_payment_info_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"service_provider_payment_info_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"service_provider_payment_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	st_d_within_geography_input:{
		distance:{
			type:"Float",
			array:false,
			arrayRequired:false,
			required:true
		},
		from:{
			type:"geography",
			array:false,
			arrayRequired:false,
			required:true
		},
		use_spheroid:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	st_d_within_input:{
		distance:{
			type:"Float",
			array:false,
			arrayRequired:false,
			required:true
		},
		from:{
			type:"geometry",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	String_comparison_exp:{
		_eq:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_ilike:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"String",
			array:true,
			arrayRequired:false,
			required:true
		},
		_iregex:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_like:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nilike:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"String",
			array:true,
			arrayRequired:false,
			required:true
		},
		_niregex:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nlike:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nregex:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nsimilar:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_regex:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		_similar:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	stripe_info:{
		requirements:{
			path:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	stripe_info_aggregate_fields:{
		count:{
			columns:{
				type:"stripe_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	stripe_info_bool_exp:{
		_and:{
			type:"stripe_info_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"stripe_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"stripe_info_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		charges_enabled:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		details_submitted:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		pass_fees_to_customer:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		payouts_enabled:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		requirements:{
			type:"json_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_payment_info:{
			type:"service_provider_payment_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_status:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	stripe_info_constraint: "enum",
	stripe_info_inc_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	stripe_info_insert_input:{
		charges_enabled:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		details_submitted:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		pass_fees_to_customer:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		payouts_enabled:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		requirements:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_payment_info:{
			type:"service_provider_payment_info_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	stripe_info_obj_rel_insert_input:{
		data:{
			type:"stripe_info_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"stripe_info_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	stripe_info_on_conflict:{
		constraint:{
			type:"stripe_info_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"stripe_info_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"stripe_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	stripe_info_order_by:{
		charges_enabled:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		details_submitted:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		pass_fees_to_customer:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		payouts_enabled:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		requirements:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_payment_info:{
			type:"service_provider_payment_info_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_status:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	stripe_info_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	stripe_info_select_column: "enum",
	stripe_info_set_input:{
		charges_enabled:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		details_submitted:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		pass_fees_to_customer:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		payouts_enabled:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		requirements:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	stripe_info_stream_cursor_input:{
		initial_value:{
			type:"stripe_info_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	stripe_info_stream_cursor_value_input:{
		charges_enabled:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		details_submitted:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		pass_fees_to_customer:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		payouts_enabled:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		requirements:{
			type:"json",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		stripe_status:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	stripe_info_update_column: "enum",
	stripe_info_updates:{
		_inc:{
			type:"stripe_info_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"stripe_info_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"stripe_info_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	subscription_root:{
		chat:{
			distinct_on:{
				type:"chat_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"chat_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"chat_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		chat_aggregate:{
			distinct_on:{
				type:"chat_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"chat_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"chat_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		chat_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		chat_participant:{
			distinct_on:{
				type:"chat_participant_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"chat_participant_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"chat_participant_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		chat_participant_aggregate:{
			distinct_on:{
				type:"chat_participant_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"chat_participant_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"chat_participant_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		chat_participant_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		chat_participant_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"chat_participant_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"chat_participant_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		chat_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"chat_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"chat_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		customer:{
			distinct_on:{
				type:"customer_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"customer_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"customer_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		customer_aggregate:{
			distinct_on:{
				type:"customer_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"customer_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"customer_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		customer_by_pk:{
			user_id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		customer_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"customer_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"customer_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		deliverer:{
			distinct_on:{
				type:"deliverer_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"deliverer_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"deliverer_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		deliverer_aggregate:{
			distinct_on:{
				type:"deliverer_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"deliverer_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"deliverer_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		deliverer_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deliverer_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"deliverer_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"deliverer_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		delivery_order:{
			distinct_on:{
				type:"delivery_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"delivery_order_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"delivery_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		delivery_order_aggregate:{
			distinct_on:{
				type:"delivery_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"delivery_order_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"delivery_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		delivery_order_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		delivery_order_public:{
			distinct_on:{
				type:"delivery_order_public_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"delivery_order_public_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"delivery_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		delivery_order_public_aggregate:{
			distinct_on:{
				type:"delivery_order_public_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"delivery_order_public_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"delivery_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		delivery_order_public_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"delivery_order_public_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"delivery_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		delivery_order_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"delivery_order_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"delivery_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		mez_admin:{
			distinct_on:{
				type:"mez_admin_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"mez_admin_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"mez_admin_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		mez_admin_aggregate:{
			distinct_on:{
				type:"mez_admin_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"mez_admin_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"mez_admin_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		mez_admin_by_pk:{
			user_id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		mez_admin_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"mez_admin_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"mez_admin_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		notification_info:{
			distinct_on:{
				type:"notification_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"notification_info_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"notification_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		notification_info_aggregate:{
			distinct_on:{
				type:"notification_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"notification_info_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"notification_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		notification_info_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		notification_info_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"notification_info_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"notification_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant:{
			distinct_on:{
				type:"restaurant_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_aggregate:{
			distinct_on:{
				type:"restaurant_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_cart:{
			distinct_on:{
				type:"restaurant_cart_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_cart_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_cart_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_cart_aggregate:{
			distinct_on:{
				type:"restaurant_cart_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_cart_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_cart_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_cart_by_pk:{
			customer_id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_cart_item:{
			distinct_on:{
				type:"restaurant_cart_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_cart_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_cart_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_cart_item_aggregate:{
			distinct_on:{
				type:"restaurant_cart_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_cart_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_cart_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_cart_item_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_cart_item_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_cart_item_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_cart_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_cart_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_cart_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_cart_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_category:{
			distinct_on:{
				type:"restaurant_category_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_category_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_category_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_category_aggregate:{
			distinct_on:{
				type:"restaurant_category_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_category_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_category_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_category_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_category_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_category_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_category_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_choice:{
			distinct_on:{
				type:"restaurant_choice_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_choice_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_choice_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_choice_aggregate:{
			distinct_on:{
				type:"restaurant_choice_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_choice_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_choice_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_choice_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_choice_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_choice_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_choice_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_item:{
			distinct_on:{
				type:"restaurant_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_item_aggregate:{
			distinct_on:{
				type:"restaurant_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_item_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_item_option_map:{
			distinct_on:{
				type:"restaurant_item_option_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_option_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_option_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_item_option_map_aggregate:{
			distinct_on:{
				type:"restaurant_item_option_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_item_option_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_option_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_item_option_map_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_item_option_map_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_item_option_map_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_option_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_item_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_item_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_operator:{
			distinct_on:{
				type:"restaurant_operator_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_operator_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_operator_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_operator_aggregate:{
			distinct_on:{
				type:"restaurant_operator_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_operator_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_operator_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_operator_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_operator_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_operator_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_operator_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_option:{
			distinct_on:{
				type:"restaurant_option_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_option_aggregate:{
			distinct_on:{
				type:"restaurant_option_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_option_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_option_choice_map:{
			distinct_on:{
				type:"restaurant_option_choice_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_choice_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_choice_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_option_choice_map_aggregate:{
			distinct_on:{
				type:"restaurant_option_choice_map_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_option_choice_map_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_choice_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_option_choice_map_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_option_choice_map_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_option_choice_map_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_choice_map_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_option_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_option_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_option_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order:{
			distinct_on:{
				type:"restaurant_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_aggregate:{
			distinct_on:{
				type:"restaurant_order_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_order_item:{
			distinct_on:{
				type:"restaurant_order_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_item_aggregate:{
			distinct_on:{
				type:"restaurant_order_item_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_item_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_item_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		restaurant_order_item_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_order_item_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_item_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_public:{
			distinct_on:{
				type:"restaurant_order_public_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_public_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_public_aggregate:{
			distinct_on:{
				type:"restaurant_order_public_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"restaurant_order_public_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_public_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_order_public_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_public_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_order_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_order_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_order_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		restaurant_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"restaurant_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"restaurant_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		review:{
			distinct_on:{
				type:"review_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"review_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"review_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		review_aggregate:{
			distinct_on:{
				type:"review_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"review_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"review_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		review_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		review_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"review_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"review_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		saved_location:{
			distinct_on:{
				type:"saved_location_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"saved_location_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"saved_location_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		saved_location_aggregate:{
			distinct_on:{
				type:"saved_location_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"saved_location_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"saved_location_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		saved_location_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		saved_location_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"saved_location_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"saved_location_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		service_provider_payment_info:{
			distinct_on:{
				type:"service_provider_payment_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"service_provider_payment_info_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"service_provider_payment_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		service_provider_payment_info_aggregate:{
			distinct_on:{
				type:"service_provider_payment_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"service_provider_payment_info_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"service_provider_payment_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		service_provider_payment_info_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		service_provider_payment_info_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"service_provider_payment_info_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"service_provider_payment_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		stripe_info:{
			distinct_on:{
				type:"stripe_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"stripe_info_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"stripe_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		stripe_info_aggregate:{
			distinct_on:{
				type:"stripe_info_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"stripe_info_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"stripe_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		stripe_info_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		stripe_info_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"stripe_info_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"stripe_info_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		topology_app_type:{
			distinct_on:{
				type:"topology_app_type_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"topology_app_type_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"topology_app_type_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		topology_app_type_aggregate:{
			distinct_on:{
				type:"topology_app_type_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"topology_app_type_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"topology_app_type_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		topology_app_type_by_pk:{
			id:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		topology_app_type_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"topology_app_type_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"topology_app_type_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		topology_language:{
			distinct_on:{
				type:"topology_language_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"topology_language_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"topology_language_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		topology_language_aggregate:{
			distinct_on:{
				type:"topology_language_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"topology_language_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"topology_language_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		topology_language_by_pk:{
			id:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		topology_language_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"topology_language_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"topology_language_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		translation:{
			distinct_on:{
				type:"translation_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"translation_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"translation_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		translation_aggregate:{
			distinct_on:{
				type:"translation_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"translation_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"translation_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		translation_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		translation_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"translation_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"translation_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		translation_value:{
			distinct_on:{
				type:"translation_value_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"translation_value_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"translation_value_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		translation_value_aggregate:{
			distinct_on:{
				type:"translation_value_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"translation_value_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"translation_value_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		translation_value_by_pk:{
			language_id:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			translation_id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		translation_value_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"translation_value_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"translation_value_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		user:{
			distinct_on:{
				type:"user_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"user_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"user_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		user_aggregate:{
			distinct_on:{
				type:"user_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"user_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"user_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		user_by_pk:{
			id:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		user_stream:{
			batch_size:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:true
			},
			cursor:{
				type:"user_stream_cursor_input",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"user_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	timestamptz: "String",
	timestamptz_comparison_exp:{
		_eq:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gt:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		_gte:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		_in:{
			type:"timestamptz",
			array:true,
			arrayRequired:false,
			required:true
		},
		_is_null:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lt:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		_lte:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		_neq:{
			type:"timestamptz",
			array:false,
			arrayRequired:false,
			required:false
		},
		_nin:{
			type:"timestamptz",
			array:true,
			arrayRequired:false,
			required:true
		}
	},
	topology_app_type_aggregate_fields:{
		count:{
			columns:{
				type:"topology_app_type_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	topology_app_type_bool_exp:{
		_and:{
			type:"topology_app_type_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"topology_app_type_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"topology_app_type_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_app_type_constraint: "enum",
	topology_app_type_insert_input:{
		id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_app_type_on_conflict:{
		constraint:{
			type:"topology_app_type_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"topology_app_type_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"topology_app_type_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_app_type_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_app_type_pk_columns_input:{
		id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	topology_app_type_select_column: "enum",
	topology_app_type_set_input:{
		id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_app_type_stream_cursor_input:{
		initial_value:{
			type:"topology_app_type_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_app_type_stream_cursor_value_input:{
		id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_app_type_update_column: "enum",
	topology_app_type_updates:{
		_set:{
			type:"topology_app_type_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"topology_app_type_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	topology_language_aggregate_fields:{
		count:{
			columns:{
				type:"topology_language_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	topology_language_bool_exp:{
		_and:{
			type:"topology_language_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"topology_language_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"topology_language_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_language_constraint: "enum",
	topology_language_insert_input:{
		id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_language_obj_rel_insert_input:{
		data:{
			type:"topology_language_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"topology_language_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_language_on_conflict:{
		constraint:{
			type:"topology_language_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"topology_language_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"topology_language_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_language_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_language_pk_columns_input:{
		id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	topology_language_select_column: "enum",
	topology_language_set_input:{
		id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_language_stream_cursor_input:{
		initial_value:{
			type:"topology_language_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_language_stream_cursor_value_input:{
		id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	topology_language_update_column: "enum",
	topology_language_updates:{
		_set:{
			type:"topology_language_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"topology_language_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	translation:{
		translations:{
			distinct_on:{
				type:"translation_value_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"translation_value_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"translation_value_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		translations_aggregate:{
			distinct_on:{
				type:"translation_value_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			order_by:{
				type:"translation_value_order_by",
				array:true,
				arrayRequired:false,
				required:true
			},
			where:{
				type:"translation_value_bool_exp",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	translation_aggregate_fields:{
		count:{
			columns:{
				type:"translation_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	translation_bool_exp:{
		_and:{
			type:"translation_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"translation_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"translation_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		translations:{
			type:"translation_value_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_constraint: "enum",
	translation_inc_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_insert_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		translations:{
			type:"translation_value_arr_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_obj_rel_insert_input:{
		data:{
			type:"translation_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"translation_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_on_conflict:{
		constraint:{
			type:"translation_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"translation_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"translation_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_order_by:{
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		restaurant:{
			type:"restaurant_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		translations_aggregate:{
			type:"translation_value_aggregate_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	translation_select_column: "enum",
	translation_set_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_stream_cursor_input:{
		initial_value:{
			type:"translation_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_stream_cursor_value_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		service_provider_type:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_update_column: "enum",
	translation_updates:{
		_inc:{
			type:"translation_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"translation_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"translation_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	translation_value_aggregate_fields:{
		count:{
			columns:{
				type:"translation_value_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	translation_value_aggregate_order_by:{
		avg:{
			type:"translation_value_avg_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		count:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		max:{
			type:"translation_value_max_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		min:{
			type:"translation_value_min_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev:{
			type:"translation_value_stddev_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_pop:{
			type:"translation_value_stddev_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		stddev_samp:{
			type:"translation_value_stddev_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		sum:{
			type:"translation_value_sum_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_pop:{
			type:"translation_value_var_pop_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		var_samp:{
			type:"translation_value_var_samp_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		variance:{
			type:"translation_value_variance_order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_arr_rel_insert_input:{
		data:{
			type:"translation_value_insert_input",
			array:true,
			arrayRequired:true,
			required:true
		},
		on_conflict:{
			type:"translation_value_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_avg_order_by:{
		translation_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_bool_exp:{
		_and:{
			type:"translation_value_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"translation_value_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"translation_value_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		language:{
			type:"topology_language_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		translation_group:{
			type:"translation_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		translation_id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		value:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_constraint: "enum",
	translation_value_inc_input:{
		translation_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_insert_input:{
		language:{
			type:"topology_language_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		translation_group:{
			type:"translation_obj_rel_insert_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		translation_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		value:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_max_order_by:{
		language_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		translation_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		value:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_min_order_by:{
		language_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		translation_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		value:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_on_conflict:{
		constraint:{
			type:"translation_value_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"translation_value_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"translation_value_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_order_by:{
		language:{
			type:"topology_language_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		translation_group:{
			type:"translation_order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		translation_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		value:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_pk_columns_input:{
		language_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		translation_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	translation_value_select_column: "enum",
	translation_value_set_input:{
		language_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		translation_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		value:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_stddev_order_by:{
		translation_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_stddev_pop_order_by:{
		translation_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_stddev_samp_order_by:{
		translation_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_stream_cursor_input:{
		initial_value:{
			type:"translation_value_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_stream_cursor_value_input:{
		language_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		translation_id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		value:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_sum_order_by:{
		translation_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_update_column: "enum",
	translation_value_updates:{
		_inc:{
			type:"translation_value_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"translation_value_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"translation_value_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	translation_value_var_pop_order_by:{
		translation_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_var_samp_order_by:{
		translation_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	translation_value_variance_order_by:{
		translation_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	user_aggregate_fields:{
		count:{
			columns:{
				type:"user_select_column",
				array:true,
				arrayRequired:false,
				required:true
			},
			distinct:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	user_bool_exp:{
		_and:{
			type:"user_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		_not:{
			type:"user_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		_or:{
			type:"user_bool_exp",
			array:true,
			arrayRequired:false,
			required:true
		},
		deleted:{
			type:"Boolean_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		email:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		image:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		},
		phone:{
			type:"String_comparison_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	user_constraint: "enum",
	user_inc_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	user_insert_input:{
		deleted:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		email:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		image:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		phone:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	user_obj_rel_insert_input:{
		data:{
			type:"user_insert_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		on_conflict:{
			type:"user_on_conflict",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	user_on_conflict:{
		constraint:{
			type:"user_constraint",
			array:false,
			arrayRequired:false,
			required:true
		},
		update_columns:{
			type:"user_update_column",
			array:true,
			arrayRequired:true,
			required:true
		},
		where:{
			type:"user_bool_exp",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	user_order_by:{
		deleted:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		email:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		image:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		},
		phone:{
			type:"order_by",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	user_pk_columns_input:{
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	user_select_column: "enum",
	user_set_input:{
		deleted:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		email:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		image:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		phone:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	user_stream_cursor_input:{
		initial_value:{
			type:"user_stream_cursor_value_input",
			array:false,
			arrayRequired:false,
			required:true
		},
		ordering:{
			type:"cursor_ordering",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	user_stream_cursor_value_input:{
		deleted:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		email:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		firebase_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		image:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		language_id:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		phone:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	user_update_column: "enum",
	user_updates:{
		_inc:{
			type:"user_inc_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		_set:{
			type:"user_set_input",
			array:false,
			arrayRequired:false,
			required:false
		},
		where:{
			type:"user_bool_exp",
			array:false,
			arrayRequired:false,
			required:true
		}
	}
}

export const ReturnTypes: Record<string,any> = {
	chat:{
		chat_info:"jsonb",
		chat_participants:"chat_participant",
		chat_participants_aggregate:"chat_participant_aggregate",
		creation_time:"timestamptz",
		id:"Int",
		messages:"jsonb"
	},
	chat_aggregate:{
		aggregate:"chat_aggregate_fields",
		nodes:"chat"
	},
	chat_aggregate_fields:{
		avg:"chat_avg_fields",
		count:"Int",
		max:"chat_max_fields",
		min:"chat_min_fields",
		stddev:"chat_stddev_fields",
		stddev_pop:"chat_stddev_pop_fields",
		stddev_samp:"chat_stddev_samp_fields",
		sum:"chat_sum_fields",
		var_pop:"chat_var_pop_fields",
		var_samp:"chat_var_samp_fields",
		variance:"chat_variance_fields"
	},
	chat_avg_fields:{
		id:"Float"
	},
	chat_max_fields:{
		creation_time:"timestamptz",
		id:"Int"
	},
	chat_min_fields:{
		creation_time:"timestamptz",
		id:"Int"
	},
	chat_mutation_response:{
		affected_rows:"Int",
		returning:"chat"
	},
	chat_participant:{
		app_type_id:"String",
		chat:"chat",
		chat_id:"Int",
		id:"Int",
		notification_info:"notification_info",
		participant_id:"Int",
		user:"user"
	},
	chat_participant_aggregate:{
		aggregate:"chat_participant_aggregate_fields",
		nodes:"chat_participant"
	},
	chat_participant_aggregate_fields:{
		avg:"chat_participant_avg_fields",
		count:"Int",
		max:"chat_participant_max_fields",
		min:"chat_participant_min_fields",
		stddev:"chat_participant_stddev_fields",
		stddev_pop:"chat_participant_stddev_pop_fields",
		stddev_samp:"chat_participant_stddev_samp_fields",
		sum:"chat_participant_sum_fields",
		var_pop:"chat_participant_var_pop_fields",
		var_samp:"chat_participant_var_samp_fields",
		variance:"chat_participant_variance_fields"
	},
	chat_participant_avg_fields:{
		chat_id:"Float",
		id:"Float",
		participant_id:"Float"
	},
	chat_participant_max_fields:{
		app_type_id:"String",
		chat_id:"Int",
		id:"Int",
		participant_id:"Int"
	},
	chat_participant_min_fields:{
		app_type_id:"String",
		chat_id:"Int",
		id:"Int",
		participant_id:"Int"
	},
	chat_participant_mutation_response:{
		affected_rows:"Int",
		returning:"chat_participant"
	},
	chat_participant_stddev_fields:{
		chat_id:"Float",
		id:"Float",
		participant_id:"Float"
	},
	chat_participant_stddev_pop_fields:{
		chat_id:"Float",
		id:"Float",
		participant_id:"Float"
	},
	chat_participant_stddev_samp_fields:{
		chat_id:"Float",
		id:"Float",
		participant_id:"Float"
	},
	chat_participant_sum_fields:{
		chat_id:"Int",
		id:"Int",
		participant_id:"Int"
	},
	chat_participant_var_pop_fields:{
		chat_id:"Float",
		id:"Float",
		participant_id:"Float"
	},
	chat_participant_var_samp_fields:{
		chat_id:"Float",
		id:"Float",
		participant_id:"Float"
	},
	chat_participant_variance_fields:{
		chat_id:"Float",
		id:"Float",
		participant_id:"Float"
	},
	chat_stddev_fields:{
		id:"Float"
	},
	chat_stddev_pop_fields:{
		id:"Float"
	},
	chat_stddev_samp_fields:{
		id:"Float"
	},
	chat_sum_fields:{
		id:"Int"
	},
	chat_var_pop_fields:{
		id:"Float"
	},
	chat_var_samp_fields:{
		id:"Float"
	},
	chat_variance_fields:{
		id:"Float"
	},
	customer:{
		app_version:"String",
		cart:"restaurant_cart",
		deliveries:"delivery_order",
		deliveries_aggregate:"delivery_order_aggregate",
		notification_token:"String",
		saved_locations:"saved_location",
		saved_locations_aggregate:"saved_location_aggregate",
		user:"user",
		user_id:"Int"
	},
	customer_aggregate:{
		aggregate:"customer_aggregate_fields",
		nodes:"customer"
	},
	customer_aggregate_fields:{
		avg:"customer_avg_fields",
		count:"Int",
		max:"customer_max_fields",
		min:"customer_min_fields",
		stddev:"customer_stddev_fields",
		stddev_pop:"customer_stddev_pop_fields",
		stddev_samp:"customer_stddev_samp_fields",
		sum:"customer_sum_fields",
		var_pop:"customer_var_pop_fields",
		var_samp:"customer_var_samp_fields",
		variance:"customer_variance_fields"
	},
	customer_avg_fields:{
		user_id:"Float"
	},
	customer_max_fields:{
		app_version:"String",
		user_id:"Int"
	},
	customer_min_fields:{
		app_version:"String",
		user_id:"Int"
	},
	customer_mutation_response:{
		affected_rows:"Int",
		returning:"customer"
	},
	customer_stddev_fields:{
		user_id:"Float"
	},
	customer_stddev_pop_fields:{
		user_id:"Float"
	},
	customer_stddev_samp_fields:{
		user_id:"Float"
	},
	customer_sum_fields:{
		user_id:"Int"
	},
	customer_var_pop_fields:{
		user_id:"Float"
	},
	customer_var_samp_fields:{
		user_id:"Float"
	},
	customer_variance_fields:{
		user_id:"Float"
	},
	deliverer:{
		app_version:"String",
		current_location:"geography",
		delivery_company_id:"Int",
		delivery_company_type:"String",
		id:"Int",
		notification_info_id:"Int",
		notification_token:"String",
		online:"Boolean",
		restaurant:"restaurant",
		status:"String",
		user:"user",
		user_id:"Int"
	},
	deliverer_aggregate:{
		aggregate:"deliverer_aggregate_fields",
		nodes:"deliverer"
	},
	deliverer_aggregate_fields:{
		avg:"deliverer_avg_fields",
		count:"Int",
		max:"deliverer_max_fields",
		min:"deliverer_min_fields",
		stddev:"deliverer_stddev_fields",
		stddev_pop:"deliverer_stddev_pop_fields",
		stddev_samp:"deliverer_stddev_samp_fields",
		sum:"deliverer_sum_fields",
		var_pop:"deliverer_var_pop_fields",
		var_samp:"deliverer_var_samp_fields",
		variance:"deliverer_variance_fields"
	},
	deliverer_avg_fields:{
		delivery_company_id:"Float",
		id:"Float",
		notification_info_id:"Float",
		user_id:"Float"
	},
	deliverer_max_fields:{
		app_version:"String",
		delivery_company_id:"Int",
		delivery_company_type:"String",
		id:"Int",
		notification_info_id:"Int",
		status:"String",
		user_id:"Int"
	},
	deliverer_min_fields:{
		app_version:"String",
		delivery_company_id:"Int",
		delivery_company_type:"String",
		id:"Int",
		notification_info_id:"Int",
		status:"String",
		user_id:"Int"
	},
	deliverer_mutation_response:{
		affected_rows:"Int",
		returning:"deliverer"
	},
	deliverer_stddev_fields:{
		delivery_company_id:"Float",
		id:"Float",
		notification_info_id:"Float",
		user_id:"Float"
	},
	deliverer_stddev_pop_fields:{
		delivery_company_id:"Float",
		id:"Float",
		notification_info_id:"Float",
		user_id:"Float"
	},
	deliverer_stddev_samp_fields:{
		delivery_company_id:"Float",
		id:"Float",
		notification_info_id:"Float",
		user_id:"Float"
	},
	deliverer_sum_fields:{
		delivery_company_id:"Int",
		id:"Int",
		notification_info_id:"Int",
		user_id:"Int"
	},
	deliverer_var_pop_fields:{
		delivery_company_id:"Float",
		id:"Float",
		notification_info_id:"Float",
		user_id:"Float"
	},
	deliverer_var_samp_fields:{
		delivery_company_id:"Float",
		id:"Float",
		notification_info_id:"Float",
		user_id:"Float"
	},
	deliverer_variance_fields:{
		delivery_company_id:"Float",
		id:"Float",
		notification_info_id:"Float",
		user_id:"Float"
	},
	delivery_order:{
		actual_arrival_at_dropoff_time:"timestamptz",
		actual_arrival_at_pickup_time:"timestamptz",
		actual_delivered_time:"timestamptz",
		actual_package_ready_time:"timestamptz",
		cancellation_time:"timestamptz",
		chat_with_customer:"chat",
		chat_with_customer_id:"Int",
		chat_with_service_provider:"chat",
		chat_with_service_provider_id:"Int",
		current_gps:"geography",
		customer_id:"Int",
		customer_review_by_driver:"review",
		customer_review_by_driver_id:"Int",
		deliverer:"deliverer",
		deliverer_app_type_id:"String",
		deliverer_id:"Int",
		delivery_cost:"money",
		driver_review_by_customer:"review",
		driver_review_by_customer_id:"Int",
		driver_review_by_service_provider:"review",
		driver_review_by_service_provider_id:"Int",
		dropoff_address:"String",
		dropoff_gps:"geography",
		estimated_arrival_at_dropoff_time:"timestamptz",
		estimated_arrival_at_pickup_time:"timestamptz",
		estimated_package_ready_time:"timestamptz",
		id:"Int",
		notification_token:"String",
		order_time:"timestamptz",
		package_cost:"money",
		payment_type:"String",
		pickup_address:"String",
		pickup_gps:"geography",
		restaurant:"restaurant",
		service_provider_id:"Int",
		service_provider_review_by_driver:"review",
		service_provider_review_by_driver_id:"Int",
		service_provider_type:"String",
		status:"String",
		stripe_payment_id:"Int",
		trip_distance:"Int",
		trip_duration:"Int",
		trip_polyline:"String"
	},
	delivery_order_aggregate:{
		aggregate:"delivery_order_aggregate_fields",
		nodes:"delivery_order"
	},
	delivery_order_aggregate_fields:{
		avg:"delivery_order_avg_fields",
		count:"Int",
		max:"delivery_order_max_fields",
		min:"delivery_order_min_fields",
		stddev:"delivery_order_stddev_fields",
		stddev_pop:"delivery_order_stddev_pop_fields",
		stddev_samp:"delivery_order_stddev_samp_fields",
		sum:"delivery_order_sum_fields",
		var_pop:"delivery_order_var_pop_fields",
		var_samp:"delivery_order_var_samp_fields",
		variance:"delivery_order_variance_fields"
	},
	delivery_order_avg_fields:{
		chat_with_customer_id:"Float",
		chat_with_service_provider_id:"Float",
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		delivery_cost:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		id:"Float",
		package_cost:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		stripe_payment_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_max_fields:{
		actual_arrival_at_dropoff_time:"timestamptz",
		actual_arrival_at_pickup_time:"timestamptz",
		actual_delivered_time:"timestamptz",
		actual_package_ready_time:"timestamptz",
		cancellation_time:"timestamptz",
		chat_with_customer_id:"Int",
		chat_with_service_provider_id:"Int",
		customer_id:"Int",
		customer_review_by_driver_id:"Int",
		deliverer_app_type_id:"String",
		deliverer_id:"Int",
		delivery_cost:"money",
		driver_review_by_customer_id:"Int",
		driver_review_by_service_provider_id:"Int",
		dropoff_address:"String",
		estimated_arrival_at_dropoff_time:"timestamptz",
		estimated_arrival_at_pickup_time:"timestamptz",
		estimated_package_ready_time:"timestamptz",
		id:"Int",
		order_time:"timestamptz",
		package_cost:"money",
		payment_type:"String",
		pickup_address:"String",
		service_provider_id:"Int",
		service_provider_review_by_driver_id:"Int",
		service_provider_type:"String",
		status:"String",
		stripe_payment_id:"Int",
		trip_distance:"Int",
		trip_duration:"Int",
		trip_polyline:"String"
	},
	delivery_order_min_fields:{
		actual_arrival_at_dropoff_time:"timestamptz",
		actual_arrival_at_pickup_time:"timestamptz",
		actual_delivered_time:"timestamptz",
		actual_package_ready_time:"timestamptz",
		cancellation_time:"timestamptz",
		chat_with_customer_id:"Int",
		chat_with_service_provider_id:"Int",
		customer_id:"Int",
		customer_review_by_driver_id:"Int",
		deliverer_app_type_id:"String",
		deliverer_id:"Int",
		delivery_cost:"money",
		driver_review_by_customer_id:"Int",
		driver_review_by_service_provider_id:"Int",
		dropoff_address:"String",
		estimated_arrival_at_dropoff_time:"timestamptz",
		estimated_arrival_at_pickup_time:"timestamptz",
		estimated_package_ready_time:"timestamptz",
		id:"Int",
		order_time:"timestamptz",
		package_cost:"money",
		payment_type:"String",
		pickup_address:"String",
		service_provider_id:"Int",
		service_provider_review_by_driver_id:"Int",
		service_provider_type:"String",
		status:"String",
		stripe_payment_id:"Int",
		trip_distance:"Int",
		trip_duration:"Int",
		trip_polyline:"String"
	},
	delivery_order_mutation_response:{
		affected_rows:"Int",
		returning:"delivery_order"
	},
	delivery_order_public:{
		actual_arrival_at_dropoff_time:"timestamptz",
		actual_arrival_at_pickup_time:"timestamptz",
		actual_delivered_time:"timestamptz",
		actual_package_ready_time:"timestamptz",
		customer_id:"Int",
		customer_review_by_driver_id:"Int",
		deliverer:"deliverer",
		deliverer_app_type_id:"String",
		deliverer_id:"Int",
		driver_review_by_customer_id:"Int",
		driver_review_by_service_provider_id:"Int",
		estimated_arrival_at_dropoff_time:"timestamptz",
		estimated_arrival_at_pickup_time:"timestamptz",
		estimated_package_ready_time:"timestamptz",
		order_time:"timestamptz",
		restaurant:"restaurant",
		service_provider_id:"Int",
		service_provider_review_by_driver_id:"Int",
		service_provider_type:"String",
		status:"String",
		trip_distance:"Int",
		trip_duration:"Int"
	},
	delivery_order_public_aggregate:{
		aggregate:"delivery_order_public_aggregate_fields",
		nodes:"delivery_order_public"
	},
	delivery_order_public_aggregate_fields:{
		avg:"delivery_order_public_avg_fields",
		count:"Int",
		max:"delivery_order_public_max_fields",
		min:"delivery_order_public_min_fields",
		stddev:"delivery_order_public_stddev_fields",
		stddev_pop:"delivery_order_public_stddev_pop_fields",
		stddev_samp:"delivery_order_public_stddev_samp_fields",
		sum:"delivery_order_public_sum_fields",
		var_pop:"delivery_order_public_var_pop_fields",
		var_samp:"delivery_order_public_var_samp_fields",
		variance:"delivery_order_public_variance_fields"
	},
	delivery_order_public_avg_fields:{
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_public_max_fields:{
		actual_arrival_at_dropoff_time:"timestamptz",
		actual_arrival_at_pickup_time:"timestamptz",
		actual_delivered_time:"timestamptz",
		actual_package_ready_time:"timestamptz",
		customer_id:"Int",
		customer_review_by_driver_id:"Int",
		deliverer_app_type_id:"String",
		deliverer_id:"Int",
		driver_review_by_customer_id:"Int",
		driver_review_by_service_provider_id:"Int",
		estimated_arrival_at_dropoff_time:"timestamptz",
		estimated_arrival_at_pickup_time:"timestamptz",
		estimated_package_ready_time:"timestamptz",
		order_time:"timestamptz",
		service_provider_id:"Int",
		service_provider_review_by_driver_id:"Int",
		service_provider_type:"String",
		status:"String",
		trip_distance:"Int",
		trip_duration:"Int"
	},
	delivery_order_public_min_fields:{
		actual_arrival_at_dropoff_time:"timestamptz",
		actual_arrival_at_pickup_time:"timestamptz",
		actual_delivered_time:"timestamptz",
		actual_package_ready_time:"timestamptz",
		customer_id:"Int",
		customer_review_by_driver_id:"Int",
		deliverer_app_type_id:"String",
		deliverer_id:"Int",
		driver_review_by_customer_id:"Int",
		driver_review_by_service_provider_id:"Int",
		estimated_arrival_at_dropoff_time:"timestamptz",
		estimated_arrival_at_pickup_time:"timestamptz",
		estimated_package_ready_time:"timestamptz",
		order_time:"timestamptz",
		service_provider_id:"Int",
		service_provider_review_by_driver_id:"Int",
		service_provider_type:"String",
		status:"String",
		trip_distance:"Int",
		trip_duration:"Int"
	},
	delivery_order_public_mutation_response:{
		affected_rows:"Int",
		returning:"delivery_order_public"
	},
	delivery_order_public_stddev_fields:{
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_public_stddev_pop_fields:{
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_public_stddev_samp_fields:{
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_public_sum_fields:{
		customer_id:"Int",
		customer_review_by_driver_id:"Int",
		deliverer_id:"Int",
		driver_review_by_customer_id:"Int",
		driver_review_by_service_provider_id:"Int",
		service_provider_id:"Int",
		service_provider_review_by_driver_id:"Int",
		trip_distance:"Int",
		trip_duration:"Int"
	},
	delivery_order_public_var_pop_fields:{
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_public_var_samp_fields:{
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_public_variance_fields:{
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_stddev_fields:{
		chat_with_customer_id:"Float",
		chat_with_service_provider_id:"Float",
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		delivery_cost:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		id:"Float",
		package_cost:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		stripe_payment_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_stddev_pop_fields:{
		chat_with_customer_id:"Float",
		chat_with_service_provider_id:"Float",
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		delivery_cost:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		id:"Float",
		package_cost:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		stripe_payment_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_stddev_samp_fields:{
		chat_with_customer_id:"Float",
		chat_with_service_provider_id:"Float",
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		delivery_cost:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		id:"Float",
		package_cost:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		stripe_payment_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_sum_fields:{
		chat_with_customer_id:"Int",
		chat_with_service_provider_id:"Int",
		customer_id:"Int",
		customer_review_by_driver_id:"Int",
		deliverer_id:"Int",
		delivery_cost:"money",
		driver_review_by_customer_id:"Int",
		driver_review_by_service_provider_id:"Int",
		id:"Int",
		package_cost:"money",
		service_provider_id:"Int",
		service_provider_review_by_driver_id:"Int",
		stripe_payment_id:"Int",
		trip_distance:"Int",
		trip_duration:"Int"
	},
	delivery_order_var_pop_fields:{
		chat_with_customer_id:"Float",
		chat_with_service_provider_id:"Float",
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		delivery_cost:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		id:"Float",
		package_cost:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		stripe_payment_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_var_samp_fields:{
		chat_with_customer_id:"Float",
		chat_with_service_provider_id:"Float",
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		delivery_cost:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		id:"Float",
		package_cost:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		stripe_payment_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	delivery_order_variance_fields:{
		chat_with_customer_id:"Float",
		chat_with_service_provider_id:"Float",
		customer_id:"Float",
		customer_review_by_driver_id:"Float",
		deliverer_id:"Float",
		delivery_cost:"Float",
		driver_review_by_customer_id:"Float",
		driver_review_by_service_provider_id:"Float",
		id:"Float",
		package_cost:"Float",
		service_provider_id:"Float",
		service_provider_review_by_driver_id:"Float",
		stripe_payment_id:"Float",
		trip_distance:"Float",
		trip_duration:"Float"
	},
	mez_admin:{
		notification_token:"String",
		user:"user",
		user_id:"Int",
		version:"String"
	},
	mez_admin_aggregate:{
		aggregate:"mez_admin_aggregate_fields",
		nodes:"mez_admin"
	},
	mez_admin_aggregate_fields:{
		avg:"mez_admin_avg_fields",
		count:"Int",
		max:"mez_admin_max_fields",
		min:"mez_admin_min_fields",
		stddev:"mez_admin_stddev_fields",
		stddev_pop:"mez_admin_stddev_pop_fields",
		stddev_samp:"mez_admin_stddev_samp_fields",
		sum:"mez_admin_sum_fields",
		var_pop:"mez_admin_var_pop_fields",
		var_samp:"mez_admin_var_samp_fields",
		variance:"mez_admin_variance_fields"
	},
	mez_admin_avg_fields:{
		user_id:"Float"
	},
	mez_admin_max_fields:{
		user_id:"Int",
		version:"String"
	},
	mez_admin_min_fields:{
		user_id:"Int",
		version:"String"
	},
	mez_admin_mutation_response:{
		affected_rows:"Int",
		returning:"mez_admin"
	},
	mez_admin_stddev_fields:{
		user_id:"Float"
	},
	mez_admin_stddev_pop_fields:{
		user_id:"Float"
	},
	mez_admin_stddev_samp_fields:{
		user_id:"Float"
	},
	mez_admin_sum_fields:{
		user_id:"Int"
	},
	mez_admin_var_pop_fields:{
		user_id:"Float"
	},
	mez_admin_var_samp_fields:{
		user_id:"Float"
	},
	mez_admin_variance_fields:{
		user_id:"Float"
	},
	mutation_root:{
		delete_chat:"chat_mutation_response",
		delete_chat_by_pk:"chat",
		delete_chat_participant:"chat_participant_mutation_response",
		delete_chat_participant_by_pk:"chat_participant",
		delete_customer:"customer_mutation_response",
		delete_customer_by_pk:"customer",
		delete_deliverer:"deliverer_mutation_response",
		delete_deliverer_by_pk:"deliverer",
		delete_delivery_order:"delivery_order_mutation_response",
		delete_delivery_order_by_pk:"delivery_order",
		delete_delivery_order_public:"delivery_order_public_mutation_response",
		delete_mez_admin:"mez_admin_mutation_response",
		delete_mez_admin_by_pk:"mez_admin",
		delete_notification_info:"notification_info_mutation_response",
		delete_notification_info_by_pk:"notification_info",
		delete_restaurant:"restaurant_mutation_response",
		delete_restaurant_by_pk:"restaurant",
		delete_restaurant_cart:"restaurant_cart_mutation_response",
		delete_restaurant_cart_by_pk:"restaurant_cart",
		delete_restaurant_cart_item:"restaurant_cart_item_mutation_response",
		delete_restaurant_cart_item_by_pk:"restaurant_cart_item",
		delete_restaurant_category:"restaurant_category_mutation_response",
		delete_restaurant_category_by_pk:"restaurant_category",
		delete_restaurant_choice:"restaurant_choice_mutation_response",
		delete_restaurant_choice_by_pk:"restaurant_choice",
		delete_restaurant_item:"restaurant_item_mutation_response",
		delete_restaurant_item_by_pk:"restaurant_item",
		delete_restaurant_item_option_map:"restaurant_item_option_map_mutation_response",
		delete_restaurant_item_option_map_by_pk:"restaurant_item_option_map",
		delete_restaurant_operator:"restaurant_operator_mutation_response",
		delete_restaurant_operator_by_pk:"restaurant_operator",
		delete_restaurant_option:"restaurant_option_mutation_response",
		delete_restaurant_option_by_pk:"restaurant_option",
		delete_restaurant_option_choice_map:"restaurant_option_choice_map_mutation_response",
		delete_restaurant_option_choice_map_by_pk:"restaurant_option_choice_map",
		delete_restaurant_order:"restaurant_order_mutation_response",
		delete_restaurant_order_by_pk:"restaurant_order",
		delete_restaurant_order_item:"restaurant_order_item_mutation_response",
		delete_restaurant_order_item_by_pk:"restaurant_order_item",
		delete_restaurant_order_public:"restaurant_order_public_mutation_response",
		delete_review:"review_mutation_response",
		delete_review_by_pk:"review",
		delete_saved_location:"saved_location_mutation_response",
		delete_saved_location_by_pk:"saved_location",
		delete_service_provider_payment_info:"service_provider_payment_info_mutation_response",
		delete_service_provider_payment_info_by_pk:"service_provider_payment_info",
		delete_stripe_info:"stripe_info_mutation_response",
		delete_stripe_info_by_pk:"stripe_info",
		delete_topology_app_type:"topology_app_type_mutation_response",
		delete_topology_app_type_by_pk:"topology_app_type",
		delete_topology_language:"topology_language_mutation_response",
		delete_topology_language_by_pk:"topology_language",
		delete_translation:"translation_mutation_response",
		delete_translation_by_pk:"translation",
		delete_translation_value:"translation_value_mutation_response",
		delete_translation_value_by_pk:"translation_value",
		delete_user:"user_mutation_response",
		delete_user_by_pk:"user",
		insert_chat:"chat_mutation_response",
		insert_chat_one:"chat",
		insert_chat_participant:"chat_participant_mutation_response",
		insert_chat_participant_one:"chat_participant",
		insert_customer:"customer_mutation_response",
		insert_customer_one:"customer",
		insert_deliverer:"deliverer_mutation_response",
		insert_deliverer_one:"deliverer",
		insert_delivery_order:"delivery_order_mutation_response",
		insert_delivery_order_one:"delivery_order",
		insert_delivery_order_public:"delivery_order_public_mutation_response",
		insert_delivery_order_public_one:"delivery_order_public",
		insert_mez_admin:"mez_admin_mutation_response",
		insert_mez_admin_one:"mez_admin",
		insert_notification_info:"notification_info_mutation_response",
		insert_notification_info_one:"notification_info",
		insert_restaurant:"restaurant_mutation_response",
		insert_restaurant_cart:"restaurant_cart_mutation_response",
		insert_restaurant_cart_item:"restaurant_cart_item_mutation_response",
		insert_restaurant_cart_item_one:"restaurant_cart_item",
		insert_restaurant_cart_one:"restaurant_cart",
		insert_restaurant_category:"restaurant_category_mutation_response",
		insert_restaurant_category_one:"restaurant_category",
		insert_restaurant_choice:"restaurant_choice_mutation_response",
		insert_restaurant_choice_one:"restaurant_choice",
		insert_restaurant_item:"restaurant_item_mutation_response",
		insert_restaurant_item_one:"restaurant_item",
		insert_restaurant_item_option_map:"restaurant_item_option_map_mutation_response",
		insert_restaurant_item_option_map_one:"restaurant_item_option_map",
		insert_restaurant_one:"restaurant",
		insert_restaurant_operator:"restaurant_operator_mutation_response",
		insert_restaurant_operator_one:"restaurant_operator",
		insert_restaurant_option:"restaurant_option_mutation_response",
		insert_restaurant_option_choice_map:"restaurant_option_choice_map_mutation_response",
		insert_restaurant_option_choice_map_one:"restaurant_option_choice_map",
		insert_restaurant_option_one:"restaurant_option",
		insert_restaurant_order:"restaurant_order_mutation_response",
		insert_restaurant_order_item:"restaurant_order_item_mutation_response",
		insert_restaurant_order_item_one:"restaurant_order_item",
		insert_restaurant_order_one:"restaurant_order",
		insert_restaurant_order_public:"restaurant_order_public_mutation_response",
		insert_restaurant_order_public_one:"restaurant_order_public",
		insert_review:"review_mutation_response",
		insert_review_one:"review",
		insert_saved_location:"saved_location_mutation_response",
		insert_saved_location_one:"saved_location",
		insert_service_provider_payment_info:"service_provider_payment_info_mutation_response",
		insert_service_provider_payment_info_one:"service_provider_payment_info",
		insert_stripe_info:"stripe_info_mutation_response",
		insert_stripe_info_one:"stripe_info",
		insert_topology_app_type:"topology_app_type_mutation_response",
		insert_topology_app_type_one:"topology_app_type",
		insert_topology_language:"topology_language_mutation_response",
		insert_topology_language_one:"topology_language",
		insert_translation:"translation_mutation_response",
		insert_translation_one:"translation",
		insert_translation_value:"translation_value_mutation_response",
		insert_translation_value_one:"translation_value",
		insert_user:"user_mutation_response",
		insert_user_one:"user",
		update_chat:"chat_mutation_response",
		update_chat_by_pk:"chat",
		update_chat_many:"chat_mutation_response",
		update_chat_participant:"chat_participant_mutation_response",
		update_chat_participant_by_pk:"chat_participant",
		update_chat_participant_many:"chat_participant_mutation_response",
		update_customer:"customer_mutation_response",
		update_customer_by_pk:"customer",
		update_customer_many:"customer_mutation_response",
		update_deliverer:"deliverer_mutation_response",
		update_deliverer_by_pk:"deliverer",
		update_deliverer_many:"deliverer_mutation_response",
		update_delivery_order:"delivery_order_mutation_response",
		update_delivery_order_by_pk:"delivery_order",
		update_delivery_order_many:"delivery_order_mutation_response",
		update_delivery_order_public:"delivery_order_public_mutation_response",
		update_delivery_order_public_many:"delivery_order_public_mutation_response",
		update_mez_admin:"mez_admin_mutation_response",
		update_mez_admin_by_pk:"mez_admin",
		update_mez_admin_many:"mez_admin_mutation_response",
		update_notification_info:"notification_info_mutation_response",
		update_notification_info_by_pk:"notification_info",
		update_notification_info_many:"notification_info_mutation_response",
		update_restaurant:"restaurant_mutation_response",
		update_restaurant_by_pk:"restaurant",
		update_restaurant_cart:"restaurant_cart_mutation_response",
		update_restaurant_cart_by_pk:"restaurant_cart",
		update_restaurant_cart_item:"restaurant_cart_item_mutation_response",
		update_restaurant_cart_item_by_pk:"restaurant_cart_item",
		update_restaurant_cart_item_many:"restaurant_cart_item_mutation_response",
		update_restaurant_cart_many:"restaurant_cart_mutation_response",
		update_restaurant_category:"restaurant_category_mutation_response",
		update_restaurant_category_by_pk:"restaurant_category",
		update_restaurant_category_many:"restaurant_category_mutation_response",
		update_restaurant_choice:"restaurant_choice_mutation_response",
		update_restaurant_choice_by_pk:"restaurant_choice",
		update_restaurant_choice_many:"restaurant_choice_mutation_response",
		update_restaurant_item:"restaurant_item_mutation_response",
		update_restaurant_item_by_pk:"restaurant_item",
		update_restaurant_item_many:"restaurant_item_mutation_response",
		update_restaurant_item_option_map:"restaurant_item_option_map_mutation_response",
		update_restaurant_item_option_map_by_pk:"restaurant_item_option_map",
		update_restaurant_item_option_map_many:"restaurant_item_option_map_mutation_response",
		update_restaurant_many:"restaurant_mutation_response",
		update_restaurant_operator:"restaurant_operator_mutation_response",
		update_restaurant_operator_by_pk:"restaurant_operator",
		update_restaurant_operator_many:"restaurant_operator_mutation_response",
		update_restaurant_option:"restaurant_option_mutation_response",
		update_restaurant_option_by_pk:"restaurant_option",
		update_restaurant_option_choice_map:"restaurant_option_choice_map_mutation_response",
		update_restaurant_option_choice_map_by_pk:"restaurant_option_choice_map",
		update_restaurant_option_choice_map_many:"restaurant_option_choice_map_mutation_response",
		update_restaurant_option_many:"restaurant_option_mutation_response",
		update_restaurant_order:"restaurant_order_mutation_response",
		update_restaurant_order_by_pk:"restaurant_order",
		update_restaurant_order_item:"restaurant_order_item_mutation_response",
		update_restaurant_order_item_by_pk:"restaurant_order_item",
		update_restaurant_order_item_many:"restaurant_order_item_mutation_response",
		update_restaurant_order_many:"restaurant_order_mutation_response",
		update_restaurant_order_public:"restaurant_order_public_mutation_response",
		update_restaurant_order_public_many:"restaurant_order_public_mutation_response",
		update_review:"review_mutation_response",
		update_review_by_pk:"review",
		update_review_many:"review_mutation_response",
		update_saved_location:"saved_location_mutation_response",
		update_saved_location_by_pk:"saved_location",
		update_saved_location_many:"saved_location_mutation_response",
		update_service_provider_payment_info:"service_provider_payment_info_mutation_response",
		update_service_provider_payment_info_by_pk:"service_provider_payment_info",
		update_service_provider_payment_info_many:"service_provider_payment_info_mutation_response",
		update_stripe_info:"stripe_info_mutation_response",
		update_stripe_info_by_pk:"stripe_info",
		update_stripe_info_many:"stripe_info_mutation_response",
		update_topology_app_type:"topology_app_type_mutation_response",
		update_topology_app_type_by_pk:"topology_app_type",
		update_topology_app_type_many:"topology_app_type_mutation_response",
		update_topology_language:"topology_language_mutation_response",
		update_topology_language_by_pk:"topology_language",
		update_topology_language_many:"topology_language_mutation_response",
		update_translation:"translation_mutation_response",
		update_translation_by_pk:"translation",
		update_translation_many:"translation_mutation_response",
		update_translation_value:"translation_value_mutation_response",
		update_translation_value_by_pk:"translation_value",
		update_translation_value_many:"translation_value_mutation_response",
		update_user:"user_mutation_response",
		update_user_by_pk:"user",
		update_user_many:"user_mutation_response"
	},
	notification_info:{
		app_type_id:"String",
		id:"Int",
		token:"String",
		user_id:"Int"
	},
	notification_info_aggregate:{
		aggregate:"notification_info_aggregate_fields",
		nodes:"notification_info"
	},
	notification_info_aggregate_fields:{
		avg:"notification_info_avg_fields",
		count:"Int",
		max:"notification_info_max_fields",
		min:"notification_info_min_fields",
		stddev:"notification_info_stddev_fields",
		stddev_pop:"notification_info_stddev_pop_fields",
		stddev_samp:"notification_info_stddev_samp_fields",
		sum:"notification_info_sum_fields",
		var_pop:"notification_info_var_pop_fields",
		var_samp:"notification_info_var_samp_fields",
		variance:"notification_info_variance_fields"
	},
	notification_info_avg_fields:{
		id:"Float",
		user_id:"Float"
	},
	notification_info_max_fields:{
		app_type_id:"String",
		id:"Int",
		token:"String",
		user_id:"Int"
	},
	notification_info_min_fields:{
		app_type_id:"String",
		id:"Int",
		token:"String",
		user_id:"Int"
	},
	notification_info_mutation_response:{
		affected_rows:"Int",
		returning:"notification_info"
	},
	notification_info_stddev_fields:{
		id:"Float",
		user_id:"Float"
	},
	notification_info_stddev_pop_fields:{
		id:"Float",
		user_id:"Float"
	},
	notification_info_stddev_samp_fields:{
		id:"Float",
		user_id:"Float"
	},
	notification_info_sum_fields:{
		id:"Int",
		user_id:"Int"
	},
	notification_info_var_pop_fields:{
		id:"Float",
		user_id:"Float"
	},
	notification_info_var_samp_fields:{
		id:"Float",
		user_id:"Float"
	},
	notification_info_variance_fields:{
		id:"Float",
		user_id:"Float"
	},
	query_root:{
		chat:"chat",
		chat_aggregate:"chat_aggregate",
		chat_by_pk:"chat",
		chat_participant:"chat_participant",
		chat_participant_aggregate:"chat_participant_aggregate",
		chat_participant_by_pk:"chat_participant",
		customer:"customer",
		customer_aggregate:"customer_aggregate",
		customer_by_pk:"customer",
		deliverer:"deliverer",
		deliverer_aggregate:"deliverer_aggregate",
		deliverer_by_pk:"deliverer",
		delivery_order:"delivery_order",
		delivery_order_aggregate:"delivery_order_aggregate",
		delivery_order_by_pk:"delivery_order",
		delivery_order_public:"delivery_order_public",
		delivery_order_public_aggregate:"delivery_order_public_aggregate",
		mez_admin:"mez_admin",
		mez_admin_aggregate:"mez_admin_aggregate",
		mez_admin_by_pk:"mez_admin",
		notification_info:"notification_info",
		notification_info_aggregate:"notification_info_aggregate",
		notification_info_by_pk:"notification_info",
		restaurant:"restaurant",
		restaurant_aggregate:"restaurant_aggregate",
		restaurant_by_pk:"restaurant",
		restaurant_cart:"restaurant_cart",
		restaurant_cart_aggregate:"restaurant_cart_aggregate",
		restaurant_cart_by_pk:"restaurant_cart",
		restaurant_cart_item:"restaurant_cart_item",
		restaurant_cart_item_aggregate:"restaurant_cart_item_aggregate",
		restaurant_cart_item_by_pk:"restaurant_cart_item",
		restaurant_category:"restaurant_category",
		restaurant_category_aggregate:"restaurant_category_aggregate",
		restaurant_category_by_pk:"restaurant_category",
		restaurant_choice:"restaurant_choice",
		restaurant_choice_aggregate:"restaurant_choice_aggregate",
		restaurant_choice_by_pk:"restaurant_choice",
		restaurant_item:"restaurant_item",
		restaurant_item_aggregate:"restaurant_item_aggregate",
		restaurant_item_by_pk:"restaurant_item",
		restaurant_item_option_map:"restaurant_item_option_map",
		restaurant_item_option_map_aggregate:"restaurant_item_option_map_aggregate",
		restaurant_item_option_map_by_pk:"restaurant_item_option_map",
		restaurant_operator:"restaurant_operator",
		restaurant_operator_aggregate:"restaurant_operator_aggregate",
		restaurant_operator_by_pk:"restaurant_operator",
		restaurant_option:"restaurant_option",
		restaurant_option_aggregate:"restaurant_option_aggregate",
		restaurant_option_by_pk:"restaurant_option",
		restaurant_option_choice_map:"restaurant_option_choice_map",
		restaurant_option_choice_map_aggregate:"restaurant_option_choice_map_aggregate",
		restaurant_option_choice_map_by_pk:"restaurant_option_choice_map",
		restaurant_order:"restaurant_order",
		restaurant_order_aggregate:"restaurant_order_aggregate",
		restaurant_order_by_pk:"restaurant_order",
		restaurant_order_item:"restaurant_order_item",
		restaurant_order_item_aggregate:"restaurant_order_item_aggregate",
		restaurant_order_item_by_pk:"restaurant_order_item",
		restaurant_order_public:"restaurant_order_public",
		restaurant_order_public_aggregate:"restaurant_order_public_aggregate",
		review:"review",
		review_aggregate:"review_aggregate",
		review_by_pk:"review",
		saved_location:"saved_location",
		saved_location_aggregate:"saved_location_aggregate",
		saved_location_by_pk:"saved_location",
		service_provider_payment_info:"service_provider_payment_info",
		service_provider_payment_info_aggregate:"service_provider_payment_info_aggregate",
		service_provider_payment_info_by_pk:"service_provider_payment_info",
		stripe_info:"stripe_info",
		stripe_info_aggregate:"stripe_info_aggregate",
		stripe_info_by_pk:"stripe_info",
		topology_app_type:"topology_app_type",
		topology_app_type_aggregate:"topology_app_type_aggregate",
		topology_app_type_by_pk:"topology_app_type",
		topology_language:"topology_language",
		topology_language_aggregate:"topology_language_aggregate",
		topology_language_by_pk:"topology_language",
		translation:"translation",
		translation_aggregate:"translation_aggregate",
		translation_by_pk:"translation",
		translation_value:"translation_value",
		translation_value_aggregate:"translation_value_aggregate",
		translation_value_by_pk:"translation_value",
		user:"user",
		user_aggregate:"user_aggregate",
		user_by_pk:"user"
	},
	restaurant:{
		approved:"Boolean",
		categories:"restaurant_category",
		categories_aggregate:"restaurant_category_aggregate",
		description:"translation",
		description_id:"Int",
		firebase_id:"String",
		id:"Int",
		image:"String",
		language_id:"String",
		location_gps:"geography",
		location_text:"String",
		name:"String",
		open_status:"String",
		orders:"restaurant_order",
		orders_aggregate:"restaurant_order_aggregate",
		payment_info:"service_provider_payment_info",
		payment_info_id:"Int",
		restaurant_operators:"restaurant_operator",
		restaurant_operators_aggregate:"restaurant_operator_aggregate",
		schedule_id:"Int",
		self_delivery:"Boolean",
		service_provider_type:"String",
		specials:"restaurant_item"
	},
	restaurant_aggregate:{
		aggregate:"restaurant_aggregate_fields",
		nodes:"restaurant"
	},
	restaurant_aggregate_fields:{
		avg:"restaurant_avg_fields",
		count:"Int",
		max:"restaurant_max_fields",
		min:"restaurant_min_fields",
		stddev:"restaurant_stddev_fields",
		stddev_pop:"restaurant_stddev_pop_fields",
		stddev_samp:"restaurant_stddev_samp_fields",
		sum:"restaurant_sum_fields",
		var_pop:"restaurant_var_pop_fields",
		var_samp:"restaurant_var_samp_fields",
		variance:"restaurant_variance_fields"
	},
	restaurant_avg_fields:{
		description_id:"Float",
		id:"Float",
		payment_info_id:"Float",
		schedule_id:"Float"
	},
	restaurant_cart:{
		cost:"money",
		customer:"customer",
		customer_id:"Int",
		items:"restaurant_cart_item",
		items_aggregate:"restaurant_cart_item_aggregate",
		restaurant:"restaurant",
		restaurant_id:"Int"
	},
	restaurant_cart_aggregate:{
		aggregate:"restaurant_cart_aggregate_fields",
		nodes:"restaurant_cart"
	},
	restaurant_cart_aggregate_fields:{
		avg:"restaurant_cart_avg_fields",
		count:"Int",
		max:"restaurant_cart_max_fields",
		min:"restaurant_cart_min_fields",
		stddev:"restaurant_cart_stddev_fields",
		stddev_pop:"restaurant_cart_stddev_pop_fields",
		stddev_samp:"restaurant_cart_stddev_samp_fields",
		sum:"restaurant_cart_sum_fields",
		var_pop:"restaurant_cart_var_pop_fields",
		var_samp:"restaurant_cart_var_samp_fields",
		variance:"restaurant_cart_variance_fields"
	},
	restaurant_cart_avg_fields:{
		customer_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_cart_item:{
		cost_per_one:"money",
		customer_id:"Int",
		id:"Int",
		note:"String",
		quantity:"Int",
		restaurant_cart:"restaurant_cart",
		restaurant_item:"restaurant_item",
		restaurant_item_id:"Int",
		selected_options:"json"
	},
	restaurant_cart_item_aggregate:{
		aggregate:"restaurant_cart_item_aggregate_fields",
		nodes:"restaurant_cart_item"
	},
	restaurant_cart_item_aggregate_fields:{
		avg:"restaurant_cart_item_avg_fields",
		count:"Int",
		max:"restaurant_cart_item_max_fields",
		min:"restaurant_cart_item_min_fields",
		stddev:"restaurant_cart_item_stddev_fields",
		stddev_pop:"restaurant_cart_item_stddev_pop_fields",
		stddev_samp:"restaurant_cart_item_stddev_samp_fields",
		sum:"restaurant_cart_item_sum_fields",
		var_pop:"restaurant_cart_item_var_pop_fields",
		var_samp:"restaurant_cart_item_var_samp_fields",
		variance:"restaurant_cart_item_variance_fields"
	},
	restaurant_cart_item_avg_fields:{
		cost_per_one:"Float",
		customer_id:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float"
	},
	restaurant_cart_item_max_fields:{
		cost_per_one:"money",
		customer_id:"Int",
		id:"Int",
		note:"String",
		quantity:"Int",
		restaurant_item_id:"Int"
	},
	restaurant_cart_item_min_fields:{
		cost_per_one:"money",
		customer_id:"Int",
		id:"Int",
		note:"String",
		quantity:"Int",
		restaurant_item_id:"Int"
	},
	restaurant_cart_item_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant_cart_item"
	},
	restaurant_cart_item_stddev_fields:{
		cost_per_one:"Float",
		customer_id:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float"
	},
	restaurant_cart_item_stddev_pop_fields:{
		cost_per_one:"Float",
		customer_id:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float"
	},
	restaurant_cart_item_stddev_samp_fields:{
		cost_per_one:"Float",
		customer_id:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float"
	},
	restaurant_cart_item_sum_fields:{
		cost_per_one:"money",
		customer_id:"Int",
		id:"Int",
		quantity:"Int",
		restaurant_item_id:"Int"
	},
	restaurant_cart_item_var_pop_fields:{
		cost_per_one:"Float",
		customer_id:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float"
	},
	restaurant_cart_item_var_samp_fields:{
		cost_per_one:"Float",
		customer_id:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float"
	},
	restaurant_cart_item_variance_fields:{
		cost_per_one:"Float",
		customer_id:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float"
	},
	restaurant_cart_max_fields:{
		customer_id:"Int",
		restaurant_id:"Int"
	},
	restaurant_cart_min_fields:{
		customer_id:"Int",
		restaurant_id:"Int"
	},
	restaurant_cart_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant_cart"
	},
	restaurant_cart_stddev_fields:{
		customer_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_cart_stddev_pop_fields:{
		customer_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_cart_stddev_samp_fields:{
		customer_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_cart_sum_fields:{
		customer_id:"Int",
		restaurant_id:"Int"
	},
	restaurant_cart_var_pop_fields:{
		customer_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_cart_var_samp_fields:{
		customer_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_cart_variance_fields:{
		customer_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_category:{
		description:"translation",
		description_id:"Int",
		id:"Int",
		items:"restaurant_item",
		items_aggregate:"restaurant_item_aggregate",
		name:"translation",
		name_id:"Int",
		position:"Int",
		restaurant:"restaurant",
		restaurant_id:"Int",
		schedule_id:"Int"
	},
	restaurant_category_aggregate:{
		aggregate:"restaurant_category_aggregate_fields",
		nodes:"restaurant_category"
	},
	restaurant_category_aggregate_fields:{
		avg:"restaurant_category_avg_fields",
		count:"Int",
		max:"restaurant_category_max_fields",
		min:"restaurant_category_min_fields",
		stddev:"restaurant_category_stddev_fields",
		stddev_pop:"restaurant_category_stddev_pop_fields",
		stddev_samp:"restaurant_category_stddev_samp_fields",
		sum:"restaurant_category_sum_fields",
		var_pop:"restaurant_category_var_pop_fields",
		var_samp:"restaurant_category_var_samp_fields",
		variance:"restaurant_category_variance_fields"
	},
	restaurant_category_avg_fields:{
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float",
		schedule_id:"Float"
	},
	restaurant_category_max_fields:{
		description_id:"Int",
		id:"Int",
		name_id:"Int",
		position:"Int",
		restaurant_id:"Int",
		schedule_id:"Int"
	},
	restaurant_category_min_fields:{
		description_id:"Int",
		id:"Int",
		name_id:"Int",
		position:"Int",
		restaurant_id:"Int",
		schedule_id:"Int"
	},
	restaurant_category_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant_category"
	},
	restaurant_category_stddev_fields:{
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float",
		schedule_id:"Float"
	},
	restaurant_category_stddev_pop_fields:{
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float",
		schedule_id:"Float"
	},
	restaurant_category_stddev_samp_fields:{
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float",
		schedule_id:"Float"
	},
	restaurant_category_sum_fields:{
		description_id:"Int",
		id:"Int",
		name_id:"Int",
		position:"Int",
		restaurant_id:"Int",
		schedule_id:"Int"
	},
	restaurant_category_var_pop_fields:{
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float",
		schedule_id:"Float"
	},
	restaurant_category_var_samp_fields:{
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float",
		schedule_id:"Float"
	},
	restaurant_category_variance_fields:{
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float",
		schedule_id:"Float"
	},
	restaurant_choice:{
		available:"Boolean",
		cost:"money",
		id:"Int",
		name:"translation",
		name_id:"Int",
		options:"restaurant_option_choice_map",
		options_aggregate:"restaurant_option_choice_map_aggregate",
		restaurant:"restaurant",
		restaurant_id:"Int"
	},
	restaurant_choice_aggregate:{
		aggregate:"restaurant_choice_aggregate_fields",
		nodes:"restaurant_choice"
	},
	restaurant_choice_aggregate_fields:{
		avg:"restaurant_choice_avg_fields",
		count:"Int",
		max:"restaurant_choice_max_fields",
		min:"restaurant_choice_min_fields",
		stddev:"restaurant_choice_stddev_fields",
		stddev_pop:"restaurant_choice_stddev_pop_fields",
		stddev_samp:"restaurant_choice_stddev_samp_fields",
		sum:"restaurant_choice_sum_fields",
		var_pop:"restaurant_choice_var_pop_fields",
		var_samp:"restaurant_choice_var_samp_fields",
		variance:"restaurant_choice_variance_fields"
	},
	restaurant_choice_avg_fields:{
		cost:"Float",
		id:"Float",
		name_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_choice_max_fields:{
		cost:"money",
		id:"Int",
		name_id:"Int",
		restaurant_id:"Int"
	},
	restaurant_choice_min_fields:{
		cost:"money",
		id:"Int",
		name_id:"Int",
		restaurant_id:"Int"
	},
	restaurant_choice_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant_choice"
	},
	restaurant_choice_stddev_fields:{
		cost:"Float",
		id:"Float",
		name_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_choice_stddev_pop_fields:{
		cost:"Float",
		id:"Float",
		name_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_choice_stddev_samp_fields:{
		cost:"Float",
		id:"Float",
		name_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_choice_sum_fields:{
		cost:"money",
		id:"Int",
		name_id:"Int",
		restaurant_id:"Int"
	},
	restaurant_choice_var_pop_fields:{
		cost:"Float",
		id:"Float",
		name_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_choice_var_samp_fields:{
		cost:"Float",
		id:"Float",
		name_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_choice_variance_fields:{
		cost:"Float",
		id:"Float",
		name_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_item:{
		archived:"Boolean",
		available:"Boolean",
		category:"restaurant_category",
		category_id:"Int",
		cost:"money",
		description:"translation",
		description_id:"Int",
		id:"Int",
		item_type:"String",
		name:"translation",
		name_id:"Int",
		options:"restaurant_item_option_map",
		options_aggregate:"restaurant_item_option_map_aggregate",
		position:"Int",
		restaurant:"restaurant",
		restaurant_id:"Int",
		special_period_end:"timestamptz",
		special_period_start:"timestamptz"
	},
	restaurant_item_aggregate:{
		aggregate:"restaurant_item_aggregate_fields",
		nodes:"restaurant_item"
	},
	restaurant_item_aggregate_fields:{
		avg:"restaurant_item_avg_fields",
		count:"Int",
		max:"restaurant_item_max_fields",
		min:"restaurant_item_min_fields",
		stddev:"restaurant_item_stddev_fields",
		stddev_pop:"restaurant_item_stddev_pop_fields",
		stddev_samp:"restaurant_item_stddev_samp_fields",
		sum:"restaurant_item_sum_fields",
		var_pop:"restaurant_item_var_pop_fields",
		var_samp:"restaurant_item_var_samp_fields",
		variance:"restaurant_item_variance_fields"
	},
	restaurant_item_avg_fields:{
		category_id:"Float",
		cost:"Float",
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_max_fields:{
		category_id:"Int",
		cost:"money",
		description_id:"Int",
		id:"Int",
		item_type:"String",
		name_id:"Int",
		position:"Int",
		restaurant_id:"Int",
		special_period_end:"timestamptz",
		special_period_start:"timestamptz"
	},
	restaurant_item_min_fields:{
		category_id:"Int",
		cost:"money",
		description_id:"Int",
		id:"Int",
		item_type:"String",
		name_id:"Int",
		position:"Int",
		restaurant_id:"Int",
		special_period_end:"timestamptz",
		special_period_start:"timestamptz"
	},
	restaurant_item_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant_item"
	},
	restaurant_item_option_map:{
		id:"Int",
		item_id:"Int",
		item_options:"restaurant_option",
		item_options_aggregate:"restaurant_option_aggregate",
		option_id:"Int",
		restaurant:"restaurant",
		restaurant_id:"Int"
	},
	restaurant_item_option_map_aggregate:{
		aggregate:"restaurant_item_option_map_aggregate_fields",
		nodes:"restaurant_item_option_map"
	},
	restaurant_item_option_map_aggregate_fields:{
		avg:"restaurant_item_option_map_avg_fields",
		count:"Int",
		max:"restaurant_item_option_map_max_fields",
		min:"restaurant_item_option_map_min_fields",
		stddev:"restaurant_item_option_map_stddev_fields",
		stddev_pop:"restaurant_item_option_map_stddev_pop_fields",
		stddev_samp:"restaurant_item_option_map_stddev_samp_fields",
		sum:"restaurant_item_option_map_sum_fields",
		var_pop:"restaurant_item_option_map_var_pop_fields",
		var_samp:"restaurant_item_option_map_var_samp_fields",
		variance:"restaurant_item_option_map_variance_fields"
	},
	restaurant_item_option_map_avg_fields:{
		id:"Float",
		item_id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_option_map_max_fields:{
		id:"Int",
		item_id:"Int",
		option_id:"Int",
		restaurant_id:"Int"
	},
	restaurant_item_option_map_min_fields:{
		id:"Int",
		item_id:"Int",
		option_id:"Int",
		restaurant_id:"Int"
	},
	restaurant_item_option_map_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant_item_option_map"
	},
	restaurant_item_option_map_stddev_fields:{
		id:"Float",
		item_id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_option_map_stddev_pop_fields:{
		id:"Float",
		item_id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_option_map_stddev_samp_fields:{
		id:"Float",
		item_id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_option_map_sum_fields:{
		id:"Int",
		item_id:"Int",
		option_id:"Int",
		restaurant_id:"Int"
	},
	restaurant_item_option_map_var_pop_fields:{
		id:"Float",
		item_id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_option_map_var_samp_fields:{
		id:"Float",
		item_id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_option_map_variance_fields:{
		id:"Float",
		item_id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_stddev_fields:{
		category_id:"Float",
		cost:"Float",
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_stddev_pop_fields:{
		category_id:"Float",
		cost:"Float",
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_stddev_samp_fields:{
		category_id:"Float",
		cost:"Float",
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_sum_fields:{
		category_id:"Int",
		cost:"money",
		description_id:"Int",
		id:"Int",
		name_id:"Int",
		position:"Int",
		restaurant_id:"Int"
	},
	restaurant_item_var_pop_fields:{
		category_id:"Float",
		cost:"Float",
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_var_samp_fields:{
		category_id:"Float",
		cost:"Float",
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_item_variance_fields:{
		category_id:"Float",
		cost:"Float",
		description_id:"Float",
		id:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_max_fields:{
		description_id:"Int",
		firebase_id:"String",
		id:"Int",
		image:"String",
		language_id:"String",
		location_text:"String",
		name:"String",
		open_status:"String",
		payment_info_id:"Int",
		schedule_id:"Int",
		service_provider_type:"String"
	},
	restaurant_min_fields:{
		description_id:"Int",
		firebase_id:"String",
		id:"Int",
		image:"String",
		language_id:"String",
		location_text:"String",
		name:"String",
		open_status:"String",
		payment_info_id:"Int",
		schedule_id:"Int",
		service_provider_type:"String"
	},
	restaurant_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant"
	},
	restaurant_operator:{
		app_version:"String",
		current_gps:"geography",
		id:"Int",
		notification_token:"String",
		owner:"Boolean",
		restaurant:"restaurant",
		restaurant_id:"Int",
		status:"String",
		user:"user",
		user_id:"Int"
	},
	restaurant_operator_aggregate:{
		aggregate:"restaurant_operator_aggregate_fields",
		nodes:"restaurant_operator"
	},
	restaurant_operator_aggregate_fields:{
		avg:"restaurant_operator_avg_fields",
		count:"Int",
		max:"restaurant_operator_max_fields",
		min:"restaurant_operator_min_fields",
		stddev:"restaurant_operator_stddev_fields",
		stddev_pop:"restaurant_operator_stddev_pop_fields",
		stddev_samp:"restaurant_operator_stddev_samp_fields",
		sum:"restaurant_operator_sum_fields",
		var_pop:"restaurant_operator_var_pop_fields",
		var_samp:"restaurant_operator_var_samp_fields",
		variance:"restaurant_operator_variance_fields"
	},
	restaurant_operator_avg_fields:{
		id:"Float",
		restaurant_id:"Float",
		user_id:"Float"
	},
	restaurant_operator_max_fields:{
		app_version:"String",
		id:"Int",
		restaurant_id:"Int",
		status:"String",
		user_id:"Int"
	},
	restaurant_operator_min_fields:{
		app_version:"String",
		id:"Int",
		restaurant_id:"Int",
		status:"String",
		user_id:"Int"
	},
	restaurant_operator_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant_operator"
	},
	restaurant_operator_stddev_fields:{
		id:"Float",
		restaurant_id:"Float",
		user_id:"Float"
	},
	restaurant_operator_stddev_pop_fields:{
		id:"Float",
		restaurant_id:"Float",
		user_id:"Float"
	},
	restaurant_operator_stddev_samp_fields:{
		id:"Float",
		restaurant_id:"Float",
		user_id:"Float"
	},
	restaurant_operator_sum_fields:{
		id:"Int",
		restaurant_id:"Int",
		user_id:"Int"
	},
	restaurant_operator_var_pop_fields:{
		id:"Float",
		restaurant_id:"Float",
		user_id:"Float"
	},
	restaurant_operator_var_samp_fields:{
		id:"Float",
		restaurant_id:"Float",
		user_id:"Float"
	},
	restaurant_operator_variance_fields:{
		id:"Float",
		restaurant_id:"Float",
		user_id:"Float"
	},
	restaurant_option:{
		choices:"restaurant_option_choice_map",
		choices_aggregate:"restaurant_option_choice_map_aggregate",
		cost_per_extra:"money",
		free_choice:"Int",
		id:"Int",
		items:"restaurant_item_option_map",
		items_aggregate:"restaurant_item_option_map_aggregate",
		maximum_choice:"Int",
		minimum_choice:"Int",
		name:"translation",
		name_id:"Int",
		option_type:"String",
		position:"Int",
		restaurant:"restaurant",
		restaurant_id:"Int"
	},
	restaurant_option_aggregate:{
		aggregate:"restaurant_option_aggregate_fields",
		nodes:"restaurant_option"
	},
	restaurant_option_aggregate_fields:{
		avg:"restaurant_option_avg_fields",
		count:"Int",
		max:"restaurant_option_max_fields",
		min:"restaurant_option_min_fields",
		stddev:"restaurant_option_stddev_fields",
		stddev_pop:"restaurant_option_stddev_pop_fields",
		stddev_samp:"restaurant_option_stddev_samp_fields",
		sum:"restaurant_option_sum_fields",
		var_pop:"restaurant_option_var_pop_fields",
		var_samp:"restaurant_option_var_samp_fields",
		variance:"restaurant_option_variance_fields"
	},
	restaurant_option_avg_fields:{
		cost_per_extra:"Float",
		free_choice:"Float",
		id:"Float",
		maximum_choice:"Float",
		minimum_choice:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_choice_map:{
		choice_id:"Int",
		id:"Int",
		option_choices:"restaurant_choice",
		option_choices_aggregate:"restaurant_choice_aggregate",
		option_id:"Int",
		restaurant:"restaurant",
		restaurant_id:"Int"
	},
	restaurant_option_choice_map_aggregate:{
		aggregate:"restaurant_option_choice_map_aggregate_fields",
		nodes:"restaurant_option_choice_map"
	},
	restaurant_option_choice_map_aggregate_fields:{
		avg:"restaurant_option_choice_map_avg_fields",
		count:"Int",
		max:"restaurant_option_choice_map_max_fields",
		min:"restaurant_option_choice_map_min_fields",
		stddev:"restaurant_option_choice_map_stddev_fields",
		stddev_pop:"restaurant_option_choice_map_stddev_pop_fields",
		stddev_samp:"restaurant_option_choice_map_stddev_samp_fields",
		sum:"restaurant_option_choice_map_sum_fields",
		var_pop:"restaurant_option_choice_map_var_pop_fields",
		var_samp:"restaurant_option_choice_map_var_samp_fields",
		variance:"restaurant_option_choice_map_variance_fields"
	},
	restaurant_option_choice_map_avg_fields:{
		choice_id:"Float",
		id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_choice_map_max_fields:{
		choice_id:"Int",
		id:"Int",
		option_id:"Int",
		restaurant_id:"Int"
	},
	restaurant_option_choice_map_min_fields:{
		choice_id:"Int",
		id:"Int",
		option_id:"Int",
		restaurant_id:"Int"
	},
	restaurant_option_choice_map_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant_option_choice_map"
	},
	restaurant_option_choice_map_stddev_fields:{
		choice_id:"Float",
		id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_choice_map_stddev_pop_fields:{
		choice_id:"Float",
		id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_choice_map_stddev_samp_fields:{
		choice_id:"Float",
		id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_choice_map_sum_fields:{
		choice_id:"Int",
		id:"Int",
		option_id:"Int",
		restaurant_id:"Int"
	},
	restaurant_option_choice_map_var_pop_fields:{
		choice_id:"Float",
		id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_choice_map_var_samp_fields:{
		choice_id:"Float",
		id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_choice_map_variance_fields:{
		choice_id:"Float",
		id:"Float",
		option_id:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_max_fields:{
		cost_per_extra:"money",
		free_choice:"Int",
		id:"Int",
		maximum_choice:"Int",
		minimum_choice:"Int",
		name_id:"Int",
		option_type:"String",
		position:"Int",
		restaurant_id:"Int"
	},
	restaurant_option_min_fields:{
		cost_per_extra:"money",
		free_choice:"Int",
		id:"Int",
		maximum_choice:"Int",
		minimum_choice:"Int",
		name_id:"Int",
		option_type:"String",
		position:"Int",
		restaurant_id:"Int"
	},
	restaurant_option_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant_option"
	},
	restaurant_option_stddev_fields:{
		cost_per_extra:"Float",
		free_choice:"Float",
		id:"Float",
		maximum_choice:"Float",
		minimum_choice:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_stddev_pop_fields:{
		cost_per_extra:"Float",
		free_choice:"Float",
		id:"Float",
		maximum_choice:"Float",
		minimum_choice:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_stddev_samp_fields:{
		cost_per_extra:"Float",
		free_choice:"Float",
		id:"Float",
		maximum_choice:"Float",
		minimum_choice:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_sum_fields:{
		cost_per_extra:"money",
		free_choice:"Int",
		id:"Int",
		maximum_choice:"Int",
		minimum_choice:"Int",
		name_id:"Int",
		position:"Int",
		restaurant_id:"Int"
	},
	restaurant_option_var_pop_fields:{
		cost_per_extra:"Float",
		free_choice:"Float",
		id:"Float",
		maximum_choice:"Float",
		minimum_choice:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_var_samp_fields:{
		cost_per_extra:"Float",
		free_choice:"Float",
		id:"Float",
		maximum_choice:"Float",
		minimum_choice:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_option_variance_fields:{
		cost_per_extra:"Float",
		free_choice:"Float",
		id:"Float",
		maximum_choice:"Float",
		minimum_choice:"Float",
		name_id:"Float",
		position:"Float",
		restaurant_id:"Float"
	},
	restaurant_order:{
		actual_food_ready_time:"timestamptz",
		cancellation_time:"timestamptz",
		chat:"chat",
		chat_id:"Int",
		customer:"customer",
		customer_app_type:"String",
		customer_id:"Int",
		delivery:"delivery_order",
		delivery_cost:"money",
		delivery_id:"Int",
		estimated_food_ready_time:"timestamptz",
		firebase_id:"String",
		id:"Int",
		items:"restaurant_order_item",
		items_aggregate:"restaurant_order_item_aggregate",
		items_cost:"money",
		notes:"String",
		order_time:"timestamptz",
		order_type:"String",
		payment_type:"String",
		refund_amount:"Int",
		restaurant:"restaurant",
		restaurant_id:"Int",
		review:"review",
		review_id:"Int",
		status:"String",
		stripe_payment_id:"Int",
		tax:"float8",
		to_location_address:"String",
		to_location_gps:"geography",
		total_cost:"money"
	},
	restaurant_order_aggregate:{
		aggregate:"restaurant_order_aggregate_fields",
		nodes:"restaurant_order"
	},
	restaurant_order_aggregate_fields:{
		avg:"restaurant_order_avg_fields",
		count:"Int",
		max:"restaurant_order_max_fields",
		min:"restaurant_order_min_fields",
		stddev:"restaurant_order_stddev_fields",
		stddev_pop:"restaurant_order_stddev_pop_fields",
		stddev_samp:"restaurant_order_stddev_samp_fields",
		sum:"restaurant_order_sum_fields",
		var_pop:"restaurant_order_var_pop_fields",
		var_samp:"restaurant_order_var_samp_fields",
		variance:"restaurant_order_variance_fields"
	},
	restaurant_order_avg_fields:{
		chat_id:"Float",
		customer_id:"Float",
		delivery_cost:"Float",
		delivery_id:"Float",
		id:"Float",
		refund_amount:"Float",
		restaurant_id:"Float",
		review_id:"Float",
		stripe_payment_id:"Float",
		tax:"Float"
	},
	restaurant_order_item:{
		cost_per_one:"money",
		id:"Int",
		in_json:"json",
		notes:"String",
		order:"restaurant_order",
		quantity:"Int",
		restaurant_item:"restaurant_item",
		restaurant_item_id:"Int",
		restaurant_order_id:"Int",
		review_id:"Int",
		unavailable:"Boolean"
	},
	restaurant_order_item_aggregate:{
		aggregate:"restaurant_order_item_aggregate_fields",
		nodes:"restaurant_order_item"
	},
	restaurant_order_item_aggregate_fields:{
		avg:"restaurant_order_item_avg_fields",
		count:"Int",
		max:"restaurant_order_item_max_fields",
		min:"restaurant_order_item_min_fields",
		stddev:"restaurant_order_item_stddev_fields",
		stddev_pop:"restaurant_order_item_stddev_pop_fields",
		stddev_samp:"restaurant_order_item_stddev_samp_fields",
		sum:"restaurant_order_item_sum_fields",
		var_pop:"restaurant_order_item_var_pop_fields",
		var_samp:"restaurant_order_item_var_samp_fields",
		variance:"restaurant_order_item_variance_fields"
	},
	restaurant_order_item_avg_fields:{
		cost_per_one:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float",
		restaurant_order_id:"Float",
		review_id:"Float"
	},
	restaurant_order_item_max_fields:{
		cost_per_one:"money",
		id:"Int",
		notes:"String",
		quantity:"Int",
		restaurant_item_id:"Int",
		restaurant_order_id:"Int",
		review_id:"Int"
	},
	restaurant_order_item_min_fields:{
		cost_per_one:"money",
		id:"Int",
		notes:"String",
		quantity:"Int",
		restaurant_item_id:"Int",
		restaurant_order_id:"Int",
		review_id:"Int"
	},
	restaurant_order_item_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant_order_item"
	},
	restaurant_order_item_stddev_fields:{
		cost_per_one:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float",
		restaurant_order_id:"Float",
		review_id:"Float"
	},
	restaurant_order_item_stddev_pop_fields:{
		cost_per_one:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float",
		restaurant_order_id:"Float",
		review_id:"Float"
	},
	restaurant_order_item_stddev_samp_fields:{
		cost_per_one:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float",
		restaurant_order_id:"Float",
		review_id:"Float"
	},
	restaurant_order_item_sum_fields:{
		cost_per_one:"money",
		id:"Int",
		quantity:"Int",
		restaurant_item_id:"Int",
		restaurant_order_id:"Int",
		review_id:"Int"
	},
	restaurant_order_item_var_pop_fields:{
		cost_per_one:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float",
		restaurant_order_id:"Float",
		review_id:"Float"
	},
	restaurant_order_item_var_samp_fields:{
		cost_per_one:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float",
		restaurant_order_id:"Float",
		review_id:"Float"
	},
	restaurant_order_item_variance_fields:{
		cost_per_one:"Float",
		id:"Float",
		quantity:"Float",
		restaurant_item_id:"Float",
		restaurant_order_id:"Float",
		review_id:"Float"
	},
	restaurant_order_max_fields:{
		actual_food_ready_time:"timestamptz",
		cancellation_time:"timestamptz",
		chat_id:"Int",
		customer_app_type:"String",
		customer_id:"Int",
		delivery_cost:"money",
		delivery_id:"Int",
		estimated_food_ready_time:"timestamptz",
		firebase_id:"String",
		id:"Int",
		notes:"String",
		order_time:"timestamptz",
		order_type:"String",
		payment_type:"String",
		refund_amount:"Int",
		restaurant_id:"Int",
		review_id:"Int",
		status:"String",
		stripe_payment_id:"Int",
		tax:"float8",
		to_location_address:"String"
	},
	restaurant_order_min_fields:{
		actual_food_ready_time:"timestamptz",
		cancellation_time:"timestamptz",
		chat_id:"Int",
		customer_app_type:"String",
		customer_id:"Int",
		delivery_cost:"money",
		delivery_id:"Int",
		estimated_food_ready_time:"timestamptz",
		firebase_id:"String",
		id:"Int",
		notes:"String",
		order_time:"timestamptz",
		order_type:"String",
		payment_type:"String",
		refund_amount:"Int",
		restaurant_id:"Int",
		review_id:"Int",
		status:"String",
		stripe_payment_id:"Int",
		tax:"float8",
		to_location_address:"String"
	},
	restaurant_order_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant_order"
	},
	restaurant_order_public:{
		actual_food_ready_time:"timestamptz",
		customer_id:"Int",
		estimated_food_ready_time:"timestamptz",
		order_time:"timestamptz",
		restaurant_id:"Int",
		restaurant_operators:"restaurant_operator",
		restaurant_operators_aggregate:"restaurant_operator_aggregate",
		review_id:"Int",
		status:"String"
	},
	restaurant_order_public_aggregate:{
		aggregate:"restaurant_order_public_aggregate_fields",
		nodes:"restaurant_order_public"
	},
	restaurant_order_public_aggregate_fields:{
		avg:"restaurant_order_public_avg_fields",
		count:"Int",
		max:"restaurant_order_public_max_fields",
		min:"restaurant_order_public_min_fields",
		stddev:"restaurant_order_public_stddev_fields",
		stddev_pop:"restaurant_order_public_stddev_pop_fields",
		stddev_samp:"restaurant_order_public_stddev_samp_fields",
		sum:"restaurant_order_public_sum_fields",
		var_pop:"restaurant_order_public_var_pop_fields",
		var_samp:"restaurant_order_public_var_samp_fields",
		variance:"restaurant_order_public_variance_fields"
	},
	restaurant_order_public_avg_fields:{
		customer_id:"Float",
		restaurant_id:"Float",
		review_id:"Float"
	},
	restaurant_order_public_max_fields:{
		actual_food_ready_time:"timestamptz",
		customer_id:"Int",
		estimated_food_ready_time:"timestamptz",
		order_time:"timestamptz",
		restaurant_id:"Int",
		review_id:"Int",
		status:"String"
	},
	restaurant_order_public_min_fields:{
		actual_food_ready_time:"timestamptz",
		customer_id:"Int",
		estimated_food_ready_time:"timestamptz",
		order_time:"timestamptz",
		restaurant_id:"Int",
		review_id:"Int",
		status:"String"
	},
	restaurant_order_public_mutation_response:{
		affected_rows:"Int",
		returning:"restaurant_order_public"
	},
	restaurant_order_public_stddev_fields:{
		customer_id:"Float",
		restaurant_id:"Float",
		review_id:"Float"
	},
	restaurant_order_public_stddev_pop_fields:{
		customer_id:"Float",
		restaurant_id:"Float",
		review_id:"Float"
	},
	restaurant_order_public_stddev_samp_fields:{
		customer_id:"Float",
		restaurant_id:"Float",
		review_id:"Float"
	},
	restaurant_order_public_sum_fields:{
		customer_id:"Int",
		restaurant_id:"Int",
		review_id:"Int"
	},
	restaurant_order_public_var_pop_fields:{
		customer_id:"Float",
		restaurant_id:"Float",
		review_id:"Float"
	},
	restaurant_order_public_var_samp_fields:{
		customer_id:"Float",
		restaurant_id:"Float",
		review_id:"Float"
	},
	restaurant_order_public_variance_fields:{
		customer_id:"Float",
		restaurant_id:"Float",
		review_id:"Float"
	},
	restaurant_order_stddev_fields:{
		chat_id:"Float",
		customer_id:"Float",
		delivery_cost:"Float",
		delivery_id:"Float",
		id:"Float",
		refund_amount:"Float",
		restaurant_id:"Float",
		review_id:"Float",
		stripe_payment_id:"Float",
		tax:"Float"
	},
	restaurant_order_stddev_pop_fields:{
		chat_id:"Float",
		customer_id:"Float",
		delivery_cost:"Float",
		delivery_id:"Float",
		id:"Float",
		refund_amount:"Float",
		restaurant_id:"Float",
		review_id:"Float",
		stripe_payment_id:"Float",
		tax:"Float"
	},
	restaurant_order_stddev_samp_fields:{
		chat_id:"Float",
		customer_id:"Float",
		delivery_cost:"Float",
		delivery_id:"Float",
		id:"Float",
		refund_amount:"Float",
		restaurant_id:"Float",
		review_id:"Float",
		stripe_payment_id:"Float",
		tax:"Float"
	},
	restaurant_order_sum_fields:{
		chat_id:"Int",
		customer_id:"Int",
		delivery_cost:"money",
		delivery_id:"Int",
		id:"Int",
		refund_amount:"Int",
		restaurant_id:"Int",
		review_id:"Int",
		stripe_payment_id:"Int",
		tax:"float8"
	},
	restaurant_order_var_pop_fields:{
		chat_id:"Float",
		customer_id:"Float",
		delivery_cost:"Float",
		delivery_id:"Float",
		id:"Float",
		refund_amount:"Float",
		restaurant_id:"Float",
		review_id:"Float",
		stripe_payment_id:"Float",
		tax:"Float"
	},
	restaurant_order_var_samp_fields:{
		chat_id:"Float",
		customer_id:"Float",
		delivery_cost:"Float",
		delivery_id:"Float",
		id:"Float",
		refund_amount:"Float",
		restaurant_id:"Float",
		review_id:"Float",
		stripe_payment_id:"Float",
		tax:"Float"
	},
	restaurant_order_variance_fields:{
		chat_id:"Float",
		customer_id:"Float",
		delivery_cost:"Float",
		delivery_id:"Float",
		id:"Float",
		refund_amount:"Float",
		restaurant_id:"Float",
		review_id:"Float",
		stripe_payment_id:"Float",
		tax:"Float"
	},
	restaurant_stddev_fields:{
		description_id:"Float",
		id:"Float",
		payment_info_id:"Float",
		schedule_id:"Float"
	},
	restaurant_stddev_pop_fields:{
		description_id:"Float",
		id:"Float",
		payment_info_id:"Float",
		schedule_id:"Float"
	},
	restaurant_stddev_samp_fields:{
		description_id:"Float",
		id:"Float",
		payment_info_id:"Float",
		schedule_id:"Float"
	},
	restaurant_sum_fields:{
		description_id:"Int",
		id:"Int",
		payment_info_id:"Int",
		schedule_id:"Int"
	},
	restaurant_var_pop_fields:{
		description_id:"Float",
		id:"Float",
		payment_info_id:"Float",
		schedule_id:"Float"
	},
	restaurant_var_samp_fields:{
		description_id:"Float",
		id:"Float",
		payment_info_id:"Float",
		schedule_id:"Float"
	},
	restaurant_variance_fields:{
		description_id:"Float",
		id:"Float",
		payment_info_id:"Float",
		schedule_id:"Float"
	},
	review:{
		from_entity_id:"Int",
		from_entity_type:"String",
		id:"Int",
		note:"String",
		rating:"Int",
		to_entity_id:"Int",
		to_entity_type:"String"
	},
	review_aggregate:{
		aggregate:"review_aggregate_fields",
		nodes:"review"
	},
	review_aggregate_fields:{
		avg:"review_avg_fields",
		count:"Int",
		max:"review_max_fields",
		min:"review_min_fields",
		stddev:"review_stddev_fields",
		stddev_pop:"review_stddev_pop_fields",
		stddev_samp:"review_stddev_samp_fields",
		sum:"review_sum_fields",
		var_pop:"review_var_pop_fields",
		var_samp:"review_var_samp_fields",
		variance:"review_variance_fields"
	},
	review_avg_fields:{
		from_entity_id:"Float",
		id:"Float",
		rating:"Float",
		to_entity_id:"Float"
	},
	review_max_fields:{
		from_entity_id:"Int",
		from_entity_type:"String",
		id:"Int",
		note:"String",
		rating:"Int",
		to_entity_id:"Int",
		to_entity_type:"String"
	},
	review_min_fields:{
		from_entity_id:"Int",
		from_entity_type:"String",
		id:"Int",
		note:"String",
		rating:"Int",
		to_entity_id:"Int",
		to_entity_type:"String"
	},
	review_mutation_response:{
		affected_rows:"Int",
		returning:"review"
	},
	review_stddev_fields:{
		from_entity_id:"Float",
		id:"Float",
		rating:"Float",
		to_entity_id:"Float"
	},
	review_stddev_pop_fields:{
		from_entity_id:"Float",
		id:"Float",
		rating:"Float",
		to_entity_id:"Float"
	},
	review_stddev_samp_fields:{
		from_entity_id:"Float",
		id:"Float",
		rating:"Float",
		to_entity_id:"Float"
	},
	review_sum_fields:{
		from_entity_id:"Int",
		id:"Int",
		rating:"Int",
		to_entity_id:"Int"
	},
	review_var_pop_fields:{
		from_entity_id:"Float",
		id:"Float",
		rating:"Float",
		to_entity_id:"Float"
	},
	review_var_samp_fields:{
		from_entity_id:"Float",
		id:"Float",
		rating:"Float",
		to_entity_id:"Float"
	},
	review_variance_fields:{
		from_entity_id:"Float",
		id:"Float",
		rating:"Float",
		to_entity_id:"Float"
	},
	saved_location:{
		customer_id:"Int",
		default:"Boolean",
		id:"Int",
		location_gps:"geography",
		location_text:"String",
		name:"String"
	},
	saved_location_aggregate:{
		aggregate:"saved_location_aggregate_fields",
		nodes:"saved_location"
	},
	saved_location_aggregate_fields:{
		avg:"saved_location_avg_fields",
		count:"Int",
		max:"saved_location_max_fields",
		min:"saved_location_min_fields",
		stddev:"saved_location_stddev_fields",
		stddev_pop:"saved_location_stddev_pop_fields",
		stddev_samp:"saved_location_stddev_samp_fields",
		sum:"saved_location_sum_fields",
		var_pop:"saved_location_var_pop_fields",
		var_samp:"saved_location_var_samp_fields",
		variance:"saved_location_variance_fields"
	},
	saved_location_avg_fields:{
		customer_id:"Float",
		id:"Float"
	},
	saved_location_max_fields:{
		customer_id:"Int",
		id:"Int",
		location_text:"String",
		name:"String"
	},
	saved_location_min_fields:{
		customer_id:"Int",
		id:"Int",
		location_text:"String",
		name:"String"
	},
	saved_location_mutation_response:{
		affected_rows:"Int",
		returning:"saved_location"
	},
	saved_location_stddev_fields:{
		customer_id:"Float",
		id:"Float"
	},
	saved_location_stddev_pop_fields:{
		customer_id:"Float",
		id:"Float"
	},
	saved_location_stddev_samp_fields:{
		customer_id:"Float",
		id:"Float"
	},
	saved_location_sum_fields:{
		customer_id:"Int",
		id:"Int"
	},
	saved_location_var_pop_fields:{
		customer_id:"Float",
		id:"Float"
	},
	saved_location_var_samp_fields:{
		customer_id:"Float",
		id:"Float"
	},
	saved_location_variance_fields:{
		customer_id:"Float",
		id:"Float"
	},
	service_provider_payment_info:{
		bank_transfer:"Boolean",
		card:"Boolean",
		cash:"Boolean",
		id:"Int",
		restaurant:"restaurant",
		service_provider_type:"String",
		stripe_info:"stripe_info",
		stripe_info_id:"Int"
	},
	service_provider_payment_info_aggregate:{
		aggregate:"service_provider_payment_info_aggregate_fields",
		nodes:"service_provider_payment_info"
	},
	service_provider_payment_info_aggregate_fields:{
		avg:"service_provider_payment_info_avg_fields",
		count:"Int",
		max:"service_provider_payment_info_max_fields",
		min:"service_provider_payment_info_min_fields",
		stddev:"service_provider_payment_info_stddev_fields",
		stddev_pop:"service_provider_payment_info_stddev_pop_fields",
		stddev_samp:"service_provider_payment_info_stddev_samp_fields",
		sum:"service_provider_payment_info_sum_fields",
		var_pop:"service_provider_payment_info_var_pop_fields",
		var_samp:"service_provider_payment_info_var_samp_fields",
		variance:"service_provider_payment_info_variance_fields"
	},
	service_provider_payment_info_avg_fields:{
		id:"Float",
		stripe_info_id:"Float"
	},
	service_provider_payment_info_max_fields:{
		id:"Int",
		service_provider_type:"String",
		stripe_info_id:"Int"
	},
	service_provider_payment_info_min_fields:{
		id:"Int",
		service_provider_type:"String",
		stripe_info_id:"Int"
	},
	service_provider_payment_info_mutation_response:{
		affected_rows:"Int",
		returning:"service_provider_payment_info"
	},
	service_provider_payment_info_stddev_fields:{
		id:"Float",
		stripe_info_id:"Float"
	},
	service_provider_payment_info_stddev_pop_fields:{
		id:"Float",
		stripe_info_id:"Float"
	},
	service_provider_payment_info_stddev_samp_fields:{
		id:"Float",
		stripe_info_id:"Float"
	},
	service_provider_payment_info_sum_fields:{
		id:"Int",
		stripe_info_id:"Int"
	},
	service_provider_payment_info_var_pop_fields:{
		id:"Float",
		stripe_info_id:"Float"
	},
	service_provider_payment_info_var_samp_fields:{
		id:"Float",
		stripe_info_id:"Float"
	},
	service_provider_payment_info_variance_fields:{
		id:"Float",
		stripe_info_id:"Float"
	},
	stripe_info:{
		charges_enabled:"Boolean",
		details_submitted:"Boolean",
		id:"Int",
		pass_fees_to_customer:"Boolean",
		payouts_enabled:"Boolean",
		requirements:"json",
		service_provider_payment_info:"service_provider_payment_info",
		stripe_id:"String",
		stripe_status:"String"
	},
	stripe_info_aggregate:{
		aggregate:"stripe_info_aggregate_fields",
		nodes:"stripe_info"
	},
	stripe_info_aggregate_fields:{
		avg:"stripe_info_avg_fields",
		count:"Int",
		max:"stripe_info_max_fields",
		min:"stripe_info_min_fields",
		stddev:"stripe_info_stddev_fields",
		stddev_pop:"stripe_info_stddev_pop_fields",
		stddev_samp:"stripe_info_stddev_samp_fields",
		sum:"stripe_info_sum_fields",
		var_pop:"stripe_info_var_pop_fields",
		var_samp:"stripe_info_var_samp_fields",
		variance:"stripe_info_variance_fields"
	},
	stripe_info_avg_fields:{
		id:"Float"
	},
	stripe_info_max_fields:{
		id:"Int",
		stripe_id:"String",
		stripe_status:"String"
	},
	stripe_info_min_fields:{
		id:"Int",
		stripe_id:"String",
		stripe_status:"String"
	},
	stripe_info_mutation_response:{
		affected_rows:"Int",
		returning:"stripe_info"
	},
	stripe_info_stddev_fields:{
		id:"Float"
	},
	stripe_info_stddev_pop_fields:{
		id:"Float"
	},
	stripe_info_stddev_samp_fields:{
		id:"Float"
	},
	stripe_info_sum_fields:{
		id:"Int"
	},
	stripe_info_var_pop_fields:{
		id:"Float"
	},
	stripe_info_var_samp_fields:{
		id:"Float"
	},
	stripe_info_variance_fields:{
		id:"Float"
	},
	subscription_root:{
		chat:"chat",
		chat_aggregate:"chat_aggregate",
		chat_by_pk:"chat",
		chat_participant:"chat_participant",
		chat_participant_aggregate:"chat_participant_aggregate",
		chat_participant_by_pk:"chat_participant",
		chat_participant_stream:"chat_participant",
		chat_stream:"chat",
		customer:"customer",
		customer_aggregate:"customer_aggregate",
		customer_by_pk:"customer",
		customer_stream:"customer",
		deliverer:"deliverer",
		deliverer_aggregate:"deliverer_aggregate",
		deliverer_by_pk:"deliverer",
		deliverer_stream:"deliverer",
		delivery_order:"delivery_order",
		delivery_order_aggregate:"delivery_order_aggregate",
		delivery_order_by_pk:"delivery_order",
		delivery_order_public:"delivery_order_public",
		delivery_order_public_aggregate:"delivery_order_public_aggregate",
		delivery_order_public_stream:"delivery_order_public",
		delivery_order_stream:"delivery_order",
		mez_admin:"mez_admin",
		mez_admin_aggregate:"mez_admin_aggregate",
		mez_admin_by_pk:"mez_admin",
		mez_admin_stream:"mez_admin",
		notification_info:"notification_info",
		notification_info_aggregate:"notification_info_aggregate",
		notification_info_by_pk:"notification_info",
		notification_info_stream:"notification_info",
		restaurant:"restaurant",
		restaurant_aggregate:"restaurant_aggregate",
		restaurant_by_pk:"restaurant",
		restaurant_cart:"restaurant_cart",
		restaurant_cart_aggregate:"restaurant_cart_aggregate",
		restaurant_cart_by_pk:"restaurant_cart",
		restaurant_cart_item:"restaurant_cart_item",
		restaurant_cart_item_aggregate:"restaurant_cart_item_aggregate",
		restaurant_cart_item_by_pk:"restaurant_cart_item",
		restaurant_cart_item_stream:"restaurant_cart_item",
		restaurant_cart_stream:"restaurant_cart",
		restaurant_category:"restaurant_category",
		restaurant_category_aggregate:"restaurant_category_aggregate",
		restaurant_category_by_pk:"restaurant_category",
		restaurant_category_stream:"restaurant_category",
		restaurant_choice:"restaurant_choice",
		restaurant_choice_aggregate:"restaurant_choice_aggregate",
		restaurant_choice_by_pk:"restaurant_choice",
		restaurant_choice_stream:"restaurant_choice",
		restaurant_item:"restaurant_item",
		restaurant_item_aggregate:"restaurant_item_aggregate",
		restaurant_item_by_pk:"restaurant_item",
		restaurant_item_option_map:"restaurant_item_option_map",
		restaurant_item_option_map_aggregate:"restaurant_item_option_map_aggregate",
		restaurant_item_option_map_by_pk:"restaurant_item_option_map",
		restaurant_item_option_map_stream:"restaurant_item_option_map",
		restaurant_item_stream:"restaurant_item",
		restaurant_operator:"restaurant_operator",
		restaurant_operator_aggregate:"restaurant_operator_aggregate",
		restaurant_operator_by_pk:"restaurant_operator",
		restaurant_operator_stream:"restaurant_operator",
		restaurant_option:"restaurant_option",
		restaurant_option_aggregate:"restaurant_option_aggregate",
		restaurant_option_by_pk:"restaurant_option",
		restaurant_option_choice_map:"restaurant_option_choice_map",
		restaurant_option_choice_map_aggregate:"restaurant_option_choice_map_aggregate",
		restaurant_option_choice_map_by_pk:"restaurant_option_choice_map",
		restaurant_option_choice_map_stream:"restaurant_option_choice_map",
		restaurant_option_stream:"restaurant_option",
		restaurant_order:"restaurant_order",
		restaurant_order_aggregate:"restaurant_order_aggregate",
		restaurant_order_by_pk:"restaurant_order",
		restaurant_order_item:"restaurant_order_item",
		restaurant_order_item_aggregate:"restaurant_order_item_aggregate",
		restaurant_order_item_by_pk:"restaurant_order_item",
		restaurant_order_item_stream:"restaurant_order_item",
		restaurant_order_public:"restaurant_order_public",
		restaurant_order_public_aggregate:"restaurant_order_public_aggregate",
		restaurant_order_public_stream:"restaurant_order_public",
		restaurant_order_stream:"restaurant_order",
		restaurant_stream:"restaurant",
		review:"review",
		review_aggregate:"review_aggregate",
		review_by_pk:"review",
		review_stream:"review",
		saved_location:"saved_location",
		saved_location_aggregate:"saved_location_aggregate",
		saved_location_by_pk:"saved_location",
		saved_location_stream:"saved_location",
		service_provider_payment_info:"service_provider_payment_info",
		service_provider_payment_info_aggregate:"service_provider_payment_info_aggregate",
		service_provider_payment_info_by_pk:"service_provider_payment_info",
		service_provider_payment_info_stream:"service_provider_payment_info",
		stripe_info:"stripe_info",
		stripe_info_aggregate:"stripe_info_aggregate",
		stripe_info_by_pk:"stripe_info",
		stripe_info_stream:"stripe_info",
		topology_app_type:"topology_app_type",
		topology_app_type_aggregate:"topology_app_type_aggregate",
		topology_app_type_by_pk:"topology_app_type",
		topology_app_type_stream:"topology_app_type",
		topology_language:"topology_language",
		topology_language_aggregate:"topology_language_aggregate",
		topology_language_by_pk:"topology_language",
		topology_language_stream:"topology_language",
		translation:"translation",
		translation_aggregate:"translation_aggregate",
		translation_by_pk:"translation",
		translation_stream:"translation",
		translation_value:"translation_value",
		translation_value_aggregate:"translation_value_aggregate",
		translation_value_by_pk:"translation_value",
		translation_value_stream:"translation_value",
		user:"user",
		user_aggregate:"user_aggregate",
		user_by_pk:"user",
		user_stream:"user"
	},
	topology_app_type:{
		id:"String"
	},
	topology_app_type_aggregate:{
		aggregate:"topology_app_type_aggregate_fields",
		nodes:"topology_app_type"
	},
	topology_app_type_aggregate_fields:{
		count:"Int",
		max:"topology_app_type_max_fields",
		min:"topology_app_type_min_fields"
	},
	topology_app_type_max_fields:{
		id:"String"
	},
	topology_app_type_min_fields:{
		id:"String"
	},
	topology_app_type_mutation_response:{
		affected_rows:"Int",
		returning:"topology_app_type"
	},
	topology_language:{
		id:"String"
	},
	topology_language_aggregate:{
		aggregate:"topology_language_aggregate_fields",
		nodes:"topology_language"
	},
	topology_language_aggregate_fields:{
		count:"Int",
		max:"topology_language_max_fields",
		min:"topology_language_min_fields"
	},
	topology_language_max_fields:{
		id:"String"
	},
	topology_language_min_fields:{
		id:"String"
	},
	topology_language_mutation_response:{
		affected_rows:"Int",
		returning:"topology_language"
	},
	translation:{
		id:"Int",
		restaurant:"restaurant",
		service_provider_id:"Int",
		service_provider_type:"String",
		translations:"translation_value",
		translations_aggregate:"translation_value_aggregate"
	},
	translation_aggregate:{
		aggregate:"translation_aggregate_fields",
		nodes:"translation"
	},
	translation_aggregate_fields:{
		avg:"translation_avg_fields",
		count:"Int",
		max:"translation_max_fields",
		min:"translation_min_fields",
		stddev:"translation_stddev_fields",
		stddev_pop:"translation_stddev_pop_fields",
		stddev_samp:"translation_stddev_samp_fields",
		sum:"translation_sum_fields",
		var_pop:"translation_var_pop_fields",
		var_samp:"translation_var_samp_fields",
		variance:"translation_variance_fields"
	},
	translation_avg_fields:{
		id:"Float",
		service_provider_id:"Float"
	},
	translation_max_fields:{
		id:"Int",
		service_provider_id:"Int",
		service_provider_type:"String"
	},
	translation_min_fields:{
		id:"Int",
		service_provider_id:"Int",
		service_provider_type:"String"
	},
	translation_mutation_response:{
		affected_rows:"Int",
		returning:"translation"
	},
	translation_stddev_fields:{
		id:"Float",
		service_provider_id:"Float"
	},
	translation_stddev_pop_fields:{
		id:"Float",
		service_provider_id:"Float"
	},
	translation_stddev_samp_fields:{
		id:"Float",
		service_provider_id:"Float"
	},
	translation_sum_fields:{
		id:"Int",
		service_provider_id:"Int"
	},
	translation_value:{
		language:"topology_language",
		language_id:"String",
		translation_group:"translation",
		translation_id:"Int",
		value:"String"
	},
	translation_value_aggregate:{
		aggregate:"translation_value_aggregate_fields",
		nodes:"translation_value"
	},
	translation_value_aggregate_fields:{
		avg:"translation_value_avg_fields",
		count:"Int",
		max:"translation_value_max_fields",
		min:"translation_value_min_fields",
		stddev:"translation_value_stddev_fields",
		stddev_pop:"translation_value_stddev_pop_fields",
		stddev_samp:"translation_value_stddev_samp_fields",
		sum:"translation_value_sum_fields",
		var_pop:"translation_value_var_pop_fields",
		var_samp:"translation_value_var_samp_fields",
		variance:"translation_value_variance_fields"
	},
	translation_value_avg_fields:{
		translation_id:"Float"
	},
	translation_value_max_fields:{
		language_id:"String",
		translation_id:"Int",
		value:"String"
	},
	translation_value_min_fields:{
		language_id:"String",
		translation_id:"Int",
		value:"String"
	},
	translation_value_mutation_response:{
		affected_rows:"Int",
		returning:"translation_value"
	},
	translation_value_stddev_fields:{
		translation_id:"Float"
	},
	translation_value_stddev_pop_fields:{
		translation_id:"Float"
	},
	translation_value_stddev_samp_fields:{
		translation_id:"Float"
	},
	translation_value_sum_fields:{
		translation_id:"Int"
	},
	translation_value_var_pop_fields:{
		translation_id:"Float"
	},
	translation_value_var_samp_fields:{
		translation_id:"Float"
	},
	translation_value_variance_fields:{
		translation_id:"Float"
	},
	translation_var_pop_fields:{
		id:"Float",
		service_provider_id:"Float"
	},
	translation_var_samp_fields:{
		id:"Float",
		service_provider_id:"Float"
	},
	translation_variance_fields:{
		id:"Float",
		service_provider_id:"Float"
	},
	user:{
		deleted:"Boolean",
		email:"String",
		firebase_id:"String",
		id:"Int",
		image:"String",
		language_id:"String",
		name:"String",
		phone:"String"
	},
	user_aggregate:{
		aggregate:"user_aggregate_fields",
		nodes:"user"
	},
	user_aggregate_fields:{
		avg:"user_avg_fields",
		count:"Int",
		max:"user_max_fields",
		min:"user_min_fields",
		stddev:"user_stddev_fields",
		stddev_pop:"user_stddev_pop_fields",
		stddev_samp:"user_stddev_samp_fields",
		sum:"user_sum_fields",
		var_pop:"user_var_pop_fields",
		var_samp:"user_var_samp_fields",
		variance:"user_variance_fields"
	},
	user_avg_fields:{
		id:"Float"
	},
	user_max_fields:{
		email:"String",
		firebase_id:"String",
		id:"Int",
		image:"String",
		language_id:"String",
		name:"String",
		phone:"String"
	},
	user_min_fields:{
		email:"String",
		firebase_id:"String",
		id:"Int",
		image:"String",
		language_id:"String",
		name:"String",
		phone:"String"
	},
	user_mutation_response:{
		affected_rows:"Int",
		returning:"user"
	},
	user_stddev_fields:{
		id:"Float"
	},
	user_stddev_pop_fields:{
		id:"Float"
	},
	user_stddev_samp_fields:{
		id:"Float"
	},
	user_sum_fields:{
		id:"Int"
	},
	user_var_pop_fields:{
		id:"Float"
	},
	user_var_samp_fields:{
		id:"Float"
	},
	user_variance_fields:{
		id:"Float"
	}
}

export class GraphQLError extends Error {
    constructor(public response: GraphQLResponse) {
      super("");
      console.error(response);
    }
    toString() {
      return "GraphQL Response Error";
    }
  }



export type UnwrapPromise<T> = T extends Promise<infer R> ? R : T;
export type ZeusState<T extends (...args: any[]) => Promise<any>> = NonNullable<
  UnwrapPromise<ReturnType<T>>
>;
export type ZeusHook<
  T extends (
    ...args: any[]
  ) => Record<string, (...args: any[]) => Promise<any>>,
  N extends keyof ReturnType<T>
> = ZeusState<ReturnType<T>[N]>;

type Func<P extends any[], R> = (...args: P) => R;
type AnyFunc = Func<any, any>;

type WithTypeNameValue<T> = T & {
  __typename?: true;
};

type AliasType<T> = WithTypeNameValue<T> & {
  __alias?: Record<string, WithTypeNameValue<T>>;
};

type NotUndefined<T> = T extends undefined ? never : T;

export type ResolverType<F> = NotUndefined<F extends [infer ARGS, any] ? ARGS : undefined>;

export type ArgsType<F extends AnyFunc> = F extends Func<infer P, any> ? P : never;

interface GraphQLResponse {
  data?: Record<string, any>;
  errors?: Array<{
    message: string;
  }>;
}

export type ValuesOf<T> = T[keyof T];

export type MapResolve<SRC, DST> = SRC extends {
    __interface: infer INTERFACE;
    __resolve: Record<string, { __typename?: string }> & infer IMPLEMENTORS;
  }
  ?
  ValuesOf<{
    [k in (keyof SRC['__resolve'] & keyof DST)]: ({
      [rk in (keyof SRC['__resolve'][k] & keyof DST[k])]: LastMapTypeSRCResolver<SRC['__resolve'][k][rk], DST[k][rk]>
    } & {
      __typename: SRC['__resolve'][k]['__typename']
    })
  }>
  :
  never;

export type MapInterface<SRC, DST> = SRC extends {
    __interface: infer INTERFACE;
    __resolve: Record<string, { __typename?: string }> & infer IMPLEMENTORS;
  }
  ?
  (MapResolve<SRC, DST> extends never ? {} : MapResolve<SRC, DST>) & {
  [k in (keyof SRC['__interface'] & keyof DST)]: LastMapTypeSRCResolver<SRC['__interface'][k], DST[k]>
} : never;

export type ValueToUnion<T> = T extends {
  __typename: infer R;
}
  ? {
      [P in keyof Omit<T, '__typename'>]: T[P] & {
        __typename: R;
      };
    }
  : T;

export type ObjectToUnion<T> = {
  [P in keyof T]: T[P];
}[keyof T];

type Anify<T> = { [P in keyof T]?: any };


type LastMapTypeSRCResolver<SRC, DST> = SRC extends undefined
  ? undefined
  : SRC extends Array<infer AR>
  ? LastMapTypeSRCResolver<AR, DST>[]
  : SRC extends { __interface: any; __resolve: any }
  ? MapInterface<SRC, DST>
  : SRC extends { __union: any; __resolve: infer RESOLVE }
  ? ObjectToUnion<MapType<RESOLVE, ValueToUnion<DST>>>
  : DST extends boolean
  ? SRC
  : MapType<SRC, DST>;

export type MapType<SRC extends Anify<DST>, DST> = DST extends boolean
  ? SRC
  : DST extends {
      __alias: any;
    }
  ? {
      [A in keyof DST["__alias"]]: Required<SRC> extends Anify<
        DST["__alias"][A]
      >
        ? MapType<Required<SRC>, DST["__alias"][A]>
        : never;
    } &
      {
        [Key in keyof Omit<DST, "__alias">]: DST[Key] extends [
          any,
          infer PAYLOAD
        ]
          ? LastMapTypeSRCResolver<SRC[Key], PAYLOAD>
          : LastMapTypeSRCResolver<SRC[Key], DST[Key]>;
      }
  : {
      [Key in keyof DST]: DST[Key] extends [any, infer PAYLOAD]
        ? LastMapTypeSRCResolver<SRC[Key], PAYLOAD>
        : LastMapTypeSRCResolver<SRC[Key], DST[Key]>;
    };

type OperationToGraphQL<V, T> = <Z extends V>(o: Z | V, variables?: Record<string, any>) => Promise<MapType<T, Z>>;

type CastToGraphQL<V, T> = (
  resultOfYourQuery: any
) => <Z extends V>(o: Z | V) => MapType<T, Z>;

type fetchOptions = ArgsType<typeof fetch>;

export type SelectionFunction<V> = <T>(t: T | V) => T;
type FetchFunction = (query: string, variables?: Record<string, any>) => Promise<any>;



export const ZeusSelect = <T>() => ((t: any) => t) as SelectionFunction<T>;

export const ScalarResolver = (scalar: string, value: any) => {
  switch (scalar) {
    case 'String':
      return  `${JSON.stringify(value)}`;
    case 'Int':
      return `${value}`;
    case 'Float':
      return `${value}`;
    case 'Boolean':
      return `${value}`;
    case 'ID':
      return `"${value}"`;
    case 'enum':
      return `${value}`;
    case 'scalar':
      return `${value}`;
    default:
      return false;
  }
};


export const TypesPropsResolver = ({
    value,
    type,
    name,
    key,
    blockArrays
}: {
    value: any;
    type: string;
    name: string;
    key?: string;
    blockArrays?: boolean;
}): string => {
    if (value === null) {
        return `null`;
    }
    let resolvedValue = AllTypesProps[type][name];
    if (key) {
        resolvedValue = resolvedValue[key];
    }
    if (!resolvedValue) {
        throw new Error(`Cannot resolve ${type} ${name}${key ? ` ${key}` : ''}`)
    }
    const typeResolved = resolvedValue.type;
    const isArray = resolvedValue.array;
    const isArrayRequired = resolvedValue.arrayRequired;
    if (typeof value === 'string' && value.startsWith(`ZEUS_VAR$`)) {
        const isRequired = resolvedValue.required ? '!' : '';
        let t = `${typeResolved}`;
        if (isArray) {
          if (isRequired) {
              t = `${t}!`;
          }
          t = `[${t}]`;
          if(isArrayRequired){
            t = `${t}!`;
          }
        }else{
          if (isRequired) {
                t = `${t}!`;
          }
        }
        return `\$${value.split(`ZEUS_VAR$`)[1]}__ZEUS_VAR__${t}`;
    }
    if (isArray && !blockArrays) {
        return `[${value
        .map((v: any) => TypesPropsResolver({ value: v, type, name, key, blockArrays: true }))
        .join(',')}]`;
    }
    const reslovedScalar = ScalarResolver(typeResolved, value);
    if (!reslovedScalar) {
        const resolvedType = AllTypesProps[typeResolved];
        if (typeof resolvedType === 'object') {
        const argsKeys = Object.keys(resolvedType);
        return `{${argsKeys
            .filter((ak) => value[ak] !== undefined)
            .map(
            (ak) => `${ak}:${TypesPropsResolver({ value: value[ak], type: typeResolved, name: ak })}`
            )}}`;
        }
        return ScalarResolver(AllTypesProps[typeResolved], value) as string;
    }
    return reslovedScalar;
};


const isArrayFunction = (
  parent: string[],
  a: any[]
) => {
  const [values, r] = a;
  const [mainKey, key, ...keys] = parent;
  const keyValues = Object.keys(values).filter((k) => typeof values[k] !== 'undefined');

  if (!keys.length) {
      return keyValues.length > 0
        ? `(${keyValues
            .map(
              (v) =>
                `${v}:${TypesPropsResolver({
                  value: values[v],
                  type: mainKey,
                  name: key,
                  key: v
                })}`
            )
            .join(',')})${r ? traverseToSeekArrays(parent, r) : ''}`
        : traverseToSeekArrays(parent, r);
    }

  const [typeResolverKey] = keys.splice(keys.length - 1, 1);
  let valueToResolve = ReturnTypes[mainKey][key];
  for (const k of keys) {
    valueToResolve = ReturnTypes[valueToResolve][k];
  }

  const argumentString =
    keyValues.length > 0
      ? `(${keyValues
          .map(
            (v) =>
              `${v}:${TypesPropsResolver({
                value: values[v],
                type: valueToResolve,
                name: typeResolverKey,
                key: v
              })}`
          )
          .join(',')})${r ? traverseToSeekArrays(parent, r) : ''}`
      : traverseToSeekArrays(parent, r);
  return argumentString;
};


const resolveKV = (k: string, v: boolean | string | { [x: string]: boolean | string }) =>
  typeof v === 'boolean' ? k : typeof v === 'object' ? `${k}{${objectToTree(v)}}` : `${k}${v}`;


const objectToTree = (o: { [x: string]: boolean | string }): string =>
  `{${Object.keys(o).map((k) => `${resolveKV(k, o[k])}`).join(' ')}}`;


const traverseToSeekArrays = (parent: string[], a?: any): string => {
  if (!a) return '';
  if (Object.keys(a).length === 0) {
    return '';
  }
  let b: Record<string, any> = {};
  if (Array.isArray(a)) {
    return isArrayFunction([...parent], a);
  } else {
    if (typeof a === 'object') {
      Object.keys(a)
        .filter((k) => typeof a[k] !== 'undefined')
        .map((k) => {
        if (k === '__alias') {
          Object.keys(a[k]).map((aliasKey) => {
            const aliasOperations = a[k][aliasKey];
            const aliasOperationName = Object.keys(aliasOperations)[0];
            const aliasOperation = aliasOperations[aliasOperationName];
            b[
              `${aliasOperationName}__alias__${aliasKey}: ${aliasOperationName}`
            ] = traverseToSeekArrays([...parent, aliasOperationName], aliasOperation);
          });
        } else {
          b[k] = traverseToSeekArrays([...parent, k], a[k]);
        }
      });
    } else {
      return '';
    }
  }
  return objectToTree(b);
};  


const buildQuery = (type: string, a?: Record<any, any>) => 
  traverseToSeekArrays([type], a);


const inspectVariables = (query: string) => {
  const regex = /\$\b\w*__ZEUS_VAR__\[?[^!^\]^\s^,^\)^\}]*[!]?[\]]?[!]?/g;
  let result;
  const AllVariables: string[] = [];
  while ((result = regex.exec(query))) {
    if (AllVariables.includes(result[0])) {
      continue;
    }
    AllVariables.push(result[0]);
  }
  if (!AllVariables.length) {
    return query;
  }
  let filteredQuery = query;
  AllVariables.forEach((variable) => {
    while (filteredQuery.includes(variable)) {
      filteredQuery = filteredQuery.replace(variable, variable.split('__ZEUS_VAR__')[0]);
    }
  });
  return `(${AllVariables.map((a) => a.split('__ZEUS_VAR__'))
    .map(([variableName, variableType]) => `${variableName}:${variableType}`)
    .join(', ')})${filteredQuery}`;
};


const queryConstruct = (t: 'query' | 'mutation' | 'subscription', tName: string) => (o: Record<any, any>) =>
  `${t.toLowerCase()}${inspectVariables(buildQuery(tName, o))}`;
  

const fullChainConstruct = (fn: FetchFunction) => (t: 'query' | 'mutation' | 'subscription', tName: string) => (
  o: Record<any, any>,
  variables?: Record<string, any>,
) => fn(queryConstruct(t, tName)(o), variables).then((r:any) => { 
  seekForAliases(r)
  return r
});


const seekForAliases = (response: any) => {
  const traverseAlias = (value: any) => {
    if (Array.isArray(value)) {
      value.forEach(seekForAliases);
    } else {
      if (typeof value === 'object') {
        seekForAliases(value);
      }
    }
  };
  if (typeof response === 'object' && response) {
    const keys = Object.keys(response);
    if (keys.length < 1) {
      return;
    }
    keys.forEach((k) => {
      const value = response[k];
      if (k.indexOf('__alias__') !== -1) {
        const [operation, alias] = k.split('__alias__');
        response[alias] = {
          [operation]: value,
        };
        delete response[k];
      }
      traverseAlias(value);
    });
  }
};


export const $ = (t: TemplateStringsArray): any => `ZEUS_VAR$${t.join('')}`;


const handleFetchResponse = (
  response: Parameters<Extract<Parameters<ReturnType<typeof fetch>['then']>[0], Function>>[0]
): Promise<GraphQLResponse> => {
  if (!response.ok) {
    return new Promise((_, reject) => {
      response.text().then(text => {
        try { reject(JSON.parse(text)); }
        catch (err) { reject(text); }
      }).catch(reject);
    });
  }
  return response.json();
};

const apiFetch = (options: fetchOptions) => (query: string, variables: Record<string, any> = {}) => {
    let fetchFunction;
    let queryString = query;
    let fetchOptions = options[1] || {};
    try {
        fetchFunction = require('node-fetch');
    } catch (error) {
        throw new Error("Please install 'node-fetch' to use zeus in nodejs environment");
    }
    if (fetchOptions.method && fetchOptions.method === 'GET') {
      try {
          queryString = require('querystring').stringify(query);
      } catch (error) {
          throw new Error("Something gone wrong 'querystring' is a part of nodejs environment");
      }
      return fetchFunction(`${options[0]}?query=${queryString}`, fetchOptions)
        .then(handleFetchResponse)
        .then((response: GraphQLResponse) => {
          if (response.errors) {
            throw new GraphQLError(response);
          }
          return response.data;
        });
    }
    return fetchFunction(`${options[0]}`, {
      body: JSON.stringify({ query: queryString, variables }),
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      ...fetchOptions
    })
      .then(handleFetchResponse)
      .then((response: GraphQLResponse) => {
        if (response.errors) {
          throw new GraphQLError(response);
        }
        return response.data;
      });
  };
  


export const Thunder = (fn: FetchFunction) => ({
  query: ((o: any, variables) =>
    fullChainConstruct(fn)('query', 'query_root')(o, variables).then(
      (response: any) => response
    )) as OperationToGraphQL<ValueTypes["query_root"],query_root>,
mutation: ((o: any, variables) =>
    fullChainConstruct(fn)('mutation', 'mutation_root')(o, variables).then(
      (response: any) => response
    )) as OperationToGraphQL<ValueTypes["mutation_root"],mutation_root>,
subscription: ((o: any, variables) =>
    fullChainConstruct(fn)('subscription', 'subscription_root')(o, variables).then(
      (response: any) => response
    )) as OperationToGraphQL<ValueTypes["subscription_root"],subscription_root>
});

export const Chain = (...options: fetchOptions) => ({
  query: ((o: any, variables) =>
    fullChainConstruct(apiFetch(options))('query', 'query_root')(o, variables).then(
      (response: any) => response
    )) as OperationToGraphQL<ValueTypes["query_root"],query_root>,
mutation: ((o: any, variables) =>
    fullChainConstruct(apiFetch(options))('mutation', 'mutation_root')(o, variables).then(
      (response: any) => response
    )) as OperationToGraphQL<ValueTypes["mutation_root"],mutation_root>,
subscription: ((o: any, variables) =>
    fullChainConstruct(apiFetch(options))('subscription', 'subscription_root')(o, variables).then(
      (response: any) => response
    )) as OperationToGraphQL<ValueTypes["subscription_root"],subscription_root>
});
export const Zeus = {
  query: (o:ValueTypes["query_root"]) => queryConstruct('query', 'query_root')(o),
mutation: (o:ValueTypes["mutation_root"]) => queryConstruct('mutation', 'mutation_root')(o),
subscription: (o:ValueTypes["subscription_root"]) => queryConstruct('subscription', 'subscription_root')(o)
};
export const Cast = {
  query: ((o: any) => (_: any) => o) as CastToGraphQL<
  ValueTypes["query_root"],
  query_root
>,
mutation: ((o: any) => (_: any) => o) as CastToGraphQL<
  ValueTypes["mutation_root"],
  mutation_root
>,
subscription: ((o: any) => (_: any) => o) as CastToGraphQL<
  ValueTypes["subscription_root"],
  subscription_root
>
};
export const Selectors = {
  query: ZeusSelect<ValueTypes["query_root"]>(),
mutation: ZeusSelect<ValueTypes["mutation_root"]>(),
subscription: ZeusSelect<ValueTypes["subscription_root"]>()
};
  

export const Gql = Chain('http://localhost:8080/v1/graphql')