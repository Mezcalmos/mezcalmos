# Set app_version of customer
mutation set_customer_app_version($customer_id: Int!, $version: String!) {
  update_customer_customer_by_pk(
    pk_columns: { user_id: $customer_id }
    _set: { app_version: $version }
  ) {
    app_version
  }
}

mutation set_notif_token($customer_id: Int!, $token: String!) {
  update_notification_info(
    where: { user_id: { _eq: $customer_id } }
    _set: { token: $token }
  ) {
    returning {
      token
    }
  }
}

# Get customer's infos
query get_customer_info($customer_id: Int!) {
  customer_customer(where: { user_id: { _eq: $customer_id } }) {
    app_version
    notification_info {
      token
      turn_off_notifications
    }
    user {
      id
      name
      image
      email
      phone
      language_id
    }
    # stripe_info
    saved_locations(where: { customer_id: { _eq: $customer_id } }) {
      id
      name
      location_gps
      location_text
      default
    }
  }
}

# Set customer's infos
mutation set_customer_info($user_id: Int!, $app_version: String!) {
  insert_customer_customer_one(
    object: { user_id: $user_id, app_version: $app_version }
  ) {
    user_id
  }
}

query get_customer_orders(
  $custId: Int!
  $inProcess: Boolean!
  $limit: Int
  $offset: Int
) {
  customer_minimal_orders(
    args: { cus_id: $custId }
    where: { in_process: { _eq: $inProcess } }
    order_by: { order_time: desc }
    offset: $offset
    limit: $limit
  ) {
    id
    image
    in_process
    name
    delivery_cost
    to_address
    order_time
    order_type
    payment_type
    status
    total_cost
  }
}
subscription listen_on_customer_orders($custId: Int!, $inProcess: Boolean!) {
  customer_minimal_orders(
    args: { cus_id: $custId }
    where: { in_process: { _eq: $inProcess } }
  ) {
    id
    image
    in_process
    name
    delivery_cost
    to_address
    order_time
    order_type
    payment_type
    status
    total_cost
  }
}

mutation updateDriverOrderReviewId($orderId: Int!, $reviewId: Int!) {
  update_delivery_order_by_pk(
    pk_columns: { id: $orderId }
    _set: { driver_review_by_customer_id: $reviewId }
  ) {
    driver_review_by_customer_id
  }
}
mutation updateRestaurantOrderReviewId($orderId: Int!, $reviewId: Int!) {
  update_restaurant_order_by_pk(
    pk_columns: { id: $orderId }
    _set: { review_id: $reviewId }
  ) {
    review_id
  }
}
mutation updateLaundryOrderReviewId($orderId: Int!, $reviewId: Int!) {
  update_laundry_order_by_pk(
    pk_columns: { id: $orderId }
    _set: { review_id: $reviewId }
  ) {
    review_id
  }
}
query getCustomerOrdersByType($custId: Int!, $orderType: String!) {
  customer_minimal_orders_aggregate(where: {order_type: {_eq: $orderType}, in_process: {_eq: true}}, args: {cus_id: $custId}) {
    aggregate {
      count
    }
  }
}

