
# Get all customer's saved location using fk.

query getCustomerLocations($customer_id: Int!) {
  saved_locations(where:{user_id : {_eq: $customer_id}})
  {
    id,
    name,
    location_gps,
    address,
    default
  }
}


# Get a specific saved_location using pk.

query getSavedLocation($location_id: Int!){
  saved_locations_by_pk(id: $location_id)
  {
    id,
    name,
    location_gps,
    address,
    default
  }
}


# Update Location by pk.

mutation updateSavedLocation($location_id: saved_locations_pk_columns_input!, $gps: geography, $name: String!, $default: Boolean!, $address: String!)
{
  update_saved_locations_by_pk(pk_columns: $location_id, _set :{ location_gps: $gps, address: $address, default: $default, name : $name })
  {
      id,
      name,
      location_gps,
      address,
      default
  }
}

# delete a specific Location by pk
mutation deleteSavedLocation($location_id: Int!)
{
    delete_saved_locations_by_pk(id: $location_id)
    {
        name 
    }
}


# Insert a new Saved_Location
mutation addSavedLocation($saved_location: saved_locations_insert_input!)
{
 	insert_saved_locations_one(object:$saved_location)
    {
        id
    }
}
