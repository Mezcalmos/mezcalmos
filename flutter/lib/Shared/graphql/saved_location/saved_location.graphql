
# Get all customer's saved location using fk.
query get_customer_locations($customer_id: Int!) {
  saved_location(where:{customer_id : {_eq: $customer_id}})
  {
    id,
    name,
    location_gps,
    location_text,
    default
  }
}


# Get a specific saved_location using pk.
query get_saved_location_by_id($location_id: Int!){
  saved_location_by_pk(id: $location_id)
  {
    id,
    name,
    location_gps,
    location_text,
    default
  }
}


# Update Location by pk.
mutation update_saved_location($location_id: saved_location_pk_columns_input!, $gps: geography, $name: String!, $default: Boolean!, $address: String!)
{
  update_saved_location_by_pk(pk_columns: $location_id, _set :{ location_gps: $gps, location_text: $address, default: $default, name : $name })
  {
      id,
      name,
      location_gps,
      location_text,
      default
  }
}

# delete a specific Location by pk
mutation delete_saved_location($location_id: Int!)
{
    delete_saved_location_by_pk(id: $location_id)
    {
        name 
    }
}


# Insert a new Saved_Location
mutation add_saved_location($saved_location: saved_location_insert_input!)
{
 	  insert_saved_location_one(object:$saved_location)
    {
        id
    }
}
