mutation subscribeRestaurant($customer_id: Int, $service_provider_id: Int) {
  insert_service_provider_subscriber_one(object: {customer_id: $customer_id, service_provider_id: $service_provider_id, service_provider_type: "restaurant"}) {
    id
  }
}

query getSubscribedRestaurants($_eq: Int) {
  service_provider_subscriber(where: {service_provider_type: {_eq: "restaurant"}, _and: {customer_id: {_eq: $_eq}}}) {
    id
    restaurant {
    details   {name}
    }
  }
}

mutation addFavouriteItem($customer_id: Int, $restaurant_id: Int, $restaurant_item_id: Int) {
  insert_customer_favourited_item_one(object: {customer_id: $customer_id, restaurant_id: $restaurant_id, restaurant_item_id: $restaurant_item_id}) {
    id
  }
}

query getFavouriteItems($_eq: Int) {
  customer_favourited_item(where: {customer_id: {_eq: $_eq}}) {
    restaurant_item_id
  }
}

query fetch_subscribed_posts($customer_id: Int, $limit: Int, $offset: Int) {
  service_provider_post(
    limit: $limit, 
    offset: $offset, 
    where: {
      _or: [{
        business: {
          subscribers: {
            customer_id: {
              _eq: $customer_id
            }
          }
        }
      }, {
        laundry: {
          subscribers: {
            customer_id: {
              _eq: $customer_id
            }
          }
        }
      }, {
        delivery_company: {
          subscribers: {
            customer_id: {
              _eq: $customer_id
            }
          }
        }
      }, {
        restaurant: {
          subscribers: {
            customer_id: {
              _eq: $customer_id
            }
          }
        }
      }]
    }, 
    order_by: {
      posted_on: desc
    }
  ) {
    comments
    id
    image
    likes
    link
    message
    posted_on
    service_provider_id
    service_provider_type
    restaurant {
      details {
        name
        image
      }
    }
    laundry {
      details {
        name
        image
      }
    }
    delivery_company {
      details {
        name
        image
      }
    }
    business {
      details {
        name
        image
      }
    }
  }
}

mutation write_comment($id: Int!, $comments: jsonb) {
  update_service_provider_post_by_pk(pk_columns: {id: $id}, _append: {comments: $comments}) {
    id
  }
}

mutation like_post($id: Int!, $customer_id: jsonb) {
  update_service_provider_post_by_pk(pk_columns: {id: $id}, _append: {likes: $customer_id}) {
    id
  }
}

mutation create_post($image: String, $message: String, $service_provider_id: Int!, $service_provider_type: String) {
  insert_service_provider_post_one(object: {image: $image, message: $message, service_provider_id: $service_provider_id, service_provider_type: $service_provider_type}) {
    id
    posted_on
  }
}

query fetch_service_provider_posts($service_provider_id: Int, $service_provider_type: String) {
  service_provider_post(where: {service_provider_id: {_eq: $service_provider_id}, service_provider_type: {_eq: $service_provider_type}}) {
    comments
    id
    image
    likes
    message
    link
    posted_on
  }
}