query getFavouriteItems($_eq: Int) {
  customer_favourited_item(where: {customer_id: {_eq: $_eq}}) {
    restaurant_item_id
  }
}

query fetch_subscribed_posts($customer_id: Int, $limit: Int, $offset: Int) {
  service_provider_post(
    limit: $limit, 
    offset: $offset, 
    where: {
      _or: [{
        business: {
          subscribers: {
            customer_id: {
              _eq: $customer_id
            }
          }
        }
      }, {
        laundry: {
          subscribers: {
            customer_id: {
              _eq: $customer_id
            }
          }
        }
      }, {
        delivery_company: {
          subscribers: {
            customer_id: {
              _eq: $customer_id
            }
          }
        }
      }, {
        restaurant: {
          subscribers: {
            customer_id: {
              _eq: $customer_id
            }
          }
        }
      }]
    }, 
    order_by: {
      posted_on: desc
    }
  ) {
    comments {
      id
      message
      likes
      commented_on
      user {
        id
        name
        image
      }
    }
    id
    image
    likes
    link
    message
    posted_on
    service_provider_id
    service_provider_type
    restaurant {
      details {
        name
        image
      }
    }
    laundry {
      details {
        name
        image
      }
    }
    delivery_company {
      details {
        name
        image
      }
    }
    business {
      details {
        name
        image
      }
    }
  }
}

query fetch_service_provider_posts($service_provider_id: Int, $service_provider_type: String, $limit: Int, $offset: Int, $image: String_comparison_exp = {}) {
  service_provider_post(where: {service_provider_id: {_eq: $service_provider_id}, service_provider_type: {_eq: $service_provider_type}, image: $image}, limit: $limit, offset: $offset) {
    comments {
      id
      message
      likes
      commented_on
      user {
        id
        name
        image
      }
    }
    id
    image
    likes
    message
    link
    posted_on
  }
}

query fetch_posts_within_distance($limit: Int, $offset: Int, $from: geography!, $distance: Float!) {
  service_provider_post(
    limit: $limit, 
    offset: $offset, 
    where: {
      _or: [{
        business: {
          details: {
            location: {
							gps: {
                _st_d_within: {
                  distance: $distance,
                  from: $from
                }
              }
            }
          }
        }
      }, {
        laundry: {
          details: {
            location: {
							gps: {
                _st_d_within: {
                  distance: $distance,
                  from: $from
                }
              }
            }
          }
        }
      }, {
        delivery_company: {
          details: {
            location: {
							gps: {
                _st_d_within: {
                  distance: $distance,
                  from: $from
                }
              }
            }
          }
        }
      }, {
        restaurant: {
          details: {
            location: {
							gps: {
                _st_d_within: {
                  distance: $distance,
                  from: $from
                }
              }
            }
          }
        }
      }]
    }, 
    order_by: {
      posted_on: desc
    }
  ) {
    comments {
      id
      message
      likes
      commented_on
      user {
        id
        name
        image
      }
    }
    id
    image
    likes
    link
    message
    posted_on
    service_provider_id
    service_provider_type
    restaurant {
      details {
        name
        image
      }
    }
    laundry {
      details {
        name
        image
      }
    }
    delivery_company {
      details {
        name
        image
      }
    }
    business {
      details {
        name
        image
      }
    }
  }
}

query fetch_subscribers($service_provider_id: Int, $service_provider_type: String) {
  service_provider_subscriber(where: {service_provider_id: {_eq: $service_provider_id}, service_provider_type: {_eq: $service_provider_type}}) {
    customer_id
    id
  }
}

mutation subscribe_service_provider($customer_id: Int, $service_provider_id: Int, $service_provider_type: String) {
  insert_service_provider_subscriber_one(object: {customer_id: $customer_id, service_provider_id: $service_provider_id, service_provider_type: $service_provider_type}) {
    id
  }
}

mutation unsubscribe_service_provider($customer_id: Int, $service_provider_id: Int, $service_provider_type: String) {
  delete_service_provider_subscriber(where: {customer_id: {_eq: $customer_id}, service_provider_id: {_eq: $service_provider_id}, service_provider_type: {_eq: $service_provider_type}}) {
    affected_rows
  }
}

mutation write_comment($post_id: Int!, $message: String!, $user_id: Int!) {
  insert_service_provider_post_comment_one(object: {post_id: $post_id, message: $message, user_id: $user_id}) {
    id
    commented_on
  }
}

mutation update_comment_likes($id: Int!, $likes: jsonb) {
  update_service_provider_post_comment_by_pk(pk_columns: {id: $id}, _set: {likes: $likes}) {
    id
  }
}

mutation update_post_likes($id: Int!, $likes: jsonb) {
  update_service_provider_post_by_pk(pk_columns: {id: $id}, _set: {likes: $likes}) {
    id
  }
}

mutation create_post($image: String, $message: String, $service_provider_id: Int!, $service_provider_type: String) {
  insert_service_provider_post_one(object: {image: $image, message: $message, service_provider_id: $service_provider_id, service_provider_type: $service_provider_type}) {
    id
    posted_on
  }
}

mutation delete_post($id: Int!) {
  delete_service_provider_post_by_pk(id: $id) {
    id
  }
}

mutation delete_comment($id: Int!) {
  delete_service_provider_post_comment_by_pk(id: 10) {
    post_id
  }
}

mutation addFavouriteItem($customer_id: Int, $restaurant_id: Int, $restaurant_item_id: Int) {
  insert_customer_favourited_item_one(object: {customer_id: $customer_id, restaurant_id: $restaurant_id, restaurant_item_id: $restaurant_item_id}) {
    id
  }
}