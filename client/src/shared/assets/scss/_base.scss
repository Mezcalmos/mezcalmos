.flex {
    display: flex;
}

.wrap {
    flex-wrap: wrap;
}

.center {
    justify-content: center;
}

.space_between {
    justify-content: space-between;
}

.space_around {
    justify-content: space-around;
}

.start {
    justify-content: flex-start;
}

.end {
    justify-content: flex-end;
}

.align_center {
    align-items: center;
}

.align_baseline {
    align-items: baseline;
}

.txt_center {
    text-align: center;
}

.txt_left {
    text-align: left;
}

.txt_right {
    text-align: right;
}

.fill_width {
    width: 100%
}

.fill_height {
    height: 100%;
}

.overlay::after {
    content: "";
    background: rgba(0, 0, 0, 0.83);
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 5
}

.pointer {
    cursor: pointer;
}

.container {
    width: 728px !important;
    margin: 0 auto;

    @media (max-width: 768px) {
        width: 100% !important;
        padding: 0 1rem;
        overflow: auto;
    }


}

.elevate_1 {
    box-shadow: 0 2px 5px rgba(35, 97, 241, 0.2) !important;
}

.elevate_2 {
    box-shadow: 0 6px 10px rgba(35, 97, 241, 0.2);
}

.fit_container {
    width: calc(100% - 2rem) !important;
}

.relative {
    position: relative;
}

html {
    font-size: 16px;

    @media (max-width: 480px) {
        font-size: 14px;
    }
}

.ml-2 {
    margin-left: .6rem;
}

.border {
    border: $border
}

.btn {
    box-shadow: 0 6px 10px rgba(35, 97, 241, 0.2);
    border-radius: 4px;
    border: none;
    height: 3rem;
    position: relative;
    cursor: pointer;

    &:hover::before {
        content: "";
        background: rgba(0, 0, 0, 0.13);
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 0;
        border-radius: inherit;
    }

    &:focus {
        outline: none;
    }

    span {
        position: relative;
        z-index: 2;
    }
}

.input {

    height: 3rem;
    width: 100%;
    background: transparent;
    border: none;
    outline: none;
    border-radius: 4px;
    border: $border;
    padding: 1rem;
}

.black {
    color: map-get($colors, black)
}